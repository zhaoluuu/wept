"use strict";let e=[],t=[];const a=e=>Object.prototype.toString.call(e).slice(8,-1).toLowerCase();function r(e,t){if(!e&&!t)return 0;if(!e)return-1;if(!t)return 1;const a=/\d+/g,r=e.match(a),s=t.match(a);if(!r)return-1;if(!s)return 1;const n=r.map(e=>parseInt(e,10)),i=s.map(e=>parseInt(e,10)),o=r.length>s.length?s.length:r.length;for(let e=0;e<o;e++){if(n[e]<i[e])return-1;if(n[e]>i[e])return 1}return n.length===i.length?0:n.length<i.length?-1:1}function s(e,t,a){self.postMessage({error:e,result:t,ext:a})}self.onmessage=n=>{if(n.data)switch(n.data.msgType){case"evaluate":n.data.msgData&&n.data.msgData.message&&function(e,n,i){const o=t||[];for(const t of o)try{if(t.errorBefore||t.usedSession===i.session)break;const o=t.config;let c=!0;if(o.scope&&"array"===a(o.scope)&&o.scope.length>0){c=!1;for(const e of o.scope)switch(e.type){case"lib":{if(!n)continue;const t=n.libVersion;if(e.target)switch(e.operator){case"=":{const r=a(e.target);if("string"===r){if(t===e.target){c=!0;break}}else if("array"===r)for(const a of e.target)if(a===t){c=!0;break}break}case"<":if("string"===a(e.target)&&r(t,e.target)<0){c=!0;break}break;case">":if("string"===a(e.target)&&r(t,e.target)>0){c=!0;break}break;case"<=":if("string"===a(e.target)&&!(r(t,e.target)>0)){c=!0;break}break;case">=":if("string"===a(e.target)&&!(r(t,e.target)<0)){c=!0;break}break}break}}}if(!c)continue;if("full"===o.matchType&&o.match===e||"reg"===o.matchType&&new RegExp(o.match).test(e)){s(null,{config:o},i),t.usedSession=i.session;break}}catch(e){s(`appservice.js error while processing rule ${t.logid}: ${e}`),t&&(t.errorBefore=!0)}}(n.data.msgData.message,n.data.msgData.context,n.data.msgData.ext);break;case"refreshSession":t=JSON.parse(JSON.stringify(e||"[]"));break;case"updateConfig":e=n.data.msgData,t=JSON.parse(JSON.stringify(e||"[]"))}};