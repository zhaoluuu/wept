"use strict";var e;const t=require("vm"),n=require("fs"),r=require("path"),o=require("inspector"),a={getSystemInfo:!0,getBackgroundAudioState:!0,setBackgroundAudioState:!0,operateBackgroundAudio:!0,createRequestTask:!0,createUploadTask:!0,createDownloadTask:!0,createSocketTask:!0,operateSocketTask:!0,createAudioInstance:!0};function c(e){return!!a[e]||e.endsWith("Sync")}var{fileRootPath:s,tempFilePath:i,devVendorPath:l}=process.env;const u=JSON.parse(process.env.fileSort||"");let p=1219,d=0;for(;;)try{o.open(p);break}catch(e){p++}const v=Object.assign({},console);Object.freeze(v);var f={console:v,nodeRequire:e=>require(r.join(s,e)),setTimeout:setTimeout,setInterval:setInterval},g=t.createContext(f);function h(e){var t;null===(t=process.send)||void 0===t||t.call(process,{type:"sendMsgToCli",data:e})}process.on("message",e=>{const{cliMsg:o,type:a}=e;console.warn("[REMOTE]  receive msg id: "+o.id),"handleAddInterface"===a?function(e){const t=e.name,o=e.methods,a={};o.forEach(e=>{a[e.name]=function(){const t=arguments;function o(n=0){h({event:"callInterface",method:e.name,args:Array.prototype.slice.call(t),callbackId:n})}const a=arguments[0];if("invokeHandler"===e.name&&c(a)){const e=arguments[2];o(e);const t=Date.now();let c=!1;const s=r.join(i,""+e);for(;!n.existsSync(s);)if(Date.now()-t>1e4){console.error(`call sync api ${a} time out`),c=!0;break}if(console.warn(`[REMOTE]  sync api ${a} cost time : ${Date.now()-t}`),!c){const e=n.readFileSync(s,"utf8");return n.unlinkSync(s),e}return JSON.stringify({errMsg:a+":fail sync timeout"})}o()}}),f[t]=a}(o):"handleEvaluateJavascript"===a&&function(e){const o=e.pubLib;let a=e.script;const c=e.callbackId;let s;console.log(e),1===d?(d++,u.forEach(e=>{const n=`\n        var code = nodeRequire('${e}');\n        var define = this.define\n        var require = this.require\n        var App = this.App\n        var Page = this.Page\n        var getApp = this.getApp\n        var wx = this.wx\n\n        code(define, require, App, Page, getApp, wx)`;try{s=t.runInContext(n,g)}catch(e){console.error("[remoteLogPrefix] run appservice error "+e)}}),a="var a = 100;",console.warn("[REMOTE]  run init appservice.js")):a&&a.indexOf("!__wxRouteBegin")>0?a=a.replace("!__wxRouteBegin","false").replace("__wxRouteBegin","var __wxRouteBegin"):o&&(0===d?(a=n.readFileSync(r.join(l,"publib_ios.js"),"utf8"),a=a.replace("!__wxRouteBegin","false").replace("__wxRouteBegin","var __wxRouteBegin"),console.warn("[REMOTE]  run init pubLib.js"),d++):a="var a = 10");try{s=t.runInContext(a,g)}catch(e){console.error("[remoteLogPrefix] run vm error "+e)}console.log("ret :",s),"object"==typeof s&&(s="");h({callbackId:c,event:"evaluateCallback",ret:void 0===s?"":JSON.stringify(s)})}(o)}),null===(e=process.send)||void 0===e||e.call(process,{type:"vm_init",url:o.url()}),console.warn("[REMOTE]  inspector url "+o.url());