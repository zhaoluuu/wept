import*as TextUtils from"../text_utils/text_utils.js";import{HeapSnapshotHeader,HeapSnapshotProgress,JSHeapSnapshot}from"./HeapSnapshot.js";import{HeapSnapshotWorkerDispatcher}from"./HeapSnapshotWorkerDispatcher.js";export class HeapSnapshotLoader{constructor(s){this._reset(),this._progress=new HeapSnapshotProgress(s),this._buffer="",this._dataCallback=null,this._done=!1,this._parseInput()}dispose(){this._reset()}_reset(){this._json="",this._snapshot={}}close(){this._done=!0,this._dataCallback&&this._dataCallback("")}buildSnapshot(){this._progress.updateStatus(ls`Processing snapshot…`);const s=new JSHeapSnapshot(this._snapshot,this._progress);return this._reset(),s}_parseUintArray(){let s=0;const t="0".charCodeAt(0),n="9".charCodeAt(0),a="]".charCodeAt(0),i=this._json.length;for(;;){for(;s<i;){const i=this._json.charCodeAt(s);if(t<=i&&i<=n)break;if(i===a)return this._json=this._json.slice(s+1),!1;++s}if(s===i)return this._json="",!0;let o=0;const e=s;for(;s<i;){const a=this._json.charCodeAt(s);if(t>a||a>n)break;o*=10,o+=a-t,++s}if(s===i)return this._json=this._json.slice(e),!0;this._array[this._arrayIndex++]=o}}_parseStringsArray(){this._progress.updateStatus(ls`Parsing strings…`);const s=this._json.lastIndexOf("]");if(-1===s)throw new Error("Incomplete JSON");this._json=this._json.slice(0,s+1),this._snapshot.strings=JSON.parse(this._json)}write(s){this._buffer+=s,this._dataCallback&&(this._dataCallback(this._buffer),this._dataCallback=null,this._buffer="")}_fetchChunk(){return this._done?Promise.resolve(this._buffer):new Promise(s=>{this._dataCallback=s})}async _findToken(s,t){for(;;){const n=this._json.indexOf(s,t||0);if(-1!==n)return n;t=this._json.length-s.length+1,this._json+=await this._fetchChunk()}}async _parseArray(s,t,n){const a=await this._findToken(s),i=await this._findToken("[",a);for(this._json=this._json.slice(i+1),this._array=n?new Uint32Array(n):[],this._arrayIndex=0;this._parseUintArray();)this._progress.updateProgress(t,this._arrayIndex,this._array.length),this._json+=await this._fetchChunk();const o=this._array;return this._array=null,o}async _parseInput(){const s=await this._findToken('"snapshot"');if(-1===s)throw new Error("Snapshot token not found");this._progress.updateStatus(ls`Loading snapshot info…`);const t=this._json.slice(s+'"snapshot"'.length+1);for(this._jsonTokenizer=new TextUtils.TextUtils.BalancedJSONTokenizer(s=>{this._json=this._jsonTokenizer.remainder(),this._jsonTokenizer=null,this._snapshot.snapshot=JSON.parse(s)}),this._jsonTokenizer.write(t);this._jsonTokenizer;)this._jsonTokenizer.write(await this._fetchChunk());if(this._snapshot.nodes=await this._parseArray('"nodes"',ls`Loading nodes… %d%%`,this._snapshot.snapshot.meta.node_fields.length*this._snapshot.snapshot.node_count),this._snapshot.edges=await this._parseArray('"edges"',ls`Loading edges… %d%%`,this._snapshot.snapshot.meta.edge_fields.length*this._snapshot.snapshot.edge_count),this._snapshot.snapshot.trace_function_count){this._snapshot.trace_function_infos=await this._parseArray('"trace_function_infos"',ls`Loading allocation traces… %d%%`,this._snapshot.snapshot.meta.trace_function_info_fields.length*this._snapshot.snapshot.trace_function_count);const s=await this._findToken(":"),t=await this._findToken('"',s),n=this._json.indexOf("["),a=this._json.lastIndexOf("]",t);this._snapshot.trace_tree=JSON.parse(this._json.substring(n,a+1)),this._json=this._json.slice(a+1)}this._snapshot.snapshot.meta.sample_fields&&(this._snapshot.samples=await this._parseArray('"samples"',ls`Loading samples…`)),this._snapshot.snapshot.meta.location_fields?this._snapshot.locations=await this._parseArray('"locations"',ls`Loading locations…`):this._snapshot.locations=[],this._progress.updateStatus(ls`Loading strings…`);const n=await this._findToken('"strings"'),a=await this._findToken("[",n);for(this._json=this._json.slice(a);!this._done;)this._json+=await this._fetchChunk();this._parseStringsArray()}}