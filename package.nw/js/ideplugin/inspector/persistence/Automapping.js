import*as Bindings from"../bindings/bindings.js";import*as Common from"../common/common.js";import*as Platform from"../platform/platform.js";import*as SDK from"../sdk/sdk.js";import*as Workspace from"../workspace/workspace.js";import{FileSystem,FileSystemWorkspaceBinding}from"./FileSystemWorkspaceBinding.js";import{PathEncoder,PersistenceImpl}from"./PersistenceImpl.js";export class Automapping{constructor(e,t,s){this._workspace=e,this._onStatusAdded=t,this._onStatusRemoved=s,this._statuses=new Set,this._statusSymbol=Symbol("Automapping.Status"),this._processingPromiseSymbol=Symbol("Automapping.ProcessingPromise"),this._metadataSymbol=Symbol("Automapping.Metadata"),this._fileSystemUISourceCodes=new Map,this._sweepThrottler=new Common.Throttler.Throttler(100);const o=new PathEncoder;this._filesIndex=new FilePathIndex(o),this._projectFoldersIndex=new FolderIndex(o),this._activeFoldersIndex=new FolderIndex(o),this._interceptors=[],this._workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded,e=>this._onUISourceCodeAdded(e.data)),this._workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeRemoved,e=>this._onUISourceCodeRemoved(e.data)),this._workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeRenamed,this._onUISourceCodeRenamed,this),this._workspace.addEventListener(Workspace.Workspace.Events.ProjectAdded,e=>this._onProjectAdded(e.data),this),this._workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved,e=>this._onProjectRemoved(e.data),this);for(const t of e.projects())this._onProjectAdded(t);for(const t of e.uiSourceCodes())this._onUISourceCodeAdded(t)}addNetworkInterceptor(e){this._interceptors.push(e),this.scheduleRemap()}scheduleRemap(){for(const e of this._statuses.values())this._clearNetworkStatus(e.network);this._scheduleSweep()}_scheduleSweep(){this._sweepThrottler.schedule(function(){const e=this._workspace.projectsForType(Workspace.Workspace.projectTypes.Network);for(const t of e)for(const e of t.uiSourceCodes())this._computeNetworkStatus(e);return this._onSweepHappenedForTest(),Promise.resolve()}.bind(this))}_onSweepHappenedForTest(){}_onProjectRemoved(e){for(const t of e.uiSourceCodes())this._onUISourceCodeRemoved(t);if(e.type()!==Workspace.Workspace.projectTypes.FileSystem)return;const t=e;for(const e of t.initialGitFolders())this._projectFoldersIndex.removeFolder(e);this._projectFoldersIndex.removeFolder(t.fileSystemPath()),this.scheduleRemap()}_onProjectAdded(e){if(e.type()!==Workspace.Workspace.projectTypes.FileSystem)return;const t=e;for(const e of t.initialGitFolders())this._projectFoldersIndex.addFolder(e);this._projectFoldersIndex.addFolder(t.fileSystemPath()),e.uiSourceCodes().forEach(this._onUISourceCodeAdded.bind(this)),this.scheduleRemap()}_onUISourceCodeAdded(e){const t=e.project();if(t.type()===Workspace.Workspace.projectTypes.FileSystem){if(!FileSystemWorkspaceBinding.fileSystemSupportsAutomapping(t))return;this._filesIndex.addPath(e.url()),this._fileSystemUISourceCodes.set(e.url(),e),this._scheduleSweep()}else t.type()===Workspace.Workspace.projectTypes.Network&&this._computeNetworkStatus(e)}_onUISourceCodeRemoved(e){if(e.project().type()===Workspace.Workspace.projectTypes.FileSystem){this._filesIndex.removePath(e.url()),this._fileSystemUISourceCodes.delete(e.url());const t=e[this._statusSymbol];t&&this._clearNetworkStatus(t.network)}else e.project().type()===Workspace.Workspace.projectTypes.Network&&this._clearNetworkStatus(e)}_onUISourceCodeRenamed(e){const t=e.data.uiSourceCode,s=e.data.oldURL;if(t.project().type()!==Workspace.Workspace.projectTypes.FileSystem)return;this._filesIndex.removePath(s),this._fileSystemUISourceCodes.delete(s);const o=t[this._statusSymbol];o&&this._clearNetworkStatus(o.network),this._filesIndex.addPath(t.url()),this._fileSystemUISourceCodes.set(t.url(),t),this._scheduleSweep()}_computeNetworkStatus(e){if(e[this._processingPromiseSymbol]||e[this._statusSymbol])return;if(this._interceptors.some(t=>t(e)))return;if(e.url().startsWith("wasm://"))return;const t=this._createBinding(e).then(async function(s){if(!s)return null;if(e[this._processingPromiseSymbol]!==t)return null;if(s.network.contentType().isFromSourceMap()||!s.fileSystem.contentType().isTextType())return s;if(s.fileSystem.isDirty()&&(s.network.isDirty()||s.network.hasCommits()))return null;const[o,r]=await Promise.all([s.fileSystem.requestContent(),s.network.project().requestFileContent(s.network)]);if(null===o.content||null===r)return null;if(e[this._processingPromiseSymbol]!==t)return null;const i=Bindings.NetworkProject.NetworkProject.targetForUISourceCode(s.network);let n=!1;const d=o.content;if(i&&i.type()===SDK.SDKModel.Type.Node){const e=PersistenceImpl.rewrapNodeJSContent(s.fileSystem,d,r.content);n=d===e}else r.content&&(n=d.trimRight()===r.content.trimRight());if(!n)return this._prevalidationFailedForTest(s),null;return s}.bind(this)).then(function(s){if(e[this._processingPromiseSymbol]!==t)return;if(e[this._processingPromiseSymbol]=null,!s)return void this._onBindingFailedForTest();if(s.network[this._statusSymbol]||s.fileSystem[this._statusSymbol])return;if(this._statuses.add(s),s.network[this._statusSymbol]=s,s.fileSystem[this._statusSymbol]=s,s.exactMatch){const e=this._projectFoldersIndex.closestParentFolder(s.fileSystem.url());!!e&&this._activeFoldersIndex.addFolder(e)&&this._scheduleSweep()}this._onStatusAdded.call(null,s)}.bind(this));e[this._processingPromiseSymbol]=t}_prevalidationFailedForTest(e){}_onBindingFailedForTest(){}_clearNetworkStatus(e){if(e[this._processingPromiseSymbol])return void(e[this._processingPromiseSymbol]=null);const t=e[this._statusSymbol];if(t){if(this._statuses.delete(t),t.network[this._statusSymbol]=null,t.fileSystem[this._statusSymbol]=null,t.exactMatch){const e=this._projectFoldersIndex.closestParentFolder(t.fileSystem.url());e&&this._activeFoldersIndex.removeFolder(e)}this._onStatusRemoved.call(null,t)}}_createBinding(e){const t=e.url();if(t.startsWith("file://")||t.startsWith("snippet://")){let s;try{const e=decodeURI(t);s=this._fileSystemUISourceCodes.get(e)}catch(e){Common.Console.Console.instance().error(ls`The attempt to bind "${t}" in the workspace failed as this URI is malformed.`)}const o=s?new AutomappingStatus(e,s,!1):null;return Promise.resolve(o)}let s=Common.ParsedURL.ParsedURL.extractPath(t);if(null===s)return Promise.resolve(null);s.endsWith("/")&&(s+="index.html");const o=decodeURI(s),r=this._filesIndex.similarFiles(o).map(e=>this._fileSystemUISourceCodes.get(e));return r.length?this._pullMetadatas(r.concat(e)).then(function(){const t=r.filter(e=>!!this._activeFoldersIndex.closestParentFolder(e.url())),s=e[this._metadataSymbol];if(!s||!s.modificationTime&&"number"!=typeof s.contentSize)return 1!==t.length?null:new AutomappingStatus(e,t[0],!1);let o=this._filterWithMetadata(t,s);o.length||(o=this._filterWithMetadata(r,s));if(1!==o.length)return null;return new AutomappingStatus(e,o[0],!0)}.bind(this)):Promise.resolve(null)}_pullMetadatas(e){return Promise.all(e.map(async e=>{e[this._metadataSymbol]=await e.requestMetadata()}))}_filterWithMetadata(e,t){return e.filter(e=>{const s=e[this._metadataSymbol];if(!s)return!1;const o=!t.modificationTime||Math.abs(t.modificationTime-s.modificationTime)<1e3,r=!t.contentSize||s.contentSize===t.contentSize;return o&&r})}}class FilePathIndex{constructor(e){this._encoder=e,this._reversedIndex=new Common.Trie.Trie}addPath(e){const t=this._encoder.encode(e);this._reversedIndex.add(Platform.StringUtilities.reverse(t))}removePath(e){const t=this._encoder.encode(e);this._reversedIndex.remove(Platform.StringUtilities.reverse(t))}similarFiles(e){const t=this._encoder.encode(e),s=Platform.StringUtilities.reverse(t),o=this._reversedIndex.longestPrefix(s,!1);return o?this._reversedIndex.words(o).map(e=>this._encoder.decode(Platform.StringUtilities.reverse(e))):[]}}class FolderIndex{constructor(e){this._encoder=e,this._index=new Common.Trie.Trie,this._folderCount=new Map}addFolder(e){e.endsWith("/")&&(e=e.substring(0,e.length-1));const t=this._encoder.encode(e);this._index.add(t);const s=this._folderCount.get(t)||0;return this._folderCount.set(t,s+1),0===s}removeFolder(e){e.endsWith("/")&&(e=e.substring(0,e.length-1));const t=this._encoder.encode(e),s=this._folderCount.get(t)||0;return!!s&&(s>1?(this._folderCount.set(t,s-1),!1):(this._index.remove(t),this._folderCount.delete(t),!0))}closestParentFolder(e){const t=this._encoder.encode(e),s=this._index.longestPrefix(t,!0);return this._encoder.decode(s)}}export class AutomappingStatus{constructor(e,t,s){this.network=e,this.fileSystem=t,this.exactMatch=s}}