import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as Workspace from"../workspace/workspace.js";import{FileSystem,FileSystemWorkspaceBinding}from"./FileSystemWorkspaceBinding.js";import{PersistenceBinding}from"./PersistenceImpl.js";export class NetworkPersistenceManager extends Common.ObjectWrapper.ObjectWrapper{constructor(e){super(),this._bindingSymbol=Symbol("NetworkPersistenceBinding"),this._originalResponseContentPromiseSymbol=Symbol("OriginalResponsePromise"),this._savingSymbol=Symbol("SavingForOverrides"),this._enabledSetting=Common.Settings.Settings.instance().moduleSetting("persistenceNetworkOverridesEnabled"),this._enabledSetting.addChangeListener(this._enabledChanged,this),this._workspace=e,this._networkUISourceCodeForEncodedPath=new Map,this._interceptionHandlerBound=this._interceptionHandler.bind(this),this._updateInterceptionThrottler=new Common.Throttler.Throttler(50),this._project=null,this._activeProject=null,this._active=!1,this._enabled=!1,this._workspace.addEventListener(Workspace.Workspace.Events.ProjectAdded,e=>{this._onProjectAdded(e.data)}),this._workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved,e=>{this._onProjectRemoved(e.data)}),self.Persistence.persistence.addNetworkInterceptor(this._canHandleNetworkUISourceCode.bind(this)),this._eventDescriptors=[],this._enabledChanged()}active(){return this._active}project(){return this._project}originalContentForUISourceCode(e){if(!e[this._bindingSymbol])return null;return e[this._bindingSymbol].fileSystem[this._originalResponseContentPromiseSymbol]||null}async _enabledChanged(){this._enabled!==this._enabledSetting.get()&&(this._enabled=this._enabledSetting.get(),this._enabled?(this._eventDescriptors=[Workspace.Workspace.WorkspaceImpl.instance().addEventListener(Workspace.Workspace.Events.UISourceCodeRenamed,e=>{this._uiSourceCodeRenamedListener(e)}),Workspace.Workspace.WorkspaceImpl.instance().addEventListener(Workspace.Workspace.Events.UISourceCodeAdded,e=>{this._uiSourceCodeAdded(e)}),Workspace.Workspace.WorkspaceImpl.instance().addEventListener(Workspace.Workspace.Events.UISourceCodeRemoved,e=>{this._uiSourceCodeRemovedListener(e)}),Workspace.Workspace.WorkspaceImpl.instance().addEventListener(Workspace.Workspace.Events.WorkingCopyCommitted,e=>this._onUISourceCodeWorkingCopyCommitted(e.data.uiSourceCode))],await this._updateActiveProject()):(Common.EventTarget.EventTarget.removeEventListeners(this._eventDescriptors),await this._updateActiveProject()))}async _uiSourceCodeRenamedListener(e){const t=e.data.uiSourceCode;await this._onUISourceCodeRemoved(t),await this._onUISourceCodeAdded(t)}async _uiSourceCodeRemovedListener(e){await this._onUISourceCodeRemoved(e.data)}async _uiSourceCodeAdded(e){await this._onUISourceCodeAdded(e.data)}async _updateActiveProject(){const e=this._active;if(this._active=!!(this._enabledSetting.get()&&SDK.SDKModel.TargetManager.instance().mainTarget()&&this._project),this._active!==e){if(this._active){await Promise.all(this._project.uiSourceCodes().map(e=>this._filesystemUISourceCodeAdded(e)));const e=this._workspace.projectsForType(Workspace.Workspace.projectTypes.Network);for(const t of e)await Promise.all(t.uiSourceCodes().map(e=>this._networkUISourceCodeAdded(e)))}else this._project&&(await Promise.all(this._project.uiSourceCodes().map(e=>this._filesystemUISourceCodeRemoved(e))),this._networkUISourceCodeForEncodedPath.clear());self.Persistence.persistence.refreshAutomapping()}}_encodedPathFromUrl(e){if(!this._active)return"";let t=Common.ParsedURL.ParsedURL.urlWithoutHash(e.replace(/^https?:\/\//,""));t.endsWith("/")&&-1===t.indexOf("?")&&(t+="index.html");let o=function(e){const t=[];for(const o of function(e){const t=(e=Common.ParsedURL.ParsedURL.urlWithoutHash(e)).indexOf("?");if(-1===t)return e.split("/");if(0===t)return[e];const o=e.substr(t),r=e.substr(0,e.length-o.length).split("/");return r[r.length-1]+=o,r}(e)){if(!o)continue;let e=encodeURI(o).replace(/[\/:\?\*]/g,e=>"%"+e[0].charCodeAt(0).toString(16));_reservedFileNames.has(e.toLowerCase())&&(e=e.split("").map(e=>"%"+e.charCodeAt(0).toString(16)).join(""));"."===e.charAt(e.length-1)&&(e=e.substr(0,e.length-1)+"%2e"),t.push(e)}return t}(t);const r=FileSystemWorkspaceBinding.fileSystemPath(this._project.id()),s=o.join("/");if(r.length+s.length>200){const e=o[0],r=o[o.length-1],n=r?r.substr(0,10)+"-":"",i=Common.ParsedURL.ParsedURL.extractExtension(t),a=i?"."+i.substr(0,10):"";o=[e,"longurls",n+String.hashCode(s).toString(16)+a]}return o.join("/")}_decodeLocalPathToUrlPath(e){try{return unescape(e)}catch(e){console.error(e)}return e}async _unbind(e){const t=e[this._bindingSymbol];t&&(delete t.network[this._bindingSymbol],delete t.fileSystem[this._bindingSymbol],await self.Persistence.persistence.removeBinding(t))}async _bind(e,t){e[this._bindingSymbol]&&await this._unbind(e),t[this._bindingSymbol]&&await this._unbind(t);const o=new PersistenceBinding(e,t);e[this._bindingSymbol]=o,t[this._bindingSymbol]=o,await self.Persistence.persistence.addBinding(o);const r=e[this._savingSymbol]?e:t,[{content:s},n]=await Promise.all([r.requestContent(),r.contentEncoded()]);self.Persistence.persistence.syncContent(r,s,n)}_onUISourceCodeWorkingCopyCommitted(e){this.saveUISourceCodeForOverrides(e)}canSaveUISourceCodeForOverrides(e){return this._active&&e.project().type()===Workspace.Workspace.projectTypes.Network&&!e[this._bindingSymbol]&&!e[this._savingSymbol]}async saveUISourceCodeForOverrides(e){if(!this.canSaveUISourceCodeForOverrides(e))return;e[this._savingSymbol]=!0;let t=this._encodedPathFromUrl(e.url());const o=(await e.requestContent()).content||"",r=await e.contentEncoded(),s=t.lastIndexOf("/"),n=t.substr(s+1);t=t.substr(0,s),await this._project.createFile(t,n,o,r),this._fileCreatedForTest(t,n),e[this._savingSymbol]=!1}_fileCreatedForTest(e,t){}_patternForFileSystemUISourceCode(e){const t=FileSystemWorkspaceBinding.relativePath(e);return t.length<2?"":"longurls"===t[1]&&2!==t.length?"http?://"+t[0]+"/*":"http?://"+this._decodeLocalPathToUrlPath(t.join("/"))}async _onUISourceCodeAdded(e){await this._networkUISourceCodeAdded(e),await this._filesystemUISourceCodeAdded(e)}_canHandleNetworkUISourceCode(e){return this._active&&!e.url().startsWith("snippet://")}async _networkUISourceCodeAdded(e){if(e.project().type()!==Workspace.Workspace.projectTypes.Network||!this._canHandleNetworkUISourceCode(e))return;const t=Common.ParsedURL.ParsedURL.urlWithoutHash(e.url());this._networkUISourceCodeForEncodedPath.set(this._encodedPathFromUrl(t),e);const o=this._project.uiSourceCodeForURL(this._project.fileSystemPath()+"/"+this._encodedPathFromUrl(t));o&&await this._bind(e,o)}async _filesystemUISourceCodeAdded(e){if(!this._active||e.project()!==this._project)return;this._updateInterceptionPatterns();const t=FileSystemWorkspaceBinding.relativePath(e),o=this._networkUISourceCodeForEncodedPath.get(t.join("/"));o&&await this._bind(o,e)}_updateInterceptionPatterns(){this._updateInterceptionThrottler.schedule(function(){if(!this._active)return SDK.NetworkManager.MultitargetNetworkManager.instance().setInterceptionHandlerForPatterns([],this._interceptionHandlerBound);const e=new Set;for(const t of this._project.uiSourceCodes()){const o=this._patternForFileSystemUISourceCode(t);e.add(o),o.endsWith("/index.html")&&e.add(o.substr(0,o.length-"index.html".length))}return SDK.NetworkManager.MultitargetNetworkManager.instance().setInterceptionHandlerForPatterns(Array.from(e).map(e=>({urlPattern:e,interceptionStage:Protocol.Network.InterceptionStage.HeadersReceived})),this._interceptionHandlerBound)}.bind(this))}async _onUISourceCodeRemoved(e){await this._networkUISourceCodeRemoved(e),await this._filesystemUISourceCodeRemoved(e)}async _networkUISourceCodeRemoved(e){e.project().type()===Workspace.Workspace.projectTypes.Network&&(await this._unbind(e),this._networkUISourceCodeForEncodedPath.delete(this._encodedPathFromUrl(e.url())))}async _filesystemUISourceCodeRemoved(e){e.project()===this._project&&(this._updateInterceptionPatterns(),delete e[this._originalResponseContentPromiseSymbol],await this._unbind(e))}async _setProject(e){e!==this._project&&(this._project&&await Promise.all(this._project.uiSourceCodes().map(e=>this._filesystemUISourceCodeRemoved(e))),this._project=e,this._project&&await Promise.all(this._project.uiSourceCodes().map(e=>this._filesystemUISourceCodeAdded(e))),await this._updateActiveProject(),this.dispatchEventToListeners(Events.ProjectChanged,this._project))}async _onProjectAdded(e){if(e.type()!==Workspace.Workspace.projectTypes.FileSystem||"overrides"!==FileSystemWorkspaceBinding.fileSystemType(e))return;FileSystemWorkspaceBinding.fileSystemPath(e.id())&&(this._project&&this._project.remove(),await this._setProject(e))}async _onProjectRemoved(e){e===this._project&&await this._setProject(null)}async _interceptionHandler(e){const t=e.request.method;if(!this._active||"GET"!==t&&"POST"!==t)return;const o=this._project.fileSystemPath()+"/"+this._encodedPathFromUrl(e.request.url),r=this._project.uiSourceCodeForURL(o);if(!r)return;let s="";if(e.responseHeaders){s=SDK.NetworkManager.NetworkManager.lowercaseHeaders(e.responseHeaders)["content-type"]}if(!s){const t=Common.ResourceType.resourceTypes[e.resourceType]||Common.ResourceType.resourceTypes.Other;s=r.mimeType(),Common.ResourceType.ResourceType.fromMimeType(s)!==t&&(s=t.canonicalMimeType())}const n=r.project();r[this._originalResponseContentPromiseSymbol]=e.responseBody().then(e=>e.error||null===e.content?null:e.encoded?atob(e.content):e.content);const i=await n.requestFileBlob(r);e.continueRequestWithContent(new Blob([i],{type:s}))}}const _reservedFileNames=new Set(["con","prn","aux","nul","com1","com2","com3","com4","com5","com6","com7","com8","com9","lpt1","lpt2","lpt3","lpt4","lpt5","lpt6","lpt7","lpt8","lpt9"]);export const Events={ProjectChanged:Symbol("ProjectChanged")};