import*as Common from"../common/common.js";import*as Host from"../host/host.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{MobileThrottlingSelector}from"./MobileThrottlingSelector.js";import{NetworkThrottlingSelector}from"./NetworkThrottlingSelector.js";import{Conditions,ConditionsList,cpuThrottlingPresets,CPUThrottlingRates,CustomConditions,MobileThrottlingConditionsGroup,NetworkThrottlingConditionsGroup}from"./ThrottlingPresets.js";export class ThrottlingManager extends Common.ObjectWrapper.ObjectWrapper{constructor(){super(),this._cpuThrottlingRate=CPUThrottlingRates.NoThrottling,this._cpuThrottlingControls=new Set,this._cpuThrottlingRates=cpuThrottlingPresets,this._customNetworkConditionsSetting=Common.Settings.Settings.instance().moduleSetting("customNetworkConditions"),this._currentNetworkThrottlingConditions=SDK.NetworkManager.NoThrottlingConditions,this._lastNetworkThrottlingConditions,SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged,()=>{this._lastNetworkThrottlingConditions=this._currentNetworkThrottlingConditions,this._currentNetworkThrottlingConditions=SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions()}),SDK.SDKModel.TargetManager.instance().observeModels(SDK.EmulationModel.EmulationModel,this)}decorateSelectWithNetworkThrottling(t){let e=[];const o=new NetworkThrottlingSelector((function(o){t.removeChildren(),e=[];for(let n=0;n<o.length;++n){const i=o[n],r=t.createChild("optgroup");r.label=i.title;for(const t of i.items){const o=t.title,n=new Option(o,o);UI.ARIAUtils.setAccessibleName(n,ls`${i.title}: ${o}`),r.appendChild(n),e.push(t)}if(n===o.length-1){const t=new Option(ls`Add…`,ls`Add…`);UI.ARIAUtils.setAccessibleName(t,ls`Add ${i.title}`),r.appendChild(t),e.push(null)}}return e}),(function(e){t.selectedIndex!==e&&(t.selectedIndex=e)}),this._customNetworkConditionsSetting);return t.addEventListener("change",(function(){t.selectedIndex===t.options.length-1?o.revealAndUpdate():o.optionSelected(e[t.selectedIndex])}),!1),o}createOfflineToolbarCheckbox(){const t=new UI.Toolbar.ToolbarCheckbox(Common.UIString.UIString("Offline"),Common.UIString.UIString("Force disconnected from network"),function(){t.checked()?SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.OfflineConditions):SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(this._lastNetworkThrottlingConditions)}.bind(this));return SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged,(function(){t.setChecked(SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions()===SDK.NetworkManager.OfflineConditions)})),t.setChecked(SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions()===SDK.NetworkManager.OfflineConditions),t}createMobileThrottlingButton(){const t=new UI.Toolbar.ToolbarMenuButton((function(t){for(let i=0;i<e.length;++i){const r=e[i];r&&(r.title===CustomConditions.title&&r.description===CustomConditions.description||t.defaultSection().appendCheckboxItem(Common.UIString.UIString(r.title),n.optionSelected.bind(n,r),o===i))}}));t.setTitle(Common.UIString.UIString("Throttling")),t.setGlyph(""),t.turnIntoSelect(),t.setDarkText();let e=[],o=-1;const n=new MobileThrottlingSelector((function(t){e=[];for(const o of t){for(const t of o.items)e.push(t);e.push(null)}return e}),(function(n){o=n,t.setText(e[n].title),t.setTitle(e[n].description)}));return t}cpuThrottlingRate(){return this._cpuThrottlingRate}setCPUThrottlingRate(t){this._cpuThrottlingRate=t;for(const t of SDK.SDKModel.TargetManager.instance().models(SDK.EmulationModel.EmulationModel))t.setCPUThrottlingRate(this._cpuThrottlingRate);let e=null;this._cpuThrottlingRate!==CPUThrottlingRates.NoThrottling&&(Host.userMetrics.actionTaken(Host.UserMetrics.Action.CpuThrottlingEnabled),e=UI.Icon.Icon.create("smallicon-warning"),e.title=Common.UIString.UIString("CPU throttling is enabled"));const o=this._cpuThrottlingRates.indexOf(this._cpuThrottlingRate);for(const t of this._cpuThrottlingControls)t.setSelectedIndex(o);self.UI.inspectorView.setPanelIcon("timeline",e),this.dispatchEventToListeners(Events.RateChanged,this._cpuThrottlingRate)}modelAdded(t){this._cpuThrottlingRate!==CPUThrottlingRates.NoThrottling&&t.setCPUThrottlingRate(this._cpuThrottlingRate)}modelRemoved(t){}createCPUThrottlingSelector(){const t=new UI.Toolbar.ToolbarComboBox(t=>this.setCPUThrottlingRate(this._cpuThrottlingRates[t.target.selectedIndex]),ls`CPU throttling`);this._cpuThrottlingControls.add(t);const e=this._cpuThrottlingRate;for(let o=0;o<this._cpuThrottlingRates.length;++o){const n=this._cpuThrottlingRates[o],i=1===n?Common.UIString.UIString("No throttling"):Common.UIString.UIString("%d× slowdown",n),r=t.createOption(i);t.addOption(r),e===n&&t.setSelectedIndex(o)}return t}}export const Events={RateChanged:Symbol("RateChanged")};export class ActionDelegate{handleAction(t,e){return"network-conditions.network-online"===e?(SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.NoThrottlingConditions),!0):"network-conditions.network-low-end-mobile"===e?(SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.Slow3GConditions),!0):"network-conditions.network-mid-tier-mobile"===e?(SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.Fast3GConditions),!0):"network-conditions.network-offline"===e&&(SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.OfflineConditions),!0)}}export function throttlingManager(){return self.singleton(ThrottlingManager)}