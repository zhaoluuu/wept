import*as Platform from"../platform/platform.js";export class TextRange{constructor(t,n,e,s){this.startLine=t,this.startColumn=n,this.endLine=e,this.endColumn=s}static createFromLocation(t,n){return new TextRange(t,n,t,n)}static fromObject(t){return new TextRange(t.startLine,t.startColumn,t.endLine,t.endColumn)}static comparator(t,n){return t.compareTo(n)}static fromEdit(t,n){let e=t.startLine,s=t.startColumn+n.length;const i=Platform.StringUtilities.findLineEndingIndexes(n);if(i.length>1){e=t.startLine+i.length-1;const n=i.length;s=i[n-1]-i[n-2]-1}return new TextRange(t.startLine,t.startColumn,e,s)}isEmpty(){return this.startLine===this.endLine&&this.startColumn===this.endColumn}immediatelyPrecedes(t){return!!t&&(this.endLine===t.startLine&&this.endColumn===t.startColumn)}immediatelyFollows(t){return!!t&&t.immediatelyPrecedes(this)}follows(t){return t.endLine===this.startLine&&t.endColumn<=this.startColumn||t.endLine<this.startLine}get linesCount(){return this.endLine-this.startLine}collapseToEnd(){return new TextRange(this.endLine,this.endColumn,this.endLine,this.endColumn)}collapseToStart(){return new TextRange(this.startLine,this.startColumn,this.startLine,this.startColumn)}normalize(){return this.startLine>this.endLine||this.startLine===this.endLine&&this.startColumn>this.endColumn?new TextRange(this.endLine,this.endColumn,this.startLine,this.startColumn):this.clone()}clone(){return new TextRange(this.startLine,this.startColumn,this.endLine,this.endColumn)}serializeToObject(){const t={};return t.startLine=this.startLine,t.startColumn=this.startColumn,t.endLine=this.endLine,t.endColumn=this.endColumn,t}compareTo(t){return this.startLine>t.startLine?1:this.startLine<t.startLine?-1:this.startColumn>t.startColumn?1:this.startColumn<t.startColumn?-1:0}compareToPosition(t,n){return t<this.startLine||t===this.startLine&&n<this.startColumn?-1:t>this.endLine||t===this.endLine&&n>this.endColumn?1:0}equal(t){return this.startLine===t.startLine&&this.endLine===t.endLine&&this.startColumn===t.startColumn&&this.endColumn===t.endColumn}relativeTo(t,n){const e=this.clone();return this.startLine===t&&(e.startColumn-=n),this.endLine===t&&(e.endColumn-=n),e.startLine-=t,e.endLine-=t,e}relativeFrom(t,n){const e=this.clone();return 0===this.startLine&&(e.startColumn+=n),0===this.endLine&&(e.endColumn+=n),e.startLine+=t,e.endLine+=t,e}rebaseAfterTextEdit(t,n){console.assert(t.startLine===n.startLine),console.assert(t.startColumn===n.startColumn);const e=this.clone();if(!this.follows(t))return e;const s=n.endLine-t.endLine,i=n.endColumn-t.endColumn;return e.startLine+=s,e.endLine+=s,e.startLine===n.endLine&&(e.startColumn+=i),e.endLine===n.endLine&&(e.endColumn+=i),e}toString(){return JSON.stringify(this)}containsLocation(t,n){return this.startLine===this.endLine?this.startLine===t&&this.startColumn<=n&&n<=this.endColumn:this.startLine===t?this.startColumn<=n:this.endLine===t?n<=this.endColumn:this.startLine<t&&t<this.endLine}}export class SourceRange{constructor(t,n){this.offset=t,this.length=n}}export class SourceEdit{constructor(t,n,e){this.sourceURL=t,this.oldRange=n,this.newText=e}static comparator(t,n){return TextRange.comparator(t.oldRange,n.oldRange)}newRange(){return TextRange.fromEdit(this.oldRange,this.newText)}}