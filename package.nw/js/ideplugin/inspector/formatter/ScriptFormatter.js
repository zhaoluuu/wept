import*as Common from"../common/common.js";import*as Platform from"../platform/platform.js";import{FormatMapping,FormatResult,formatterWorkerPool}from"./FormatterWorkerPool.js";export class FormatterInterface{}FormatterInterface.format=function(t,o,n,r){t.isDocumentOrScriptOrStyleSheet()?new ScriptFormatter(o,n,r):new ScriptIdentityFormatter(o,n,r)},FormatterInterface.locationToPosition=function(t,o,n){return(o?t[o-1]+1:0)+n},FormatterInterface.positionToLocation=function(t,o){const n=t.upperBound(o-1);let r;return r=n?o-t[n-1]-1:o,[n,r]};export class ScriptFormatter{constructor(t,o,n){o=o.replace(/\r\n?|[\n\u2028\u2029]/g,"\n").replace(/^\uFEFF/,""),this._callback=n,this._originalContent=o,formatterWorkerPool().format(t,o,Common.Settings.Settings.instance().moduleSetting("textEditorIndent").get()).then(this._didFormatContent.bind(this))}_didFormatContent(t){const o=Platform.StringUtilities.findLineEndingIndexes(this._originalContent),n=Platform.StringUtilities.findLineEndingIndexes(t.content),r=new FormatterSourceMappingImpl(o,n,t.mapping);this._callback(t.content,r)}}class ScriptIdentityFormatter{constructor(t,o,n){n(o,new IdentityFormatterSourceMapping)}}export class FormatterSourceMapping{originalToFormatted(t,o){}formattedToOriginal(t,o){}}class IdentityFormatterSourceMapping{originalToFormatted(t,o){return[t,o||0]}formattedToOriginal(t,o){return[t,o||0]}}class FormatterSourceMappingImpl{constructor(t,o,n){this._originalLineEndings=t,this._formattedLineEndings=o,this._mapping=n}originalToFormatted(t,o){const n=FormatterInterface.locationToPosition(this._originalLineEndings,t,o||0),r=this._convertPosition(this._mapping.original,this._mapping.formatted,n||0);return FormatterInterface.positionToLocation(this._formattedLineEndings,r)}formattedToOriginal(t,o){const n=FormatterInterface.locationToPosition(this._formattedLineEndings,t,o||0),r=this._convertPosition(this._mapping.formatted,this._mapping.original,n);return FormatterInterface.positionToLocation(this._originalLineEndings,r||0)}_convertPosition(t,o,n){const r=t.upperBound(n)-1;let i=o[r]+n-t[r];return r<o.length-1&&i>o[r+1]&&(i=o[r+1]),i}}