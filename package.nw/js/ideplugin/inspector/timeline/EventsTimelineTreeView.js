import*as Common from"../common/common.js";import*as DataGrid from"../data_grid/data_grid.js";import*as SDK from"../sdk/sdk.js";import*as TimelineModel from"../timeline_model/timeline_model.js";import*as UI from"../ui/ui.js";import{Category,IsLong}from"./TimelineFilters.js";import{TimelineModeViewDelegate,TimelineSelection}from"./TimelinePanel.js";import{TimelineTreeView}from"./TimelineTreeView.js";import{TimelineUIUtils}from"./TimelineUIUtils.js";export class EventsTimelineTreeView extends TimelineTreeView{constructor(e){super(),this._filtersControl=new Filters,this._filtersControl.addEventListener(Filters.Events.FilterChanged,this._onFilterChanged,this),this.init(),this._delegate=e,this._dataGrid.markColumnAsSortedBy("startTime",DataGrid.DataGrid.Order.Ascending),this._splitWidget.showBoth()}filters(){return[...super.filters(),...this._filtersControl.filters()]}updateContents(e){if(super.updateContents(e),e.type()===TimelineSelection.Type.TraceEvent){const t=e.object();this._selectEvent(t,!0)}}getToolbarInputAccessiblePlaceHolder(){return ls`Filter event log`}_buildTree(){return this._currentTree=this.buildTopDownTree(!0,null),this._currentTree}_onFilterChanged(){const e=this.lastSelectedNode()&&this.lastSelectedNode().event;this.refreshTree(),e&&this._selectEvent(e,!1)}_findNodeWithEvent(e){const t=[this._currentTree.children().values()];for(;t.length;){const i=t.peekLast().next();if(i.done){t.pop();continue}const r=i.value;if(r.event===e)return r;t.push(r.children().values())}return null}_selectEvent(e,t){const i=this._findNodeWithEvent(e);i&&(this.selectProfileNode(i,!1),t&&this.dataGridNodeForTreeNode(i).expand())}populateColumns(e){e.push({id:"startTime",title:Common.UIString.UIString("Start Time"),width:"80px",fixedWidth:!0,sortable:!0}),super.populateColumns(e),e.filter(e=>e.fixedWidth).forEach(e=>{e.width="80px"})}populateToolbar(e){super.populateToolbar(e),this._filtersControl.populateToolbar(e)}_showDetailsForNode(e){const t=e.event;return!!t&&(TimelineUIUtils.buildTraceEventDetails(t,this.model().timelineModel(),this._linkifier,!1).then(e=>this._detailsView.element.appendChild(e)),!0)}_onHover(e){this._delegate.highlightEvent(e&&e.event)}}export class Filters extends Common.ObjectWrapper.ObjectWrapper{constructor(){super(),this._categoryFilter=new Category,this._durationFilter=new IsLong,this._filters=[this._categoryFilter,this._durationFilter]}filters(){return this._filters}populateToolbar(e){const t=new UI.Toolbar.ToolbarComboBox(function(){const e=t.selectedOption().value,i=parseInt(e,10);this._durationFilter.setMinimumRecordDuration(i),this._notifyFiltersChanged()}.bind(this),ls`Duration filter`);for(const e of Filters._durationFilterPresetsMs)t.addOption(t.createOption(e?Common.UIString.UIString("≥ %d ms",e):Common.UIString.UIString("All"),String(e)));e.appendToolbarItem(t);const i={},r=TimelineUIUtils.categories();for(const t in r){const n=r[t];if(!n.visible)continue;const s=new UI.Toolbar.ToolbarCheckbox(n.title,void 0,o.bind(this,t));s.setChecked(!0),s.inputElement.style.backgroundColor=n.color,i[n.name]=s,e.appendToolbarItem(s)}function o(e){TimelineUIUtils.categories()[e].hidden=!i[e].checked(),this._notifyFiltersChanged()}}_notifyFiltersChanged(){this.dispatchEventToListeners(Filters.Events.FilterChanged)}}Filters._durationFilterPresetsMs=[0,1,15],Filters.Events={FilterChanged:Symbol("FilterChanged")};