import*as Bindings from"../bindings/bindings.js";import*as Common from"../common/common.js";import*as PerfUI from"../perf_ui/perf_ui.js";import*as Platform from"../platform/platform.js";import*as SDK from"../sdk/sdk.js";import*as TimelineModel from"../timeline_model/timeline_model.js";import*as UI from"../ui/ui.js";import{CountersGraph}from"./CountersGraph.js";import{Events as PerformanceModelEvents,PerformanceModel,Window}from"./PerformanceModel.js";import{TimelineDetailsView}from"./TimelineDetailsView.js";import{TimelineRegExp}from"./TimelineFilters.js";import{Events as TimelineFlameChartDataProviderEvents,TimelineFlameChartDataProvider}from"./TimelineFlameChartDataProvider.js";import{TimelineFlameChartNetworkDataProvider}from"./TimelineFlameChartNetworkDataProvider.js";import{TimelineModeViewDelegate,TimelineSelection}from"./TimelinePanel.js";import{AggregatedTimelineTreeView}from"./TimelineTreeView.js";import{TimelineMarkerStyle,TimelineUIUtils}from"./TimelineUIUtils.js";export class TimelineFlameChartView extends UI.Widget.VBox{constructor(e){super(),this.element.classList.add("timeline-flamechart"),this._delegate=e,this._model=null,this._searchResults,this._eventListeners=[],this._showMemoryGraphSetting=Common.Settings.Settings.instance().createSetting("timelineShowMemory",!1),this._networkSplitWidget=new UI.SplitWidget.SplitWidget(!1,!1,"timelineFlamechartMainView",150);const t=Common.Settings.Settings.instance().createSetting("timelineFlamechartMainViewGroupExpansion",{});this._mainDataProvider=new TimelineFlameChartDataProvider,this._mainDataProvider.addEventListener(TimelineFlameChartDataProviderEvents.DataChanged,()=>this._mainFlameChart.scheduleUpdate()),this._mainFlameChart=new PerfUI.FlameChart.FlameChart(this._mainDataProvider,this,t),this._mainFlameChart.alwaysShowVerticalScroll(),this._mainFlameChart.enableRuler(!1),this._networkFlameChartGroupExpansionSetting=Common.Settings.Settings.instance().createSetting("timelineFlamechartNetworkViewGroupExpansion",{}),this._networkDataProvider=new TimelineFlameChartNetworkDataProvider,this._networkFlameChart=new PerfUI.FlameChart.FlameChart(this._networkDataProvider,this,this._networkFlameChartGroupExpansionSetting),this._networkFlameChart.alwaysShowVerticalScroll(),this._networkFlameChart.disableRangeSelection(),this._networkPane=new UI.Widget.VBox,this._networkPane.setMinimumSize(23,23),this._networkFlameChart.show(this._networkPane.element),this._splitResizer=this._networkPane.element.createChild("div","timeline-flamechart-resizer"),this._networkSplitWidget.hideDefaultResizer(!0),this._networkSplitWidget.installResizer(this._splitResizer),this._networkSplitWidget.setMainWidget(this._mainFlameChart),this._networkSplitWidget.setSidebarWidget(this._networkPane),this._chartSplitWidget=new UI.SplitWidget.SplitWidget(!1,!0,"timelineCountersSplitViewState"),this._countersView=new CountersGraph(this._delegate),this._chartSplitWidget.setMainWidget(this._networkSplitWidget),this._chartSplitWidget.setSidebarWidget(this._countersView),this._chartSplitWidget.hideDefaultResizer(),this._chartSplitWidget.installResizer(this._countersView.resizerElement()),this._updateCountersGraphToggle(),this._detailsSplitWidget=new UI.SplitWidget.SplitWidget(!1,!0,"timelinePanelDetailsSplitViewState"),this._detailsSplitWidget.element.classList.add("timeline-details-split"),this._detailsView=new TimelineDetailsView(e),this._detailsSplitWidget.installResizer(this._detailsView.headerElement()),this._detailsSplitWidget.setMainWidget(this._chartSplitWidget),this._detailsSplitWidget.setSidebarWidget(this._detailsView),this._detailsSplitWidget.show(this.element),this._onMainEntrySelected=this._onEntrySelected.bind(this,this._mainDataProvider),this._onNetworkEntrySelected=this._onEntrySelected.bind(this,this._networkDataProvider),this._mainFlameChart.addEventListener(PerfUI.FlameChart.Events.EntrySelected,this._onMainEntrySelected,this),this._mainFlameChart.addEventListener(PerfUI.FlameChart.Events.EntryInvoked,this._onMainEntrySelected,this),this._networkFlameChart.addEventListener(PerfUI.FlameChart.Events.EntrySelected,this._onNetworkEntrySelected,this),this._networkFlameChart.addEventListener(PerfUI.FlameChart.Events.EntryInvoked,this._onNetworkEntrySelected,this),this._mainFlameChart.addEventListener(PerfUI.FlameChart.Events.EntryHighlighted,this._onEntryHighlighted,this),this._nextExtensionIndex=0,this._boundRefresh=this._refresh.bind(this),this._selectedTrack=null,this._mainDataProvider.setEventColorMapping(TimelineUIUtils.eventColor),this._groupBySetting=Common.Settings.Settings.instance().createSetting("timelineTreeGroupBy",AggregatedTimelineTreeView.GroupBy.None),this._groupBySetting.addChangeListener(this._updateColorMapper,this),this._updateColorMapper()}_updateColorMapper(){this._urlToColorCache=new Map,this._model&&(this._mainDataProvider.setEventColorMapping(TimelineUIUtils.eventColor),this._mainFlameChart.update())}_onWindowChanged(e){const t=e.data.window,i=!!e.data.animate;this._mainFlameChart.setWindowTimes(t.left,t.right,i),this._networkFlameChart.setWindowTimes(t.left,t.right,i),this._networkDataProvider.setWindowTimes(t.left,t.right),this._updateSearchResults(!1,!1)}windowChanged(e,t,i){this._model.setWindow({left:e,right:t},i)}updateRangeSelection(e,t){this._delegate.select(TimelineSelection.fromRange(e,t))}updateSelectedGroup(e,t){if(e!==this._mainFlameChart)return;const i=t?this._mainDataProvider.groupTrack(t):null;this._selectedTrack=i,this._updateTrack()}setModel(e){if(e!==this._model){if(Common.EventTarget.EventTarget.removeEventListeners(this._eventListeners),this._model=e,this._selectedTrack=null,this._mainDataProvider.setModel(this._model),this._networkDataProvider.setModel(this._model),this._model){this._eventListeners=[this._model.addEventListener(PerformanceModelEvents.WindowChanged,this._onWindowChanged,this),this._model.addEventListener(PerformanceModelEvents.ExtensionDataAdded,this._appendExtensionData,this)];const t=e.window();this._mainFlameChart.setWindowTimes(t.left,t.right),this._networkFlameChart.setWindowTimes(t.left,t.right),this._networkDataProvider.setWindowTimes(t.left,t.right),this._updateSearchResults(!1,!1)}this._updateColorMapper(),this._updateTrack(),this._nextExtensionIndex=0,this._appendExtensionData(),this._refresh()}}_updateTrack(){this._countersView.setModel(this._model,this._selectedTrack),this._detailsView.setModel(this._model,this._selectedTrack)}_refresh(){this._networkDataProvider.isEmpty()?(this._mainFlameChart.enableRuler(!0),this._networkSplitWidget.hideSidebar()):(this._mainFlameChart.enableRuler(!1),this._networkSplitWidget.showBoth(),this.resizeToPreferredHeights()),this._mainFlameChart.reset(),this._networkFlameChart.reset(),this._updateSearchResults(!1,!1)}_appendExtensionData(){if(!this._model)return;const e=this._model.extensionInfo();for(;this._nextExtensionIndex<e.length;)this._mainDataProvider.appendExtensionEvents(e[this._nextExtensionIndex++]);this._mainFlameChart.scheduleUpdate()}_onEntryHighlighted(e){SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();const t=e.data,i=this._mainDataProvider.eventByIndex(t);if(!i)return;const s=this._model&&this._model.timelineModel().targetByEvent(i);if(!s)return;const r=TimelineModel.TimelineModel.TimelineData.forEvent(i).backendNodeId;r&&new SDK.DOMModel.DeferredDOMNode(s,r).highlight()}highlightEvent(e){const t=e?this._mainDataProvider.entryIndexForSelection(TimelineSelection.fromTraceEvent(e)):-1;t>=0?this._mainFlameChart.highlightEntry(t):this._mainFlameChart.hideHighlight()}willHide(){this._networkFlameChartGroupExpansionSetting.removeChangeListener(this.resizeToPreferredHeights,this),this._showMemoryGraphSetting.removeChangeListener(this._updateCountersGraphToggle,this),Bindings.BlackboxManager.BlackboxManager.instance().removeChangeListener(this._boundRefresh)}wasShown(){this._networkFlameChartGroupExpansionSetting.addChangeListener(this.resizeToPreferredHeights,this),this._showMemoryGraphSetting.addChangeListener(this._updateCountersGraphToggle,this),Bindings.BlackboxManager.BlackboxManager.instance().addChangeListener(this._boundRefresh),this._needsResizeToPreferredHeights&&this.resizeToPreferredHeights(),this._mainFlameChart.scheduleUpdate(),this._networkFlameChart.scheduleUpdate()}_updateCountersGraphToggle(){this._showMemoryGraphSetting.get()?this._chartSplitWidget.showBoth():this._chartSplitWidget.hideSidebar()}setSelection(e){let t=this._mainDataProvider.entryIndexForSelection(e);this._mainFlameChart.setSelectedEntry(t),t=this._networkDataProvider.entryIndexForSelection(e),this._networkFlameChart.setSelectedEntry(t),this._detailsView&&this._detailsView.setSelection(e)}_onEntrySelected(e,t){const i=t.data;Root.Runtime.experiments.isEnabled("timelineEventInitiators")&&e===this._mainDataProvider&&this._mainDataProvider.buildFlowForInitiator(i)&&this._mainFlameChart.scheduleUpdate(),this._delegate.select(e.createSelection(i))}resizeToPreferredHeights(){this.isShowing()?(this._needsResizeToPreferredHeights=!1,this._networkPane.element.classList.toggle("timeline-network-resizer-disabled",!this._networkDataProvider.isExpanded()),this._networkSplitWidget.setSidebarSize(this._networkDataProvider.preferredHeight()+this._splitResizer.clientHeight+PerfUI.FlameChart.HeaderHeight+2)):this._needsResizeToPreferredHeights=!0}setSearchableView(e){this._searchableView=e}jumpToNextSearchResult(){if(!this._searchResults||!this._searchResults.length)return;const e=void 0!==this._selectedSearchResult?this._searchResults.indexOf(this._selectedSearchResult):-1;this._selectSearchResult(Platform.NumberUtilities.mod(e+1,this._searchResults.length))}jumpToPreviousSearchResult(){if(!this._searchResults||!this._searchResults.length)return;const e=void 0!==this._selectedSearchResult?this._searchResults.indexOf(this._selectedSearchResult):0;this._selectSearchResult(Platform.NumberUtilities.mod(e-1,this._searchResults.length))}supportsCaseSensitiveSearch(){return!0}supportsRegexSearch(){return!0}_selectSearchResult(e){this._searchableView.updateCurrentMatchIndex(e),this._selectedSearchResult=this._searchResults[e],this._delegate.select(this._mainDataProvider.createSelection(this._selectedSearchResult))}_updateSearchResults(e,t){const i=this._selectedSearchResult;if(delete this._selectedSearchResult,this._searchResults=[],!this._searchRegex||!this._model)return;const s=new TimelineRegExp(this._searchRegex),r=this._model.window();if(this._searchResults=this._mainDataProvider.search(r.left,r.right,s),this._searchableView.updateSearchMatchesCount(this._searchResults.length),!e||!this._searchResults.length)return;let a=this._searchResults.indexOf(i);-1===a&&(a=t?this._searchResults.length-1:0),this._selectSearchResult(a)}searchCanceled(){void 0!==this._selectedSearchResult&&this._delegate.select(null),delete this._searchResults,delete this._selectedSearchResult,delete this._searchRegex}performSearch(e,t,i){this._searchRegex=e.toSearchRegex(),this._updateSearchResults(t,i)}}export class Selection{constructor(e,t){this.timelineSelection=e,this.entryIndex=t}}export const FlameChartStyle={textColor:"#333"};export class TimelineFlameChartMarker{constructor(e,t,i){this._startTime=e,this._startOffset=t,this._style=i}startTime(){return this._startTime}color(){return this._style.color}title(){if(this._style.lowPriority)return null;const e=Number.millisToString(this._startOffset);return ls`${this._style.title} at ${e}`}draw(e,t,i,s){this._style.lowPriority&&s<4||(e.save(),this._style.tall&&(e.strokeStyle=this._style.color,e.lineWidth=this._style.lineWidth,e.translate(this._style.lineWidth<1||1&this._style.lineWidth?.5:0,.5),e.beginPath(),e.moveTo(t,0),e.setLineDash(this._style.dashStyle),e.lineTo(t,e.canvas.height),e.stroke()),e.restore())}}export const ColorBy={URL:"URL"};