import{TimelineCategory,TimelineRecordStyle}from"./TimelineUIUtils.js";export class UIDevtoolsUtils{static isUiDevTools(){return"true"===Root.Runtime.queryParam("uiDevTools")}static categorizeEvents(){if(UIDevtoolsUtils._eventStylesMap)return UIDevtoolsUtils._eventStylesMap;const e=RecordType,i=UIDevtoolsUtils.categories(),n=i.drawing,r=i.rasterizing,t=i.layout,a=i.painting,l=i.other,s={};return s[e.ViewPaint]=new TimelineRecordStyle(ls`View::Paint`,a),s[e.ViewOnPaint]=new TimelineRecordStyle(ls`View::OnPaint`,a),s[e.ViewPaintChildren]=new TimelineRecordStyle(ls`View::PaintChildren`,a),s[e.ViewOnPaintBackground]=new TimelineRecordStyle(ls`View::OnPaintBackground`,a),s[e.ViewOnPaintBorder]=new TimelineRecordStyle(ls`View::OnPaintBorder`,a),s[e.LayerPaintContentsToDisplayList]=new TimelineRecordStyle(ls`Layer::PaintContentsToDisplayList`,a),s[e.ViewLayout]=new TimelineRecordStyle(ls`View::Layout`,t),s[e.ViewLayoutBoundsChanged]=new TimelineRecordStyle(ls`View::Layout(bounds_changed)`,t),s[e.RasterTask]=new TimelineRecordStyle(ls`RasterTask`,r),s[e.RasterizerTaskImplRunOnWorkerThread]=new TimelineRecordStyle(ls`RasterizerTaskImpl::RunOnWorkerThread`,r),s[e.DirectRendererDrawFrame]=new TimelineRecordStyle(ls`DirectRenderer::DrawFrame`,n),s[e.BeginFrame]=new TimelineRecordStyle(ls`Frame Start`,n,!0),s[e.DrawFrame]=new TimelineRecordStyle(ls`Draw Frame`,n,!0),s[e.NeedsBeginFrameChanged]=new TimelineRecordStyle(ls`NeedsBeginFrameChanged`,n,!0),s[e.ThreadControllerImplRunTask]=new TimelineRecordStyle(ls`ThreadControllerImpl::RunTask`,l),UIDevtoolsUtils._eventStylesMap=s,s}static categories(){return UIDevtoolsUtils._categories||(UIDevtoolsUtils._categories={layout:new TimelineCategory("layout",ls`Layout`,!0,"hsl(214, 67%, 74%)","hsl(214, 67%, 66%)"),rasterizing:new TimelineCategory("rasterizing",ls`Rasterizing`,!0,"hsl(43, 83%, 72%)","hsl(43, 83%, 64%) "),drawing:new TimelineCategory("drawing",ls`Drawing`,!0,"hsl(256, 67%, 76%)","hsl(256, 67%, 70%)"),painting:new TimelineCategory("painting",ls`Painting`,!0,"hsl(109, 33%, 64%)","hsl(109, 33%, 55%)"),other:new TimelineCategory("other",ls`System`,!1,"hsl(0, 0%, 87%)","hsl(0, 0%, 79%)"),idle:new TimelineCategory("idle",ls`Idle`,!1,"hsl(0, 0%, 98%)","hsl(0, 0%, 98%)")}),UIDevtoolsUtils._categories}static getMainCategoriesList(){return["idle","drawing","painting","rasterizing","layout","other"]}}export const RecordType={ViewPaint:"View::Paint",ViewOnPaint:"View::OnPaint",ViewPaintChildren:"View::PaintChildren",ViewOnPaintBackground:"View::OnPaintBackground",ViewOnPaintBorder:"View::OnPaintBorder",ViewLayout:"View::Layout",ViewLayoutBoundsChanged:"View::Layout(bounds_changed)",LayerPaintContentsToDisplayList:"Layer::PaintContentsToDisplayList",DirectRendererDrawFrame:"DirectRenderer::DrawFrame",RasterTask:"RasterTask",RasterizerTaskImplRunOnWorkerThread:"RasterizerTaskImpl::RunOnWorkerThread",BeginFrame:"BeginFrame",DrawFrame:"DrawFrame",NeedsBeginFrameChanged:"NeedsBeginFrameChanged",ThreadControllerImplRunTask:"ThreadControllerImpl::RunTask"};