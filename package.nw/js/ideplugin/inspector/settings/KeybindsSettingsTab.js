import*as UI from"../ui/ui.js";export class KeybindsSettingsTab extends UI.Widget.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/keybindsSettingsTab.css");this.contentElement.createChild("header").createChild("h1").textContent=ls`Shortcuts`;const t=self.Common.settings.moduleSetting("activeKeybindSet");t.addChangeListener(this.update,this);const e=UI.SettingsUI.createControlForSetting(t,ls`Match shortcuts from preset`);e.classList.add("keybinds-set-select"),this.contentElement.appendChild(e),this._items=new UI.ListModel.ListModel,this._list=new UI.ListControl.ListControl(this._items,this,UI.ListControl.ListMode.NonViewport),this._items.replaceAll(this._createListItems()),UI.ARIAUtils.markAsList(this._list.element),this.registerRequiredCSS("settings/keybindsSettingsTab.css"),this.contentElement.appendChild(this._list.element),UI.ARIAUtils.setAccessibleName(this._list.element,ls`Keyboard shortcuts list`),this.update()}createElementForItem(t){const e=document.createElement("div");if(e.classList.add("keybinds-list-item"),UI.ARIAUtils.markAsListitem(e),e.tabIndex=t===this._list.selectedItem()?0:-1,"string"==typeof t)UI.ARIAUtils.setLevel(e,1),e.classList.add("keybinds-category-header"),e.textContent=t;else{UI.ARIAUtils.setLevel(e,2),e.createChild("div","keybinds-action-name keybinds-list-text").textContent=t.title();const s=self.UI.shortcutRegistry.shortcutsForAction(t.id());if(s.forEach((t,s)=>{if(!t.isDefault()){const t=UI.Icon.Icon.create("largeicon-shortcut-changed","keybinds-modified");UI.ARIAUtils.setAccessibleName(t,ls`Shortcut provided by preset`),e.appendChild(t)}const i=e.createChild("div","keybinds-shortcut keybinds-list-text");t.descriptors.flatMap(t=>t.name.split(" + ")).forEach(t=>{i.createChild("span","keybinds-key").textContent=t})}),0===s.length){if(self.UI.shortcutRegistry.actionHasDefaultShortcut(t.id())){const t=UI.Icon.Icon.create("largeicon-shortcut-changed","keybinds-modified");UI.ARIAUtils.setAccessibleName(t,ls`Shortcut provided by preset`),e.appendChild(t)}const s=e.createChild("div","keybinds-shortcut keybinds-list-text");UI.ARIAUtils.setAccessibleName(s,ls`No shortcut for action`)}}return e}heightForItem(t){return 0}isItemSelectable(t){return!0}selectedItemChanged(t,e,s,i){s&&(s.tabIndex=-1),i&&(i.tabIndex=0,this._list.element.hasFocus()&&i.focus())}updateSelectedItemARIA(t,e){return!0}_createListItems(){const t=UI.ActionRegistry.ActionRegistry.instance().actions().sort((t,e)=>t.category()<e.category()?-1:t.category()>e.category()?1:t.id()<e.id()?-1:t.id()>e.id()?1:0),e=[];let s;return t.forEach(t=>{s!==t.category()&&e.push(t.category()),e.push(t),s=t.category()}),e}update(){this._list.refreshAllItems(),this._list.selectedItem()||this._list.selectItem(this._items.at(0))}}export let KeybindsItem;