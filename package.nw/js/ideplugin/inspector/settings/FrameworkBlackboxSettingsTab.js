import*as Common from"../common/common.js";import*as UI from"../ui/ui.js";export class FrameworkBlackboxSettingsTab extends UI.Widget.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const t=this.contentElement.createChild("div","header");t.textContent=ls`Framework Blackboxing`,UI.ARIAUtils.markAsHeading(t,1),this.contentElement.createChild("div","intro").textContent=ls`Debugger will skip through the scripts and will not stop on exceptions thrown by them.`;const e=this.contentElement.createChild("div","blackbox-content-scripts");e.appendChild(UI.SettingsUI.createSettingCheckbox(ls`Blackbox content scripts`,Common.Settings.Settings.instance().moduleSetting("skipContentScripts"),!0)),e.title=ls`Blackbox content scripts (extension scripts in the page)`,this._blackboxLabel=Common.UIString.UIString("Blackbox"),this._disabledLabel=Common.UIString.UIString("Disabled"),this._list=new UI.ListWidget.ListWidget(this),this._list.element.classList.add("blackbox-list"),this._list.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const i=document.createElement("div");i.classList.add("blackbox-list-empty"),i.textContent=Common.UIString.UIString("No blackboxed patterns"),this._list.setEmptyPlaceholder(i),this._list.show(this.contentElement);const s=UI.UIUtils.createTextButton(Common.UIString.UIString("Add pattern..."),this._addButtonClicked.bind(this),"add-button");UI.ARIAUtils.setAccessibleName(s,ls`Add filename pattern`),this.contentElement.appendChild(s),this._setting=Common.Settings.Settings.instance().moduleSetting("skipStackFramesPattern"),this._setting.addChangeListener(this._settingUpdated,this),this.setDefaultFocusedElement(s)}wasShown(){super.wasShown(),this._settingUpdated()}_settingUpdated(){this._list.clear();const t=this._setting.getAsArray();for(let e=0;e<t.length;++e)this._list.appendItem(t[e],!0)}_addButtonClicked(){this._list.addNewItem(this._setting.getAsArray().length,{pattern:"",disabled:!1})}renderItem(t,e){const i=document.createElement("div");i.classList.add("blackbox-list-item");const s=i.createChild("div","blackbox-pattern");return s.textContent=t.pattern,s.title=ls`Blackbox scripts whose names match '${t.pattern}'`,i.createChild("div","blackbox-separator"),i.createChild("div","blackbox-behavior").textContent=t.disabled?this._disabledLabel:this._blackboxLabel,t.disabled&&i.classList.add("blackbox-disabled"),i}removeItemRequested(t,e){const i=this._setting.getAsArray();i.splice(e,1),this._setting.setAsArray(i)}commitEdit(t,e,i){t.pattern=e.control("pattern").value.trim(),t.disabled=e.control("behavior").value===this._disabledLabel;const s=this._setting.getAsArray();i&&s.push(t),this._setting.setAsArray(s)}beginEdit(t){const e=this._createEditor();return e.control("pattern").value=t.pattern,e.control("behavior").value=t.disabled?this._disabledLabel:this._blackboxLabel,e}_createEditor(){if(this._editor)return this._editor;const t=new UI.ListWidget.Editor;this._editor=t;const e=t.contentElement(),i=e.createChild("div","blackbox-edit-row");i.createChild("div","blackbox-pattern").textContent=Common.UIString.UIString("Pattern"),i.createChild("div","blackbox-separator blackbox-separator-invisible"),i.createChild("div","blackbox-behavior").textContent=Common.UIString.UIString("Behavior");const s=e.createChild("div","blackbox-edit-row"),n=t.createInput("pattern","text","/framework\\.js$",function(t,e,i){const s=i.value.trim(),n=this._setting.getAsArray();if(!s.length)return{valid:!1,errorMessage:ls`Pattern cannot be empty`};for(let t=0;t<n.length;++t)if(t!==e&&n[t].pattern===s)return{valid:!1,errorMessage:ls`Pattern already exists`};let a;try{a=new RegExp(s)}catch(t){}if(!a)return{valid:!1,errorMessage:ls`Pattern must be a valid regular expression`};return{valid:!0}}.bind(this));UI.ARIAUtils.setAccessibleName(n,ls`Pattern`),s.createChild("div","blackbox-pattern").appendChild(n),s.createChild("div","blackbox-separator blackbox-separator-invisible");const a=t.createSelect("behavior",[this._blackboxLabel,this._disabledLabel],(function(t,e,i){return{valid:!0}}));return UI.ARIAUtils.setAccessibleName(a,ls`Behavior`),s.createChild("div","blackbox-behavior").appendChild(a),t}}