import*as Bindings from"../bindings/bindings.js";import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as TextUtils from"../text_utils/text_utils.js";export const CoverageType={CSS:1,JavaScript:2,JavaScriptPerFunction:4};export const SuspensionState={Active:Symbol("Active"),Suspending:Symbol("Suspending"),Suspended:Symbol("Suspended")};export const Events={CoverageUpdated:Symbol("CoverageUpdated"),CoverageReset:Symbol("CoverageReset")};const _coveragePollingPeriodMs=200;export class CoverageModel extends SDK.SDKModel.SDKModel{constructor(e){super(e),this._cpuProfilerModel=e.model(SDK.CPUProfilerModel.CPUProfilerModel),this._cssModel=e.model(SDK.CSSModel.CSSModel),this._debuggerModel=e.model(SDK.DebuggerModel.DebuggerModel),this._coverageByURL=new Map,this._coverageByContentProvider=new Map,this._coverageUpdateTimes=new Set,this._suspensionState=SuspensionState.Active,this._pollTimer=null,this._currentPollPromise=null,this._shouldResumePollingOnResume=!1,this._jsBacklog=[],this._cssBacklog=[],this._performanceTraceRecording=!1}async start(e){if(this._suspensionState!==SuspensionState.Active)throw Error("Cannot start CoverageModel while it is not active.");const t=[];return this._cssModel&&(this._clearCSS(),this._cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded,this._handleStyleSheetAdded,this),t.push(this._cssModel.startCoverage())),this._cpuProfilerModel&&t.push(this._cpuProfilerModel.startPreciseCoverage(e,this.preciseCoverageDeltaUpdate.bind(this))),await Promise.all(t),!(!this._cssModel&&!this._cpuProfilerModel)}preciseCoverageDeltaUpdate(e,t,s){this._coverageUpdateTimes.add(e),this._backlogOrProcessJSCoverage(s,e)}async stop(){await this.stopPolling();const e=[];this._cpuProfilerModel&&e.push(this._cpuProfilerModel.stopPreciseCoverage()),this._cssModel&&(e.push(this._cssModel.stopCoverage()),this._cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetAdded,this._handleStyleSheetAdded,this)),await Promise.all(e)}reset(){this._coverageByURL=new Map,this._coverageByContentProvider=new Map,this._coverageUpdateTimes=new Set,this.dispatchEventToListeners(CoverageModel.Events.CoverageReset)}async startPolling(){this._currentPollPromise||this._suspensionState!==SuspensionState.Active||await this._pollLoop()}async _pollLoop(){this._clearTimer(),this._currentPollPromise=this._pollAndCallback(),await this._currentPollPromise,(this._suspensionState===SuspensionState.Active||this._performanceTraceRecording)&&(this._pollTimer=setTimeout(()=>this._pollLoop(),200))}async stopPolling(){this._clearTimer(),await this._currentPollPromise,this._currentPollPromise=null,await this._pollAndCallback()}async _pollAndCallback(){if(this._suspensionState===SuspensionState.Suspended&&!this._performanceTraceRecording)return;const e=await this._takeAllCoverage();console.assert(this._suspensionState!==SuspensionState.Suspended||this._performanceTraceRecording,"CoverageModel was suspended while polling."),e.length&&this.dispatchEventToListeners(Events.CoverageUpdated,e)}_clearTimer(){this._pollTimer&&(clearTimeout(this._pollTimer),this._pollTimer=null)}async preSuspendModel(e){this._suspensionState===SuspensionState.Active&&(this._suspensionState=SuspensionState.Suspending,"performance-timeline"!==e?this._currentPollPromise&&(await this.stopPolling(),this._shouldResumePollingOnResume=!0):this._performanceTraceRecording=!0)}async suspendModel(e){this._suspensionState=SuspensionState.Suspended}async resumeModel(){}async postResumeModel(){this._suspensionState=SuspensionState.Active,this._performanceTraceRecording=!1,this._shouldResumePollingOnResume&&(this._shouldResumePollingOnResume=!1,await this.startPolling())}entries(){return Array.from(this._coverageByURL.values())}getCoverageForUrl(e){return this._coverageByURL.get(e)}usageForRange(e,t,s){const o=this._coverageByContentProvider.get(e);return o&&o.usageForRange(t,s)}_clearCSS(){for(const e of this._coverageByContentProvider.values()){if(e.type()!==CoverageType.CSS)continue;const t=e.contentProvider();this._coverageByContentProvider.delete(t);const s=`${t.startLine}:${t.startColumn}`,o=this._coverageByURL.get(e.url());o&&o._coverageInfoByLocation.delete(s)&&(o._addToSizes(-e._usedSize,-e._size),o._coverageInfoByLocation.size||this._coverageByURL.delete(e.url()))}for(const e of this._cssModel.getAllStyleSheetHeaders())this._addStyleSheetToCSSCoverage(e)}async _takeAllCoverage(){const[e,t]=await Promise.all([this._takeCSSCoverage(),this._takeJSCoverage()]);return[...e,...t]}async _takeJSCoverage(){if(!this._cpuProfilerModel)return[];const{coverage:e,timestamp:t}=await this._cpuProfilerModel.takePreciseCoverage();return this._coverageUpdateTimes.add(t),this._backlogOrProcessJSCoverage(e,t)}coverageUpdateTimes(){return this._coverageUpdateTimes}async _backlogOrProcessJSCoverage(e,t){if(e.length>0&&this._jsBacklog.push({rawCoverageData:e,stamp:t}),this._suspensionState!==SuspensionState.Active)return[];const s=(e,t)=>e.stamp-t.stamp,o=[];for(const{rawCoverageData:e,stamp:t}of this._jsBacklog.sort(s))o.push(this._processJSCoverage(e,t));return this._jsBacklog=[],o.flat()}async processJSBacklog(){this._backlogOrProcessJSCoverage([],0)}_processJSCoverage(e,t){const s=[];for(const o of e){const e=this._debuggerModel.scriptForId(o.scriptId);if(!e)continue;const n=[];let r=CoverageType.JavaScript;for(const e of o.functions){!1!==e.isBlockCoverage||1===e.ranges.length&&!e.ranges[0].count||(r|=CoverageType.JavaScriptPerFunction);for(const t of e.ranges)n.push(t)}const i=this._addCoverage(e,e.contentLength,e.lineOffset,e.columnOffset,n,r,t);i&&s.push(i)}return s}_handleStyleSheetAdded(e){const t=e.data;this._addStyleSheetToCSSCoverage(t)}async _takeCSSCoverage(){if(!this._cssModel||this._suspensionState!==SuspensionState.Active)return[];const{coverage:e,timestamp:t}=await this._cssModel.takeCoverageDelta();return this._coverageUpdateTimes.add(t),this._backlogOrProcessCSSCoverage(e,t)}async _backlogOrProcessCSSCoverage(e,t){if(e.length>0&&this._cssBacklog.push({rawCoverageData:e,stamp:t}),this._suspensionState!==SuspensionState.Active)return[];const s=(e,t)=>e.stamp-t.stamp,o=[];for(const{rawCoverageData:e,stamp:t}of this._cssBacklog.sort(s))o.push(this._processCSSCoverage(e,t));return this._cssBacklog=[],o.flat()}_processCSSCoverage(e,t){const s=[],o=new Map;for(const t of e){const e=this._cssModel.styleSheetHeaderForId(t.styleSheetId);if(!e)continue;let s=o.get(e);s||(s=[],o.set(e,s)),s.push({startOffset:t.startOffset,endOffset:t.endOffset,count:Number(t.used)})}for(const e of o){const o=e[0],n=e[1],r=this._addCoverage(o,o.contentLength,o.startLine,o.startColumn,n,CoverageType.CSS,t);r&&s.push(r)}return s}static _convertToDisjointSegments(e,t){e.sort((e,t)=>e.startOffset-t.startOffset);const s=[],o=[];for(const t of e){let e=o.peekLast();for(;e&&e.endOffset<=t.startOffset;)n(e.endOffset,e.count),o.pop(),e=o.peekLast();n(t.startOffset,e?e.count:void 0),o.push(t)}for(;o.length;){const e=o.pop();n(e.endOffset,e.count)}function n(e,o){const n=s.peekLast();if(n){if(n.end===e)return;if(n.count===o)return void(n.end=e)}s.push({end:e,count:o,stamp:t})}return s}_addStyleSheetToCSSCoverage(e){this._addCoverage(e,e.contentLength,e.startLine,e.startColumn,[],CoverageType.CSS,Date.now())}_addCoverage(e,t,s,o,n,r,i){const a=e.contentURL();if(!a)return null;let c=this._coverageByURL.get(a),l=!1;c||(l=!0,c=new URLCoverageInfo(a),this._coverageByURL.set(a,c));const h=c._ensureEntry(e,t,s,o,r);this._coverageByContentProvider.set(e,h);const u=CoverageModel._convertToDisjointSegments(n,i);u.length&&u.peekLast().end<t&&u.push({end:t,stamp:i});const d=h._usedSize;return h.mergeCoverage(u),l||h._usedSize!==d?(c._addToSizes(h._usedSize-d,0),h):null}async exportReport(e){const t=[];function s(e,t){const[s,o]=e.split(":"),[n,r]=t.split(":");return s-n||o-r}const o=Array.from(this._coverageByURL.keys()).sort();for(const e of o){const o=this._coverageByURL.get(e),n=o.url();if(n.startsWith("extensions::")||n.startsWith("chrome-extension://"))continue;let r=!1;for(const e of o._coverageInfoByLocation.values())if(e._lineOffset||e._columnOffset){r=!!n;break}let i=null;if(r){const e=SDK.ResourceTreeModel.ResourceTreeModel.resourceForURL(n);if(e){const t=(await e.requestContent()).content;i=new TextUtils.Text.Text(t||"")}}const a=Array.from(o._coverageInfoByLocation.keys()).sort(s);if(i){const e={url:n,ranges:[],text:i.value()};for(const t of a){const s=o._coverageInfoByLocation.get(t),n=i?i.offsetFromPosition(s._lineOffset,s._columnOffset):0;let r=0;for(const t of s._segments)t.count?e.ranges.push({start:r+n,end:t.end+n}):r=t.end}t.push(e)}else for(const e of a){const s=o._coverageInfoByLocation.get(e),r={url:n,ranges:[],text:(await s.contentProvider().requestContent()).content};let i=0;for(const e of s._segments)e.count?r.ranges.push({start:i,end:e.end}):i=e.end;t.push(r)}}await e.write(JSON.stringify(t,void 0,2)),e.close()}}SDK.SDKModel.SDKModel.register(CoverageModel,SDK.SDKModel.Capability.None,!1);export class URLCoverageInfo extends Common.ObjectWrapper.ObjectWrapper{constructor(e){super(),this._url=e,this._coverageInfoByLocation=new Map,this._size=0,this._usedSize=0,this._type,this._isContentScript=!1}url(){return this._url}type(){return this._type}size(){return this._size}usedSize(){return this._usedSize}unusedSize(){return this._size-this._usedSize}usedPercentage(){return 0===this._size?0:this.usedSize()/this.size()*100}unusedPercentage(){return 0===this._size?100:this.unusedSize()/this.size()*100}isContentScript(){return this._isContentScript}entries(){return this._coverageInfoByLocation.values()}_addToSizes(e,t){this._usedSize+=e,this._size+=t,0===e&&0===t||this.dispatchEventToListeners(URLCoverageInfo.Events.SizesChanged)}_ensureEntry(e,t,s,o,n){const r=`${s}:${o}`;let i=this._coverageInfoByLocation.get(r);return n&CoverageType.JavaScript&&!this._coverageInfoByLocation.size&&(this._isContentScript=e.isContentScript()),this._type|=n,i?(i._coverageType|=n,i):(n&CoverageType.JavaScript&&!this._coverageInfoByLocation.size&&(this._isContentScript=e.isContentScript()),i=new CoverageInfo(e,t,s,o,n),this._coverageInfoByLocation.set(r,i),this._addToSizes(0,t),i)}}URLCoverageInfo.Events={SizesChanged:Symbol("SizesChanged")};export class CoverageInfo{constructor(e,t,s,o,n){this._contentProvider=e,this._size=t,this._usedSize=0,this._statsByTimestamp=new Map,this._lineOffset=s,this._columnOffset=o,this._coverageType=n,this._segments=[]}contentProvider(){return this._contentProvider}url(){return this._contentProvider.contentURL()}type(){return this._coverageType}mergeCoverage(e){this._segments=CoverageInfo._mergeCoverage(this._segments,e),this._updateStats()}usedByTimestamp(){return this._statsByTimestamp}size(){return this._size}usageForRange(e,t){let s=this._segments.upperBound(e,(e,t)=>e-t.end);for(;s<this._segments.length&&this._segments[s].end<t;++s)if(this._segments[s].count)return!0;return s<this._segments.length&&!!this._segments[s].count}static _mergeCoverage(e,t){const s=[];let o=0,n=0;for(;o<e.length&&n<t.length;){const r=e[o],i=t[n],a="number"==typeof r.count||"number"==typeof i.count?(r.count||0)+(i.count||0):void 0,c=Math.min(r.end,i.end),l=s.peekLast(),h=Math.min(r.stamp,i.stamp);l&&l.count===a&&l.stamp===h?l.end=c:s.push({end:c,count:a,stamp:h}),r.end<=i.end&&o++,r.end>=i.end&&n++}for(;o<e.length;o++)s.push(e[o]);for(;n<t.length;n++)s.push(t[n]);return s}_updateStats(){this._statsByTimestamp=new Map,this._usedSize=0;let e=0;for(const t of this._segments){if(this._statsByTimestamp.has(t.stamp)||this._statsByTimestamp.set(t.stamp,0),t.count){const s=t.end-e;this._usedSize+=s,this._statsByTimestamp.set(t.stamp,this._statsByTimestamp.get(t.stamp)+s)}e=t.end}}}export let RangeUseCount;export let CoverageSegment;