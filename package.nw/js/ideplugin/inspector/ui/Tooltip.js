import*as Platform from"../platform/platform.js";import{GlassPane}from"./GlassPane.js";import{createShadowRootWithCoreStyles}from"./utils/create-shadow-root-with-core-styles.js";import{Events as ZoomManagerEvents,ZoomManager}from"./ZoomManager.js";export class Tooltip{constructor(t){this.element=t.body.createChild("div"),this._shadowRoot=createShadowRootWithCoreStyles(this.element,"ui/tooltip.css"),this._tooltipElement=this._shadowRoot.createChild("div","tooltip"),t.addEventListener("mousemove",this._mouseMove.bind(this),!0),t.addEventListener("mousedown",this._hide.bind(this,!0),!0),t.addEventListener("mouseleave",this._hide.bind(this,!1),!0),t.addEventListener("keydown",this._hide.bind(this,!0),!0),ZoomManager.instance().addEventListener(ZoomManagerEvents.ZoomChanged,this._reset,this),t.defaultView.addEventListener("resize",this._reset.bind(this),!1)}static installHandler(t){new Tooltip(t)}static install(t,e,o,i){e?t[_symbol]={content:e,actionId:o,options:i||{}}:delete t[_symbol]}static addNativeOverrideContainer(t){_nativeOverrideContainer.push(t)}_mouseMove(t){const e=t,o=e.composedPath();if(o&&0===e.buttons&&(0!==e.movementX||0!==e.movementY)){this._anchorElement&&-1===o.indexOf(this._anchorElement)&&this._hide(!1);for(const t of o){if(t===this._anchorElement)return;if(t instanceof Element&&null!==t.offsetParent&&t[_symbol])return void this._show(t,e)}}}_reposition(t,e){this._tooltipElement.positionAt(0,0);const o=GlassPane.container(t.ownerDocument).boxInWindow(this.element.window()),i=this._anchorElement.boxInWindow(this.element.window());this._tooltipElement.classList.toggle("tooltip-breakword",!this._tooltipElement.textContent.match("\\s")),this._tooltipElement.style.maxWidth=o.width-4+"px",this._tooltipElement.style.maxHeight="";const n=this._tooltipElement.offsetWidth,s=this._tooltipElement.offsetHeight,l=this._anchorTooltipAtElement();let h,r=l?i.x:e.x+10;if(r=Platform.NumberUtilities.clamp(r,o.x+2,o.x+o.width-n-2),l){h=i.y+2+i.height+s<o.y+o.height?i.y+i.height+2:i.y-s-2}else h=e.y+10+s<o.y+o.height?e.y+10:e.y-s-1;this._tooltipElement.positionAt(r,h)}_anchorTooltipAtElement(){const t=this._anchorElement[_symbol];return void 0!==t.options.anchorTooltipAtElement?t.options.anchorTooltipAtElement:"BUTTON"===this._anchorElement.nodeName||"LABEL"===this._anchorElement.nodeName}_show(t,e){const o=t[_symbol];if(this._anchorElement=t,this._tooltipElement.removeChildren(),this._shouldUseNativeTooltips())return Object.defineProperty(this._anchorElement,"title",_nativeTitle),void(this._anchorElement.title=o.content);if("string"==typeof o.content?this._tooltipElement.setTextContentTruncatedIfNeeded(o.content):this._tooltipElement.appendChild(o.content),o.actionId){const t=self.UI.shortcutRegistry.shortcutsForAction(o.actionId);for(const e of t){this._tooltipElement.createChild("div","tooltip-shortcut").textContent=e.title()}}const i=Date.now(),n=this._tooltipLastClosed&&i-this._tooltipLastClosed<Timing.InstantThreshold;this._tooltipElement.classList.toggle("instant",n),this._tooltipLastOpened=n?i:i+Timing.OpeningDelay,this._reposition(t,e),this._tooltipElement.classList.add("shown")}_shouldUseNativeTooltips(){for(const t of _nativeOverrideContainer)if(this._anchorElement.isSelfOrDescendant(t))return!0;return!1}_hide(t){delete this._anchorElement,this._tooltipElement.classList.remove("shown"),Date.now()>this._tooltipLastOpened&&(this._tooltipLastClosed=Date.now()),t&&delete this._tooltipLastClosed}_reset(){this._hide(!0),this._tooltipElement.positionAt(0,0),this._tooltipElement.style.maxWidth="0",this._tooltipElement.style.maxHeight="0"}}export let TooltipOptions;const Timing={InstantThreshold:300,OpeningDelay:600},_symbol=Symbol("Tooltip");export const TooltipSymbol=_symbol;const _nativeOverrideContainer=[],_nativeTitle=Object.getOwnPropertyDescriptor(HTMLElement.prototype,"title");Object.defineProperty(HTMLElement.prototype,"title",{get:function(){const t=this[_symbol];return t?t.content:""},set:function(t){Tooltip.install(this,t)}});