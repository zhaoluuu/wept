import*as Common from"../common/common.js";import*as Host from"../host/host.js";import{Action,Events as ActionEvents}from"./Action.js";import{ActionRegistry}from"./ActionRegistry.js";import*as ARIAUtils from"./ARIAUtils.js";import{ContextMenu}from"./ContextMenu.js";import{GlassPane,PointerEventsBehavior}from"./GlassPane.js";import{Icon}from"./Icon.js";import{bindCheckbox}from"./SettingsUI.js";import{Suggestions}from"./SuggestBox.js";import{Events as TextPromptEvents,TextPrompt}from"./TextPrompt.js";import{Tooltip}from"./Tooltip.js";import{CheckboxLabel,LongClickController}from"./UIUtils.js";import{createShadowRootWithCoreStyles}from"./utils/create-shadow-root-with-core-styles.js";export class Toolbar{constructor(t,e){this._items=[],this.element=e?e.createChild("div"):createElement("div"),this.element.className=t,this.element.classList.add("toolbar"),this._enabled=!0,this._shadowRoot=createShadowRootWithCoreStyles(this.element,"ui/toolbar.css"),this._contentElement=this._shadowRoot.createChild("div","toolbar-shadow"),this._insertionPoint=this._contentElement.createChild("slot")}static createLongPressActionButton(t,e,s){const o=Toolbar.createActionButton(t),n=Toolbar.createActionButton(t);let l=null,i=null,a=null;return t.addEventListener(ActionEvents.Toggled,r),r(),o;function r(){const n=t.toggled()?e||null:s||null;n&&n.length?l||(l=new LongClickController(o.element,h),a=Icon.create("largeicon-longclick-triangle","long-click-glyph"),o.element.appendChild(a),i=n):l&&(l.dispose(),l=null,a.remove(),a=null,i=null)}function h(){let t=i.slice();t.push(n);const e=o.element.ownerDocument;e.documentElement.addEventListener("mouseup",(function o(n){if(1!==n.which)return;s.hide(),e.documentElement.removeEventListener("mouseup",o,!1);for(let e=0;e<t.length;++e)if(t[e].element.classList.contains("emulate-active")){t[e].element.classList.remove("emulate-active"),t[e]._clicked(n);break}}),!1);const s=new GlassPane;s.setPointerEventsBehavior(PointerEventsBehavior.BlockedByGlassPane),s.show(e);const l=new Toolbar("fill",s.contentElement);l._contentElement.classList.add("floating");const a=o.element.boxInWindow().relativeToElement(GlassPane.container(e)),r=a.y+26*t.length<e.documentElement.offsetHeight;r&&(t=t.reverse()),l.element.style.height=26*t.length+"px",l.element.style.top=r?a.y-5+"px":a.y-26*(t.length-1)-6+"px",l.element.style.left=a.x-5+"px";for(let e=0;e<t.length;++e)t[e].element.addEventListener("mousemove",c,!1),t[e].element.addEventListener("mouseout",d,!1),l.appendToolbarItem(t[e]);const h=r?0:t.length-1;function c(t){if(1!==t.which)return;t.target.enclosingNodeOrSelfWithClass("toolbar-item").classList.add("emulate-active")}function d(t){if(1!==t.which)return;t.target.enclosingNodeOrSelfWithClass("toolbar-item").classList.remove("emulate-active")}t[h].element.classList.add("emulate-active")}}static createActionButton(t,e=TOOLBAR_BUTTON_DEFAULT_OPTIONS){const s=t.toggleable()?function(){const e=new ToolbarToggle(t.title(),t.icon(),t.toggledIcon());return e.setToggleWithRedColor(t.toggleWithRedColor()),t.addEventListener(ActionEvents.Toggled,s),s(),e;function s(){e.setToggled(t.toggled()),t.title()&&(e.setTitle(t.title()),Tooltip.install(e.element,t.title(),t.id(),{anchorTooltipAtElement:!0}))}}():function(){const e=new ToolbarButton(t.title(),t.icon());t.title()&&Tooltip.install(e.element,t.title(),t.id(),{anchorTooltipAtElement:!0});return e}();e.showLabel&&s.setText(t.title());let o=e=>{t.execute()};if(e.userActionCode){const s=e.userActionCode;o=()=>{Host.userMetrics.actionTaken(s),t.execute()}}return s.addEventListener(ToolbarButton.Events.Click,o,t),t.addEventListener(ActionEvents.Enabled,(function(t){s.setEnabled(t.data)})),s.setEnabled(t.enabled()),s}static createActionButtonForId(t,e=TOOLBAR_BUTTON_DEFAULT_OPTIONS){const s=ActionRegistry.instance().action(t);return Toolbar.createActionButton(s,e)}gripElementForResize(){return this._contentElement}makeWrappable(t){this._contentElement.classList.add("wrappable"),t&&this._contentElement.classList.add("toolbar-grow-vertical")}makeVertical(){this._contentElement.classList.add("vertical")}makeBlueOnHover(){this._contentElement.classList.add("toolbar-blue-on-hover")}makeToggledGray(){this._contentElement.classList.add("toolbar-toggled-gray")}renderAsLinks(){this._contentElement.classList.add("toolbar-render-as-links")}empty(){return!this._items.length}setEnabled(t){this._enabled=t;for(const t of this._items)t._applyEnabledState(this._enabled&&t._enabled)}appendToolbarItem(t){this._items.push(t),t._toolbar=this,this._enabled||t._applyEnabledState(!1),this._contentElement.insertBefore(t.element,this._insertionPoint),this._hideSeparatorDupes()}appendSeparator(){this.appendToolbarItem(new ToolbarSeparator)}appendSpacer(){this.appendToolbarItem(new ToolbarSeparator(!0))}appendText(t){this.appendToolbarItem(new ToolbarText(t))}removeToolbarItems(){for(const t of this._items)delete t._toolbar;this._items=[],this._contentElement.removeChildren(),this._insertionPoint=this._contentElement.createChild("slot")}setColor(t){const e=createElement("style");e.textContent=".toolbar-glyph { background-color: "+t+" !important }",this._shadowRoot.appendChild(e)}setToggledColor(t){const e=createElement("style");e.textContent=".toolbar-button.toolbar-state-on .toolbar-glyph { background-color: "+t+" !important }",this._shadowRoot.appendChild(e)}_hideSeparatorDupes(){if(!this._items.length)return;let t,e=!1,s=!1;for(let o=0;o<this._items.length;++o)this._items[o]instanceof ToolbarSeparator?(this._items[o].setVisible(!e),e=!0,t=this._items[o]):this._items[o].visible()&&(e=!1,t=null,s=!0);t&&t!==this._items.peekLast()&&t.setVisible(!1),this.element.classList.toggle("hidden",!!t&&t.visible()&&!s)}async appendItemsAtLocation(t){const e=self.runtime.extensions(Provider).filter(e=>e.descriptor().location===t);(await Promise.all(e.map(t=>{const e=t.descriptor();return e.separator?new ToolbarSeparator:e.actionId?Toolbar.createActionButtonForId(e.actionId,e.showLabel):t.instance().then(t=>t.item())}))).filter(t=>t).forEach(t=>this.appendToolbarItem(t))}}export let ToolbarButtonOptions;const TOOLBAR_BUTTON_DEFAULT_OPTIONS={showLabel:!1,userActionCode:void 0};export class ToolbarItem extends Common.ObjectWrapper.ObjectWrapper{constructor(t){super(),this.element=t,this.element.classList.add("toolbar-item"),this._visible=!0,this._enabled=!0}setTitle(t){this._title!==t&&(this._title=t,ARIAUtils.setAccessibleName(this.element,t),Tooltip.install(this.element,t,void 0,{anchorTooltipAtElement:!0}))}setEnabled(t){this._enabled!==t&&(this._enabled=t,this._applyEnabledState(this._enabled&&(!this._toolbar||this._toolbar._enabled)))}_applyEnabledState(t){this.element.disabled=!t}visible(){return this._visible}setVisible(t){this._visible!==t&&(this.element.classList.toggle("hidden",!t),this._visible=t,!this._toolbar||this instanceof ToolbarSeparator||this._toolbar._hideSeparatorDupes())}setRightAligned(t){this.element.classList.toggle("toolbar-item-right-aligned",t)}}export class ToolbarText extends ToolbarItem{constructor(t){const e=document.createElement("div");e.classList.add("toolbar-text"),super(e),this.element.classList.add("toolbar-text"),this.setText(t||"")}text(){return this.element.textContent}setText(t){this.element.textContent=t}}export class ToolbarButton extends ToolbarItem{constructor(t,e,s){const o=document.createElement("button");o.classList.add("toolbar-button"),super(o),this.element.addEventListener("click",this._clicked.bind(this),!1),this.element.addEventListener("mousedown",this._mouseDown.bind(this),!1),this._glyphElement=Icon.create("","toolbar-glyph hidden"),this.element.appendChild(this._glyphElement),this._textElement=this.element.createChild("div","toolbar-text hidden"),this.setTitle(t),e&&this.setGlyph(e),this.setText(s||""),this._title=""}setText(t){this._text!==t&&(this._textElement.textContent=t,this._textElement.classList.toggle("hidden",!t),this._text=t)}setGlyph(t){this._glyph!==t&&(this._glyphElement.setIconType(t),this._glyphElement.classList.toggle("hidden",!t),this.element.classList.toggle("toolbar-has-glyph",!!t),this._glyph=t)}setBackgroundImage(t){this.element.style.backgroundImage="url("+t+")"}setSecondary(){this.element.classList.add("toolbar-button-secondary")}setDarkText(){this.element.classList.add("dark-text")}turnIntoSelect(){this.element.classList.add("toolbar-has-dropdown");const t=Icon.create("smallicon-triangle-down","toolbar-dropdown-arrow");this.element.appendChild(t)}_clicked(t){this._enabled&&(this.dispatchEventToListeners(ToolbarButton.Events.Click,t),t.consume())}_mouseDown(t){this._enabled&&this.dispatchEventToListeners(ToolbarButton.Events.MouseDown,t)}}ToolbarButton.Events={Click:Symbol("Click"),MouseDown:Symbol("MouseDown")};export class ToolbarInput extends ToolbarItem{constructor(t,e,s,o,n,l){const i=document.createElement("div");i.classList.add("toolbar-input"),super(i);const a=this.element.createChild("div","toolbar-input-prompt");a.addEventListener("focus",()=>this.element.classList.add("focused")),a.addEventListener("blur",()=>this.element.classList.remove("focused")),ARIAUtils.markAsHidden(a),this._prompt=new TextPrompt,this._proxyElement=this._prompt.attach(a),this._proxyElement.classList.add("toolbar-prompt-proxy"),this._proxyElement.addEventListener("keydown",t=>this._onKeydownCallback(t)),this._prompt.initialize(l||(()=>Promise.resolve([]))," "),n&&this._prompt.setTitle(n),this._prompt.setPlaceholder(t,e),this._prompt.addEventListener(TextPromptEvents.TextChanged,this._onChangeCallback.bind(this)),s&&(this.element.style.flexGrow=s),o&&(this.element.style.flexShrink=o);const r=this.element.createChild("div","toolbar-input-clear-button");r.appendChild(Icon.create("mediumicon-gray-cross-hover","search-cancel-button")),r.addEventListener("click",()=>{this.setValue("",!0),this._prompt.focus()}),this._updateEmptyStyles()}_applyEnabledState(t){this._prompt.setEnabled(t)}setValue(t,e){this._prompt.setText(t),e&&this._onChangeCallback(),this._updateEmptyStyles()}value(){return this._prompt.textWithCurrentSuggestion()}_onKeydownCallback(t){isEscKey(t)&&this._prompt.text()&&(this.setValue("",!0),t.consume(!0))}_onChangeCallback(){this._updateEmptyStyles(),this.dispatchEventToListeners(ToolbarInput.Event.TextChanged,this._prompt.text())}_updateEmptyStyles(){this.element.classList.toggle("toolbar-input-empty",!this._prompt.text())}}ToolbarInput.Event={TextChanged:Symbol("TextChanged")};export class ToolbarToggle extends ToolbarButton{constructor(t,e,s){super(t,e,""),this._toggled=!1,this._untoggledGlyph=e,this._toggledGlyph=s,this.element.classList.add("toolbar-state-off"),ARIAUtils.setPressed(this.element,!1)}toggled(){return this._toggled}setToggled(t){this._toggled!==t&&(this._toggled=t,this.element.classList.toggle("toolbar-state-on",t),this.element.classList.toggle("toolbar-state-off",!t),ARIAUtils.setPressed(this.element,t),this._toggledGlyph&&this._untoggledGlyph&&this.setGlyph(t?this._toggledGlyph:this._untoggledGlyph))}setDefaultWithRedColor(t){this.element.classList.toggle("toolbar-default-with-red-color",t)}setToggleWithRedColor(t){this.element.classList.toggle("toolbar-toggle-with-red-color",t)}}export class ToolbarMenuButton extends ToolbarButton{constructor(t,e){super("","largeicon-menu"),this._contextMenuHandler=t,this._useSoftMenu=!!e,ARIAUtils.markAsMenuButton(this.element)}_mouseDown(t){1===t.buttons?this._triggerTimeout||(this._triggerTimeout=setTimeout(this._trigger.bind(this,t),200)):super._mouseDown(t)}_trigger(t){if(delete this._triggerTimeout,this._lastTriggerTime&&Date.now()-this._lastTriggerTime<300)return;const e=new ContextMenu(t,this._useSoftMenu,this.element.totalOffsetLeft(),this.element.totalOffsetTop()+this.element.offsetHeight);this._contextMenuHandler(e),e.show(),this._lastTriggerTime=Date.now()}_clicked(t){this._triggerTimeout&&clearTimeout(this._triggerTimeout),this._trigger(t)}}export class ToolbarSettingToggle extends ToolbarToggle{constructor(t,e,s){super(s,e),this._defaultTitle=s,this._setting=t,this._settingChanged(),this._setting.addChangeListener(this._settingChanged,this)}_settingChanged(){const t=this._setting.get();this.setToggled(t),this.setTitle(this._defaultTitle)}_clicked(t){this._setting.set(!this.toggled()),super._clicked(t)}}export class ToolbarSeparator extends ToolbarItem{constructor(t){const e=document.createElement("div");e.classList.add(t?"toolbar-spacer":"toolbar-divider"),super(e)}}export class Provider{item(){}}export class ItemsProvider{toolbarItems(){}}export class ToolbarComboBox extends ToolbarItem{constructor(t,e,s){const o=document.createElement("span");o.classList.add("toolbar-select-container"),super(o),this._selectElement=this.element.createChild("select","toolbar-item");const n=Icon.create("smallicon-triangle-down","toolbar-dropdown-arrow");this.element.appendChild(n),t&&this._selectElement.addEventListener("change",t,!1),ARIAUtils.setAccessibleName(this._selectElement,e),super.setTitle(e),s&&this._selectElement.classList.add(s)}selectElement(){return this._selectElement}size(){return this._selectElement.childElementCount}options(){return Array.prototype.slice.call(this._selectElement.children,0)}addOption(t){this._selectElement.appendChild(t)}createOption(t,e){const s=this._selectElement.createChild("option");return s.text=t,void 0!==e&&(s.value=e),s}_applyEnabledState(t){super._applyEnabledState(t),this._selectElement.disabled=!t}removeOption(t){this._selectElement.removeChild(t)}removeOptions(){this._selectElement.removeChildren()}selectedOption(){return this._selectElement.selectedIndex>=0?this._selectElement[this._selectElement.selectedIndex]:null}select(t){this._selectElement.selectedIndex=Array.prototype.indexOf.call(this._selectElement,t)}setSelectedIndex(t){this._selectElement.selectedIndex=t}selectedIndex(){return this._selectElement.selectedIndex}setMaxWidth(t){this._selectElement.style.maxWidth=t+"px"}setMinWidth(t){this._selectElement.style.minWidth=t+"px"}}export class ToolbarSettingComboBox extends ToolbarComboBox{constructor(t,e,s){super(null,s),this._options=t,this._setting=e,this._selectElement.addEventListener("change",this._valueChanged.bind(this),!1),this.setOptions(t),e.addChangeListener(this._settingChanged,this)}setOptions(t){this._options=t,this._selectElement.removeChildren();for(let e=0;e<t.length;++e){const s=t[e],o=this.createOption(s.label,s.value);this._selectElement.appendChild(o),this._setting.get()===s.value&&this.setSelectedIndex(e)}}value(){return this._options[this.selectedIndex()].value}_settingChanged(){if(this._muteSettingListener)return;const t=this._setting.get();for(let e=0;e<this._options.length;++e)if(t===this._options[e].value){this.setSelectedIndex(e);break}}_valueChanged(t){const e=this._options[this.selectedIndex()];this._muteSettingListener=!0,this._setting.set(e.value),this._muteSettingListener=!1}}export class ToolbarCheckbox extends ToolbarItem{constructor(t,e,s){super(CheckboxLabel.create(t)),this.element.classList.add("checkbox"),this.inputElement=this.element.checkboxElement,e&&(Tooltip.install(this.inputElement,e,void 0,{anchorTooltipAtElement:!0}),Tooltip.install(this.element.textElement,e,void 0,{anchorTooltipAtElement:!0})),s&&this.inputElement.addEventListener("click",s,!1)}checked(){return this.inputElement.checked}setChecked(t){this.inputElement.checked=t}_applyEnabledState(t){super._applyEnabledState(t),this.inputElement.disabled=!t}}export class ToolbarSettingCheckbox extends ToolbarCheckbox{constructor(t,e,s){super(s||t.title()||"",e),bindCheckbox(this.inputElement,t)}}