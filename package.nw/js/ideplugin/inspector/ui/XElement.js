export class XElement extends HTMLElement{static get observedAttributes(){return["flex","padding","padding-top","padding-bottom","padding-left","padding-right","margin","margin-top","margin-bottom","margin-left","margin-right","overflow","overflow-x","overflow-y","font-size","color","background","background-color","border","border-top","border-bottom","border-left","border-right","max-width","max-height"]}attributeChangedCallback(t,e,s){if("flex"!==t)if(null===s){if(this.style.removeProperty(t),t.startsWith("padding-")||t.startsWith("margin-")||t.startsWith("border-")||t.startsWith("background-")||t.startsWith("overflow-")){const e=t.substring(0,t.indexOf("-")),s=this.getAttribute(e);null!==s&&this.style.setProperty(e,s)}}else this.style.setProperty(t,s);else null===s?this.style.removeProperty("flex"):"initial"===s||"auto"===s||"none"===s||-1!==s.indexOf(" ")?this.style.setProperty("flex",s):this.style.setProperty("flex","0 0 "+s)}}class _XBox extends XElement{constructor(t){super(),this.style.setProperty("display","flex"),this.style.setProperty("flex-direction",t),this.style.setProperty("justify-content","flex-start")}static get observedAttributes(){return super.observedAttributes.concat(["x-start","x-center","x-stretch","x-baseline","justify-content"])}attributeChangedCallback(t,e,s){"x-start"!==t&&"x-center"!==t&&"x-stretch"!==t&&"x-baseline"!==t?super.attributeChangedCallback(t,e,s):null===s?this.style.removeProperty("align-items"):this.style.setProperty("align-items","x-start"===t?"flex-start":t.substr(2))}}class XVBox extends _XBox{constructor(){super("column")}}class XHBox extends _XBox{constructor(){super("row")}}class XCBox extends XElement{constructor(){super(),this.style.setProperty("display","flex"),this.style.setProperty("flex-direction","column"),this.style.setProperty("justify-content","center"),this.style.setProperty("align-items","center")}}class XDiv extends XElement{constructor(){super(),this.style.setProperty("display","block")}}class XSpan extends XElement{constructor(){super(),this.style.setProperty("display","inline")}}class XText extends XElement{constructor(){super(),this.style.setProperty("display","inline"),this.style.setProperty("white-space","pre")}}self.customElements.define("x-vbox",XVBox),self.customElements.define("x-hbox",XHBox),self.customElements.define("x-cbox",XCBox),self.customElements.define("x-div",XDiv),self.customElements.define("x-span",XSpan),self.customElements.define("x-text",XText);