import*as Host from"../host/host.js";import{DefaultShortcutSetting}from"./ShortcutRegistry.js";export class KeyboardShortcut{constructor(e,t,o,r){this.descriptors=e,this.action=t,this.type=o,this.keybindSets=r}title(){return this.descriptors.map(e=>e.name).join(" ")}isDefault(){return this.type===Type.DefaultShortcut||this.type===Type.KeybindSetShortcut&&this.keybindSets.has(DefaultShortcutSetting)}static makeKey(e,t){return"string"==typeof e&&(e=e.charCodeAt(0)-(/^[a-z]/.test(e)?32:0)),t=t||Modifiers.None,KeyboardShortcut._makeKeyFromCodeAndModifiers(e,t)}static makeKeyFromEvent(e){let t=Modifiers.None;e.shiftKey&&(t|=Modifiers.Shift),e.ctrlKey&&(t|=Modifiers.Ctrl),e.altKey&&(t|=Modifiers.Alt),e.metaKey&&(t|=Modifiers.Meta);const o=e.keyCode||e.__keyCode;return KeyboardShortcut._makeKeyFromCodeAndModifiers(o,t)}static makeKeyFromEventIgnoringModifiers(e){const t=e.keyCode||e.__keyCode;return KeyboardShortcut._makeKeyFromCodeAndModifiers(t,Modifiers.None)}static eventHasCtrlOrMeta(e){return Host.Platform.isMac()?e.metaKey&&!e.ctrlKey:e.ctrlKey&&!e.metaKey}static hasNoModifiers(e){return!(e.ctrlKey||e.shiftKey||e.altKey||e.metaKey)}static makeDescriptor(e,t){return{key:KeyboardShortcut.makeKey("string"==typeof e?e:e.code,t),name:KeyboardShortcut.shortcutToString(e,t)}}static makeDescriptorFromBindingShortcut(e){const t=e.split(/\+(?!$)/);let o,r=0;for(let a=0;a<t.length;++a){if(void 0===Modifiers[t[a]]){console.assert(a===t.length-1,"Only one key other than modifier is allowed in shortcut <"+e+">"),o=t[a];break}r|=Modifiers[t[a]]}if(console.assert(o,"Modifiers-only shortcuts are not allowed (encountered <"+e+">)"),!o)return null;const a=Keys[o]||KeyBindings[o];return a&&a.shiftKey&&(r|=Modifiers.Shift),KeyboardShortcut.makeDescriptor(a||o,r)}static shortcutToString(e,t){return KeyboardShortcut._modifiersToString(t)+KeyboardShortcut._keyName(e)}static _keyName(e){return"string"==typeof e?e.toUpperCase():"string"==typeof e.name?e.name:e.name[Host.Platform.platform()]||e.name.other||""}static _makeKeyFromCodeAndModifiers(e,t){return 255&e|t<<8}static keyCodeAndModifiersFromKey(e){return{keyCode:255&e,modifiers:e>>8}}static isModifier(e){return e===Keys.Shift.code||e===Keys.Ctrl.code||e===Keys.Alt.code||e===Keys.Meta.code}static _modifiersToString(e){const t=Host.Platform.isMac(),o=Modifiers,r=new Map([[o.Ctrl,t?"Ctrl ":"Ctrl + "],[o.Alt,t?"⌥ ":"Alt + "],[o.Shift,t?"⇧ ":"Shift + "],[o.Meta,t?"⌘ ":"Win + "]]);return[o.Meta,o.Ctrl,o.Alt,o.Shift].map((function(t){return e&t?r.get(t):""})).join("")}}export const Modifiers={None:0,Shift:1,Ctrl:2,Alt:4,Meta:8,get CtrlOrMeta(){return Host.Platform.isMac()?this.Meta:this.Ctrl},get ShiftOrOption(){return Host.Platform.isMac()?this.Alt:this.Shift}};export const Keys={Backspace:{code:8,name:"↤"},Tab:{code:9,name:{mac:"⇥",other:"Tab"}},Enter:{code:13,name:{mac:"↩",other:"Enter"}},Shift:{code:16,name:{mac:"⇧",other:"Shift"}},Ctrl:{code:17,name:"Ctrl"},Alt:{code:18,name:"Alt"},Esc:{code:27,name:"Esc"},Space:{code:32,name:"Space"},PageUp:{code:33,name:{mac:"⇞",other:"PageUp"}},PageDown:{code:34,name:{mac:"⇟",other:"PageDown"}},End:{code:35,name:{mac:"↗",other:"End"}},Home:{code:36,name:{mac:"↖",other:"Home"}},Left:{code:37,name:"←"},Up:{code:38,name:"↑"},Right:{code:39,name:"→"},Down:{code:40,name:"↓"},Delete:{code:46,name:"Del"},Zero:{code:48,name:"0"},H:{code:72,name:"H"},N:{code:78,name:"N"},P:{code:80,name:"P"},Meta:{code:91,name:"Meta"},F1:{code:112,name:"F1"},F2:{code:113,name:"F2"},F3:{code:114,name:"F3"},F4:{code:115,name:"F4"},F5:{code:116,name:"F5"},F6:{code:117,name:"F6"},F7:{code:118,name:"F7"},F8:{code:119,name:"F8"},F9:{code:120,name:"F9"},F10:{code:121,name:"F10"},F11:{code:122,name:"F11"},F12:{code:123,name:"F12"},Semicolon:{code:186,name:";"},NumpadPlus:{code:107,name:"Numpad +"},NumpadMinus:{code:109,name:"Numpad -"},Numpad0:{code:96,name:"Numpad 0"},Plus:{code:187,name:"+"},Comma:{code:188,name:","},Minus:{code:189,name:"-"},Period:{code:190,name:"."},Slash:{code:191,name:"/"},QuestionMark:{code:191,name:"?"},Apostrophe:{code:192,name:"`"},Tilde:{code:192,name:"Tilde"},LeftSquareBracket:{code:219,name:"["},RightSquareBracket:{code:221,name:"]"},Backslash:{code:220,name:"\\"},SingleQuote:{code:222,name:"'"},get CtrlOrMeta(){return Host.Platform.isMac()?this.Meta:this.Ctrl}};export const Type={UserShortcut:Symbol("UserShortcut"),DefaultShortcut:Symbol("DefaultShortcut"),DisabledDefault:Symbol("DisabledDefault"),UnsetShortcut:Symbol("UnsetShortcut"),KeybindSetShortcut:Symbol("KeybindSetShortcut")};export const KeyBindings={};!function(){for(const e in Keys){const t=Keys[e];if("object"==typeof t&&t.code){const o="string"==typeof t.name?t.name:e;KeyBindings[o]=t}}}();export let Key;export let Descriptor;