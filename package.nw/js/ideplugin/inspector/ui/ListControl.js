import*as Common from"../common/common.js";import*as Platform from"../platform/platform.js";import*as ARIAUtils from"./ARIAUtils.js";import{Events as ListModelEvents,ListModel}from"./ListModel.js";import{measurePreferredSize}from"./UIUtils.js";export class ListDelegate{createElementForItem(e){}heightForItem(e){}isItemSelectable(e){}selectedItemChanged(e,t,i,s){}updateSelectedItemARIA(e,t){}}export const ListMode={NonViewport:Symbol("UI.ListMode.NonViewport"),EqualHeightItems:Symbol("UI.ListMode.EqualHeightItems"),VariousHeightItems:Symbol("UI.ListMode.VariousHeightItems")};export class ListControl{constructor(e,t,i){this.element=createElement("div"),this.element.style.overflowY="auto",this._topElement=this.element.createChild("div"),this._bottomElement=this.element.createChild("div"),this._firstIndex=0,this._lastIndex=0,this._renderedHeight=0,this._topHeight=0,this._bottomHeight=0,this._model=e,this._model.addEventListener(ListModelEvents.ItemsReplaced,this._replacedItemsInRange,this),this._itemToElement=new Map,this._selectedIndex=-1,this._selectedItem=null,this.element.tabIndex=-1,this.element.addEventListener("click",this._onClick.bind(this),!1),this.element.addEventListener("keydown",this._onKeyDown.bind(this),!1),ARIAUtils.markAsListBox(this.element),this._delegate=t,this._mode=i||ListMode.EqualHeightItems,this._fixedHeight=0,this._variableOffsets=new Int32Array(0),this._clearContents(),this._mode!==ListMode.NonViewport&&this.element.addEventListener("scroll",()=>{this._updateViewport(this.element.scrollTop,this.element.offsetHeight)},!1)}setModel(e){this._itemToElement.clear();const t=this._model.length;this._model.removeEventListener(ListModelEvents.ItemsReplaced,this._replacedItemsInRange,this),this._model=e,this._model.addEventListener(ListModelEvents.ItemsReplaced,this._replacedItemsInRange,this),this.invalidateRange(0,t)}_replacedItemsInRange(e){const t=e.data,i=t.index,s=i+t.removed.length,l=this._selectedItem,h=l&&this._itemToElement.get(l)||null;for(let e=0;e<t.removed.length;e++)this._itemToElement.delete(t.removed[e]);if(this._invalidate(i,s,t.inserted),this._selectedIndex>=s)this._selectedIndex+=t.inserted-(s-i),this._selectedItem=this._model.at(this._selectedIndex);else if(this._selectedIndex>=i){let e=this._findFirstSelectable(i+t.inserted,1,!1);-1===e&&(e=this._findFirstSelectable(i-1,-1,!1)),this._select(e,l,h)}}refreshItem(e){const t=this._model.indexOf(e);-1!==t?this.refreshItemByIndex(t):console.error("Item to refresh is not present")}refreshItemByIndex(e){const t=this._model.at(e);this._itemToElement.delete(t),this.invalidateRange(e,e+1),-1!==this._selectedIndex&&this._select(this._selectedIndex,null,null)}refreshAllItems(){this._itemToElement.clear(),this.invalidateRange(0,this._model.length),-1!==this._selectedIndex&&this._select(this._selectedIndex,null,null)}invalidateRange(e,t){this._invalidate(e,t,t-e)}viewportResized(){if(this._mode===ListMode.NonViewport)return;const e=this.element.scrollTop,t=this.element.offsetHeight;this._clearViewport(),this._updateViewport(Platform.NumberUtilities.clamp(e,0,this._totalHeight()-t),t)}invalidateItemHeight(){this._mode===ListMode.EqualHeightItems?(this._fixedHeight=0,this._model.length&&(this._itemToElement.clear(),this._invalidate(0,this._model.length,this._model.length))):console.error("Only supported in equal height items mode")}itemForNode(e){for(;e&&e.parentNodeOrShadowHost()!==this.element;)e=e.parentNodeOrShadowHost();if(!e)return null;const t=e,i=this._model.findIndex(e=>this._itemToElement.get(e)===t);return-1!==i?this._model.at(i):null}scrollItemIntoView(e,t){const i=this._model.indexOf(e);-1!==i?this._scrollIntoView(i,t):console.error("Attempt to scroll onto missing item")}selectedItem(){return this._selectedItem}selectedIndex(){return this._selectedIndex}selectItem(e,t,i){let s=-1;if(null!==e){if(s=this._model.indexOf(e),-1===s)return void console.error("Attempt to select missing item");if(!this._delegate.isItemSelectable(e))return void console.error("Attempt to select non-selectable item")}-1===s||i||this._scrollIntoView(s,t),this._selectedIndex!==s&&this._select(s)}selectPreviousItem(e,t){if(-1===this._selectedIndex&&!e)return!1;let i=-1===this._selectedIndex?this._model.length-1:this._selectedIndex-1;return i=this._findFirstSelectable(i,-1,!!e),-1!==i&&(this._scrollIntoView(i,t),this._select(i),!0)}selectNextItem(e,t){if(-1===this._selectedIndex&&!e)return!1;let i=-1===this._selectedIndex?0:this._selectedIndex+1;return i=this._findFirstSelectable(i,1,!!e),-1!==i&&(this._scrollIntoView(i,t),this._select(i),!0)}selectItemPreviousPage(e){if(this._mode===ListMode.NonViewport)return!1;let t=-1===this._selectedIndex?this._model.length-1:this._selectedIndex;return t=this._findPageSelectable(t,-1),-1!==t&&(this._scrollIntoView(t,e),this._select(t),!0)}selectItemNextPage(e){if(this._mode===ListMode.NonViewport)return!1;let t=-1===this._selectedIndex?0:this._selectedIndex;return t=this._findPageSelectable(t,1),-1!==t&&(this._scrollIntoView(t,e),this._select(t),!0)}_scrollIntoView(e,t){if(this._mode===ListMode.NonViewport)return void this._elementAtIndex(e).scrollIntoViewIfNeeded(!!t);const i=this._offsetAtIndex(e),s=this._offsetAtIndex(e+1),l=this.element.offsetHeight;if(t){const e=(i+s)/2-l/2;return void this._updateViewport(Platform.NumberUtilities.clamp(e,0,this._totalHeight()-l),l)}const h=this.element.scrollTop;i<h?this._updateViewport(i,l):s>h+l&&this._updateViewport(s-l,l)}_onClick(e){const t=this.itemForNode(e.target);t&&this._delegate.isItemSelectable(t)&&this.selectItem(t)}_onKeyDown(e){let t=!1;switch(e.key){case"ArrowUp":t=this.selectPreviousItem(!0,!1);break;case"ArrowDown":t=this.selectNextItem(!0,!1);break;case"PageUp":t=this.selectItemPreviousPage(!1);break;case"PageDown":t=this.selectItemNextPage(!1)}t&&e.consume(!0)}_totalHeight(){return this._offsetAtIndex(this._model.length)}_indexAtOffset(e){if(this._mode===ListMode.NonViewport)throw"There should be no offset conversions in non-viewport mode";return!this._model.length||e<0?0:this._mode===ListMode.VariousHeightItems?Math.min(this._model.length-1,this._variableOffsets.lowerBound(e,void 0,0,this._model.length)):(this._fixedHeight||this._measureHeight(),Math.min(this._model.length-1,Math.floor(e/this._fixedHeight)))}_elementAtIndex(e){const t=this._model.at(e);let i=this._itemToElement.get(t);return i||(i=this._delegate.createElementForItem(t),this._itemToElement.set(t,i),this._updateElementARIA(i,e)),i}_refreshARIA(){for(let e=this._firstIndex;e<=this._lastIndex;e++){const t=this._model.at(e);this._itemToElement.has(t)&&this._updateElementARIA(this._itemToElement.get(t),e)}}_updateElementARIA(e,t){ARIAUtils.hasRole(e)||ARIAUtils.markAsOption(e),ARIAUtils.setSetSize(e,this._model.length),ARIAUtils.setPositionInSet(e,t+1)}_offsetAtIndex(e){if(this._mode===ListMode.NonViewport)throw new Error("There should be no offset conversions in non-viewport mode");return this._model.length?this._mode===ListMode.VariousHeightItems?this._variableOffsets[e]:(this._fixedHeight||this._measureHeight(),e*this._fixedHeight):0}_measureHeight(){this._fixedHeight=this._delegate.heightForItem(this._model.at(0)),this._fixedHeight||(this._fixedHeight=measurePreferredSize(this._elementAtIndex(0),this.element).height)}_select(e,t,i){void 0===t&&(t=this._selectedItem),void 0===i&&(i=this._itemToElement.get(t)||null),this._selectedIndex=e,this._selectedItem=-1===e?null:this._model.at(e);const s=this._selectedItem,l=-1!==this._selectedIndex?this._elementAtIndex(e):null;this._delegate.selectedItemChanged(t,s,i,l),this._delegate.updateSelectedItemARIA(i,l)||(i&&ARIAUtils.setSelected(i,!1),l&&ARIAUtils.setSelected(l,!0),ARIAUtils.setActiveDescendant(this.element,l))}_findFirstSelectable(e,t,i){const s=this._model.length;if(!s)return-1;for(let l=0;l<=s;l++){if(e<0||e>=s){if(!i)return-1;e=(e+s)%s}if(this._delegate.isItemSelectable(this._model.at(e)))return e;e+=t}return-1}_findPageSelectable(e,t){let i=-1;const s=this._offsetAtIndex(e),l=this.element.offsetHeight-1;for(;e>=0&&e<this._model.length;){if(this._delegate.isItemSelectable(this._model.at(e))){if(Math.abs(this._offsetAtIndex(e)-s)>=l)return e;i=e}e+=t}return i}_reallocateVariableOffsets(e,t){if(this._variableOffsets.length<e){const i=new Int32Array(Math.max(e,2*this._variableOffsets.length));i.set(this._variableOffsets.slice(0,t),0),this._variableOffsets=i}else if(this._variableOffsets.length>=2*e){const i=new Int32Array(e);i.set(this._variableOffsets.slice(0,t),0),this._variableOffsets=i}}_invalidate(e,t,i){if(this._mode===ListMode.NonViewport)return void this._invalidateNonViewportMode(e,t-e,i);if(this._mode===ListMode.VariousHeightItems){this._reallocateVariableOffsets(this._model.length+1,e+1);for(let t=e+1;t<=this._model.length;t++)this._variableOffsets[t]=this._variableOffsets[t-1]+this._delegate.heightForItem(this._model.at(t-1))}const s=this.element.offsetHeight,l=this._totalHeight(),h=this.element.scrollTop;if(this._renderedHeight<s||l<s)return this._clearViewport(),void this._updateViewport(Platform.NumberUtilities.clamp(h,0,l-s),s);const o=l-this._renderedHeight;if(t<=this._firstIndex){const s=this._topHeight+o;this._topElement.style.height=s+"px",this.element.scrollTop=h+o,this._topHeight=s,this._renderedHeight=l;const n=i-(t-e);return this._firstIndex+=n,void(this._lastIndex+=n)}if(e>=this._lastIndex){const e=this._bottomHeight+o;return this._bottomElement.style.height=e+"px",this._bottomHeight=e,void(this._renderedHeight=l)}this._clearViewport(),this._updateViewport(Platform.NumberUtilities.clamp(h,0,l-s),s),this._refreshARIA()}_invalidateNonViewportMode(e,t,i){let s=this._topElement;for(let t=0;t<e;t++)s=s.nextElementSibling;for(;t--;)s.nextElementSibling.remove();for(;i--;)this.element.insertBefore(this._elementAtIndex(e+i),s.nextElementSibling)}_clearViewport(){this._mode!==ListMode.NonViewport?(this._firstIndex=0,this._lastIndex=0,this._renderedHeight=0,this._topHeight=0,this._bottomHeight=0,this._clearContents()):console.error("There should be no viewport updates in non-viewport mode")}_clearContents(){this._topElement.style.height="0",this._bottomElement.style.height="0",this.element.removeChildren(),this.element.appendChild(this._topElement),this.element.appendChild(this._bottomElement)}_updateViewport(e,t){if(this._mode===ListMode.NonViewport)return void console.error("There should be no viewport updates in non-viewport mode");const i=this._totalHeight();if(!i)return this._firstIndex=0,this._lastIndex=0,this._topHeight=0,this._bottomHeight=0,this._renderedHeight=0,this._topElement.style.height="0",void(this._bottomElement.style.height="0");const s=this._indexAtOffset(e-t),l=this._indexAtOffset(e+2*t)+1;for(;this._firstIndex<Math.min(s,this._lastIndex);)this._elementAtIndex(this._firstIndex).remove(),this._firstIndex++;for(;this._lastIndex>Math.max(l,this._firstIndex);)this._elementAtIndex(this._lastIndex-1).remove(),this._lastIndex--;this._firstIndex=Math.min(this._firstIndex,l),this._lastIndex=Math.max(this._lastIndex,s);for(let e=this._firstIndex-1;e>=s;e--){const t=this._elementAtIndex(e);this.element.insertBefore(t,this._topElement.nextSibling)}for(let e=this._lastIndex;e<l;e++){const t=this._elementAtIndex(e);this.element.insertBefore(t,this._bottomElement)}this._firstIndex=s,this._lastIndex=l,this._topHeight=this._offsetAtIndex(s),this._topElement.style.height=this._topHeight+"px",this._bottomHeight=i-this._offsetAtIndex(l),this._bottomElement.style.height=this._bottomHeight+"px",this._renderedHeight=i,this.element.scrollTop=e}}