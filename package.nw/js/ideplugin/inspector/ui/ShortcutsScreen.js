import*as Common from"../common/common.js";import*as Host from"../host/host.js";import*as ARIAUtils from"./ARIAUtils.js";import{Descriptor,KeyboardShortcut,Keys,Modifiers}from"./KeyboardShortcut.js";import{createDocumentationLink}from"./UIUtils.js";import{Widget}from"./Widget.js";export class ShortcutsScreen{constructor(){this._sections={}}static registerShortcuts(){const e=self.UI.shortcutsScreen.section(Common.UIString.UIString("Elements Panel")),t=ElementsPanelShortcuts.NavigateUp.concat(ElementsPanelShortcuts.NavigateDown);e.addRelatedKeys(t,Common.UIString.UIString("Navigate elements"));const r=ElementsPanelShortcuts.Expand.concat(ElementsPanelShortcuts.Collapse);e.addRelatedKeys(r,Common.UIString.UIString("Expand/collapse")),e.addAlternateKeys(ElementsPanelShortcuts.EditAttribute,Common.UIString.UIString("Edit attribute")),e.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("elements.hide-element"),Common.UIString.UIString("Hide element")),e.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("elements.edit-as-html"),Common.UIString.UIString("Toggle edit as HTML"));const o=self.UI.shortcutsScreen.section(Common.UIString.UIString("Styles Pane")),n=ElementsPanelShortcuts.NextProperty.concat(ElementsPanelShortcuts.PreviousProperty);o.addRelatedKeys(n,Common.UIString.UIString("Next/previous property")),o.addRelatedKeys(ElementsPanelShortcuts.IncrementValue,Common.UIString.UIString("Increment value")),o.addRelatedKeys(ElementsPanelShortcuts.DecrementValue,Common.UIString.UIString("Decrement value")),o.addAlternateKeys(ElementsPanelShortcuts.IncrementBy10,Common.UIString.UIString("Increment by %f",10)),o.addAlternateKeys(ElementsPanelShortcuts.DecrementBy10,Common.UIString.UIString("Decrement by %f",10)),o.addAlternateKeys(ElementsPanelShortcuts.IncrementBy100,Common.UIString.UIString("Increment by %f",100)),o.addAlternateKeys(ElementsPanelShortcuts.DecrementBy100,Common.UIString.UIString("Decrement by %f",100)),o.addAlternateKeys(ElementsPanelShortcuts.IncrementBy01,Common.UIString.UIString("Increment by %f",.1)),o.addAlternateKeys(ElementsPanelShortcuts.DecrementBy01,Common.UIString.UIString("Decrement by %f",.1));const s=self.UI.shortcutsScreen.section(Common.UIString.UIString("Console"));s.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("console.clear"),Common.UIString.UIString("Clear console")),s.addRelatedKeys(ConsolePanelShortcuts.AcceptSuggestion,Common.UIString.UIString("Accept suggestion")),s.addAlternateKeys(ConsolePanelShortcuts.ClearConsolePrompt,Common.UIString.UIString("Clear console prompt")),s.addRelatedKeys(ConsolePanelShortcuts.NextPreviousLine,Common.UIString.UIString("Next/previous line")),Host.Platform.isMac()&&s.addRelatedKeys(ConsolePanelShortcuts.NextPreviousCommand,Common.UIString.UIString("Next/previous command")),s.addKey(ConsolePanelShortcuts.ExecuteCommand,Common.UIString.UIString("Execute command"));const i=self.UI.shortcutsScreen.section(Common.UIString.UIString("Debugger"));i.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.toggle-pause"),Common.UIString.UIString("Pause/ Continue")),i.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.step-over"),Common.UIString.UIString("Step over")),i.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.step-into"),Common.UIString.UIString("Step into")),i.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.step-out"),Common.UIString.UIString("Step out"));const c=self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.next-call-frame").concat(self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.previous-call-frame"));i.addRelatedKeys(c,Common.UIString.UIString("Next/previous call frame")),i.addAlternateKeys(SourcesPanelShortcuts.EvaluateSelectionInConsole,Common.UIString.UIString("Evaluate selection in console")),i.addAlternateKeys(SourcesPanelShortcuts.AddSelectionToWatch,Common.UIString.UIString("Add selection to watch")),i.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.toggle-breakpoint"),Common.UIString.UIString("Toggle breakpoint")),i.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.toggle-breakpoint-enabled"),Common.UIString.UIString("Toggle breakpoint enabled")),i.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.toggle-breakpoints-active"),Common.UIString.UIString("Toggle all breakpoints")),i.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("debugger.breakpoint-input-window"),ls`Open breakpoint editor`);const a=self.UI.shortcutsScreen.section(Common.UIString.UIString("Text Editor"));a.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("sources.go-to-member"),Common.UIString.UIString("Go to member")),a.addAlternateKeys(SourcesPanelShortcuts.ToggleAutocompletion,Common.UIString.UIString("Autocompletion")),a.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("sources.go-to-line"),Common.UIString.UIString("Go to line")),a.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("sources.jump-to-previous-location"),Common.UIString.UIString("Jump to previous editing location")),a.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("sources.jump-to-next-location"),Common.UIString.UIString("Jump to next editing location")),a.addAlternateKeys(SourcesPanelShortcuts.ToggleComment,Common.UIString.UIString("Toggle comment")),a.addAlternateKeys(SourcesPanelShortcuts.IncreaseCSSUnitByOne,Common.UIString.UIString("Increment CSS unit by 1")),a.addAlternateKeys(SourcesPanelShortcuts.DecreaseCSSUnitByOne,Common.UIString.UIString("Decrement CSS unit by 1")),a.addAlternateKeys(SourcesPanelShortcuts.IncreaseCSSUnitByTen,Common.UIString.UIString("Increment CSS unit by 10")),a.addAlternateKeys(SourcesPanelShortcuts.DecreaseCSSUnitByTen,Common.UIString.UIString("Decrement CSS unit by 10")),a.addAlternateKeys(SourcesPanelShortcuts.SelectNextOccurrence,Common.UIString.UIString("Select next occurrence")),a.addAlternateKeys(SourcesPanelShortcuts.SoftUndo,Common.UIString.UIString("Soft undo")),a.addAlternateKeys(SourcesPanelShortcuts.GotoMatchingBracket,Common.UIString.UIString("Go to matching bracket")),a.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("sources.close-editor-tab"),Common.UIString.UIString("Close editor tab")),a.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("sources.switch-file"),Common.UIString.UIString("Switch between files with the same name and different extensions."));const l=self.UI.shortcutsScreen.section(Common.UIString.UIString("Performance Panel"));l.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("timeline.toggle-recording"),Common.UIString.UIString("Start/stop recording")),l.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("timeline.record-reload"),Common.UIString.UIString("Record page reload")),l.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("timeline.save-to-file"),Common.UIString.UIString("Save profile")),l.addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("timeline.load-from-file"),Common.UIString.UIString("Load profile")),l.addRelatedKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("timeline.jump-to-previous-frame").concat(self.UI.shortcutRegistry.shortcutDescriptorsForAction("timeline.jump-to-next-frame")),Common.UIString.UIString("Jump to previous/next frame")),l.addRelatedKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("timeline.show-history"),Common.UIString.UIString("Pick a recording from history")),l.addRelatedKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("timeline.previous-recording").concat(self.UI.shortcutRegistry.shortcutDescriptorsForAction("timeline.next-recording")),Common.UIString.UIString("Show previous/next recording"));self.UI.shortcutsScreen.section(Common.UIString.UIString("Memory Panel")).addAlternateKeys(self.UI.shortcutRegistry.shortcutDescriptorsForAction("profiler.heap-toggle-recording"),Common.UIString.UIString("Start/stop recording"));const d=self.UI.shortcutsScreen.section(Common.UIString.UIString("Layers Panel"));d.addAlternateKeys(LayersPanelShortcuts.ResetView,Common.UIString.UIString("Reset view")),d.addAlternateKeys(LayersPanelShortcuts.PanMode,Common.UIString.UIString("Switch to pan mode")),d.addAlternateKeys(LayersPanelShortcuts.RotateMode,Common.UIString.UIString("Switch to rotate mode")),d.addAlternateKeys(LayersPanelShortcuts.TogglePanRotate,Common.UIString.UIString("Temporarily toggle pan/rotate mode while held")),d.addAlternateKeys(LayersPanelShortcuts.ZoomIn,Common.UIString.UIString("Zoom in")),d.addAlternateKeys(LayersPanelShortcuts.ZoomOut,Common.UIString.UIString("Zoom out")),d.addRelatedKeys(LayersPanelShortcuts.Up.concat(LayersPanelShortcuts.Down),Common.UIString.UIString("Pan or rotate up/down")),d.addRelatedKeys(LayersPanelShortcuts.Left.concat(LayersPanelShortcuts.Right),Common.UIString.UIString("Pan or rotate left/right"))}section(e){let t=this._sections[e];return t||(this._sections[e]=t=new ShortcutsSection(e)),t}createShortcutsTabView(){const e=[];for(const t in this._sections)e.push(this._sections[t]);e.sort((function(e,t){return e.order-t.order}));const t=new Widget;t.element.className="settings-tab-container",t.element.createChild("header").createChild("h1").createTextChild(ls`Shortcuts`);const r=t.element.createChild("div","settings-container-wrapper"),o=r.createChild("div");o.className="settings-content settings-container";for(let t=0;t<e.length;++t)e[t].renderSection(o);return r.createChild("p","settings-footnote").appendChild(createDocumentationLink("iterate/inspect-styles/shortcuts",Common.UIString.UIString("Full list of DevTools keyboard shortcuts and gestures"))),t}}class ShortcutsSection{constructor(e){this.name=e,this._lines=[],this.order=++ShortcutsSection._sequenceNumber}addKey(e,t){this._addLine(this._renderKey(e),t)}addRelatedKeys(e,t){this._addLine(this._renderSequence(e,"/"),t)}addAlternateKeys(e,t){this._addLine(this._renderSequence(e,Common.UIString.UIString("or")),t)}_addLine(e,t){this._lines.push({key:e,text:t})}renderSection(e){const t=e.createChild("div","settings-block"),r=t.createChild("div","settings-line");r.createChild("div","settings-key-cell"),r.createChild("div","settings-section-title settings-cell").textContent=this.name,ARIAUtils.markAsHeading(r,2);for(let e=0;e<this._lines.length;++e){const r=t.createChild("div","settings-line"),o=r.createChild("div","settings-key-cell");o.appendChild(this._lines[e].key),o.appendChild(this._createSpan("settings-key-delimiter",":")),r.createChild("div","settings-cell").textContent=this._lines[e].text}}_renderSequence(e,t){const r=this._createSpan("settings-key-delimiter",t);return this._joinNodes(e.map(this._renderKey.bind(this)),r)}_renderKey(e){const t=e.name,r=this._createSpan("settings-combine-keys","+");return this._joinNodes(t.split(" + ").map(this._createSpan.bind(this,"settings-key")),r)}_createSpan(e,t){const r=createElement("span");return r.className=e,r.textContent=t,r}_joinNodes(e,t){const r=createDocumentFragment();for(let o=0;o<e.length;++o)o>0&&r.appendChild(t.cloneNode(!0)),r.appendChild(e[o]);return r}}ShortcutsSection._sequenceNumber=0;const ElementsPanelShortcuts={NavigateUp:[KeyboardShortcut.makeDescriptor(Keys.Up)],NavigateDown:[KeyboardShortcut.makeDescriptor(Keys.Down)],Expand:[KeyboardShortcut.makeDescriptor(Keys.Right)],Collapse:[KeyboardShortcut.makeDescriptor(Keys.Left)],EditAttribute:[KeyboardShortcut.makeDescriptor(Keys.Enter)],NextProperty:[KeyboardShortcut.makeDescriptor(Keys.Tab)],PreviousProperty:[KeyboardShortcut.makeDescriptor(Keys.Tab,Modifiers.Shift)],IncrementValue:[KeyboardShortcut.makeDescriptor(Keys.Up)],DecrementValue:[KeyboardShortcut.makeDescriptor(Keys.Down)],IncrementBy10:[KeyboardShortcut.makeDescriptor(Keys.PageUp),KeyboardShortcut.makeDescriptor(Keys.Up,Modifiers.Shift)],DecrementBy10:[KeyboardShortcut.makeDescriptor(Keys.PageDown),KeyboardShortcut.makeDescriptor(Keys.Down,Modifiers.Shift)],IncrementBy100:[KeyboardShortcut.makeDescriptor(Keys.PageUp,Modifiers.Shift)],DecrementBy100:[KeyboardShortcut.makeDescriptor(Keys.PageDown,Modifiers.Shift)],IncrementBy01:[KeyboardShortcut.makeDescriptor(Keys.Up,Modifiers.Alt)],DecrementBy01:[KeyboardShortcut.makeDescriptor(Keys.Down,Modifiers.Alt)]},ConsolePanelShortcuts={AcceptSuggestion:[KeyboardShortcut.makeDescriptor(Keys.Tab),KeyboardShortcut.makeDescriptor(Keys.Right)],ClearConsolePrompt:[KeyboardShortcut.makeDescriptor("u",Modifiers.Ctrl)],ExecuteCommand:KeyboardShortcut.makeDescriptor(Keys.Enter),NextPreviousLine:[KeyboardShortcut.makeDescriptor(Keys.Down),KeyboardShortcut.makeDescriptor(Keys.Up)],NextPreviousCommand:[KeyboardShortcut.makeDescriptor("N",Modifiers.Alt),KeyboardShortcut.makeDescriptor("P",Modifiers.Alt)]};export const SourcesPanelShortcuts={SelectNextOccurrence:[KeyboardShortcut.makeDescriptor("d",Modifiers.CtrlOrMeta)],SoftUndo:[KeyboardShortcut.makeDescriptor("u",Modifiers.CtrlOrMeta)],GotoMatchingBracket:[KeyboardShortcut.makeDescriptor("m",Modifiers.Ctrl)],ToggleAutocompletion:[KeyboardShortcut.makeDescriptor(Keys.Space,Modifiers.Ctrl)],IncreaseCSSUnitByOne:[KeyboardShortcut.makeDescriptor(Keys.Up,Modifiers.Alt)],DecreaseCSSUnitByOne:[KeyboardShortcut.makeDescriptor(Keys.Down,Modifiers.Alt)],IncreaseCSSUnitByTen:[KeyboardShortcut.makeDescriptor(Keys.PageUp,Modifiers.Alt)],DecreaseCSSUnitByTen:[KeyboardShortcut.makeDescriptor(Keys.PageDown,Modifiers.Alt)],EvaluateSelectionInConsole:[KeyboardShortcut.makeDescriptor("e",Modifiers.Shift|Modifiers.Ctrl)],AddSelectionToWatch:[KeyboardShortcut.makeDescriptor("a",Modifiers.Shift|Modifiers.Ctrl)],ToggleComment:[KeyboardShortcut.makeDescriptor(Keys.Slash,Modifiers.CtrlOrMeta)]};export const LayersPanelShortcuts={ResetView:[KeyboardShortcut.makeDescriptor("0")],PanMode:[KeyboardShortcut.makeDescriptor("x")],RotateMode:[KeyboardShortcut.makeDescriptor("v")],TogglePanRotate:[KeyboardShortcut.makeDescriptor(Keys.Shift)],ZoomIn:[KeyboardShortcut.makeDescriptor(Keys.Plus,Modifiers.Shift),KeyboardShortcut.makeDescriptor(Keys.NumpadPlus)],ZoomOut:[KeyboardShortcut.makeDescriptor(Keys.Minus,Modifiers.Shift),KeyboardShortcut.makeDescriptor(Keys.NumpadMinus)],Up:[KeyboardShortcut.makeDescriptor(Keys.Up),KeyboardShortcut.makeDescriptor("w")],Down:[KeyboardShortcut.makeDescriptor(Keys.Down),KeyboardShortcut.makeDescriptor("s")],Left:[KeyboardShortcut.makeDescriptor(Keys.Left),KeyboardShortcut.makeDescriptor("a")],Right:[KeyboardShortcut.makeDescriptor(Keys.Right),KeyboardShortcut.makeDescriptor("d")]};