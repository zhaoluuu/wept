import*as Root from"../root/root.js";import*as TextUtils from"../text_utils/text_utils.js";export class SyntaxHighlighter{constructor(t,e){this._mimeType=t,this._stripExtraWhitespace=e}createSpan(t,e){const i=document.createElement("span");return i.className=e.replace(/\S+/g,"cm-$&"),this._stripExtraWhitespace&&"whitespace"!==e&&(t=t.replace(/^[\n\r]*/,"").replace(/\s*$/,"")),i.createTextChild(t),i}syntaxHighlightNode(t){const e=t.textContent?t.textContent.split("\n"):[];let i,s;const n=self.runtime.extension(TextUtils.TextUtils.TokenizerFactory);return n?n.instance().then(t=>r.call(this,t)):Promise.resolve();function r(n){t.removeChildren();const r=n.createTokenizer(this._mimeType);for(let n=0;n<e.length;++n){if(s=e[n],i=0,r(s,o.bind(this)),i<s.length){const e=s.substring(i,s.length);t.createTextChild(e)}n<e.length-1&&t.createTextChild("\n")}}function o(e,n,r,o){if(n){if(r>i){const e=s.substring(i,r);t.createTextChild(e)}t.appendChild(this.createSpan(e,n)),i=o}}}}