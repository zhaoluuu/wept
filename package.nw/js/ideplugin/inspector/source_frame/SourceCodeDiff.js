import*as Diff from"../diff/diff.js";import*as TextEditor from"../text_editor/text_editor.js";export class SourceCodeDiff{constructor(t){this._textEditor=t,this._animatedLines=[],this._animationTimeout=null}highlightModifiedLines(t,i){if("string"!=typeof t||"string"!=typeof i)return;const e=SourceCodeDiff.computeDiff(Diff.Diff.DiffWrapper.lineDiff(t.split("\n"),i.split("\n"))),o=[];for(let t=0;t<e.length;++t){const i=e[t];if(i.type!==EditType.Delete)for(let t=i.from;t<i.to;++t){const i=this._textEditor.textEditorPositionHandle(t,0);i&&o.push(i)}}this._updateHighlightedLines(o),this._animationTimeout=setTimeout(this._updateHighlightedLines.bind(this,[]),400)}_updateHighlightedLines(t){function i(t){for(let i=0;i<this._animatedLines.length;++i){const e=this._animatedLines[i].resolve();e&&this._textEditor.toggleLineClass(e.lineNumber,"highlight-line-modification",t)}}this._animationTimeout&&clearTimeout(this._animationTimeout),this._animationTimeout=null,this._textEditor.operation(function(){i.call(this,!1),this._animatedLines=t,i.call(this,!0)}.bind(this))}static computeDiff(t){const i=[];let e=!1,o=!1,n=0,s=0,f=!1;for(let i=0;i<t.length;++i){const r=t[i];r[0]!==Diff.Diff.Operation.Equal?(f||(f=!0,n=s),r[0]===Diff.Diff.Operation.Delete?o=!0:(s+=r[1].length,e=!0)):(f&&l(),s+=r[1].length)}if(f&&l(),i.length>1&&0===i[0].from&&0===i[1].from){const t={type:EditType.Modify,from:0,to:i[1].to};i.splice(0,2,t)}return i;function l(){let t=EditType.Insert,l=n,r=s;e&&o?t=EditType.Modify:!e&&o&&0===l&&0===r?(t=EditType.Modify,r=1):!e&&o&&(t=EditType.Delete,l-=1),i.push({type:t,from:l,to:r}),f=!1,e=!1,o=!1}}}export const EditType={Insert:Symbol("Insert"),Delete:Symbol("Delete"),Modify:Symbol("Modify")};