import*as Common from"../common/common.js";import*as Components from"../components/components.js";import*as Host from"../host/host.js";import*as MobileThrottling from"../mobile_throttling/mobile_throttling.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";export class InspectorMainImpl extends Common.ObjectWrapper.ObjectWrapper{async run(){let e=!0;await SDK.Connections.initMainConnection(async()=>{const t=Root.Runtime.queryParam("v8only")?SDK.SDKModel.Type.Node:SDK.SDKModel.Type.Frame,n=t===SDK.SDKModel.Type.Frame&&"sources"===Root.Runtime.queryParam("panel"),o=SDK.SDKModel.TargetManager.instance().createTarget("main",Common.UIString.UIString("Main"),t,null,void 0,n);if(e){if(e=!1,n){const e=o.model(SDK.DebuggerModel.DebuggerModel);e.isReadyToPause()||await e.once(SDK.DebuggerModel.Events.DebuggerIsReadyToPause),e.pause()}o.runtimeAgent().runIfWaitingForDebugger()}},Components.TargetDetachedDialog.TargetDetachedDialog.webSocketConnectionLost),new SourcesPanelIndicator,new BackendSettingsSync,new MobileThrottling.NetworkPanelIndicator.NetworkPanelIndicator,Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(Host.InspectorFrontendHostAPI.Events.ReloadInspectedPage,e=>{const t=e.data;SDK.ResourceTreeModel.ResourceTreeModel.reloadAllPages(t)})}}export class ReloadActionDelegate{handleAction(e,t){switch(t){case"inspector_main.reload":return SDK.ResourceTreeModel.ResourceTreeModel.reloadAllPages(!1),!0;case"inspector_main.hard-reload":return SDK.ResourceTreeModel.ResourceTreeModel.reloadAllPages(!0),!0}return!1}}export class FocusDebuggeeActionDelegate{handleAction(e,t){return SDK.SDKModel.TargetManager.instance().mainTarget().pageAgent().bringToFront(),!0}}export class NodeIndicator{constructor(){const e=createElement("div"),t=UI.Utils.createShadowRootWithCoreStyles(e,"inspector_main/nodeIcon.css");this._element=t.createChild("div","node-icon"),e.addEventListener("click",()=>Host.InspectorFrontendHost.InspectorFrontendHostInstance.openNodeFrontend(),!1),this._button=new UI.Toolbar.ToolbarItem(e),this._button.setTitle(Common.UIString.UIString("Open dedicated DevTools for Node.js")),SDK.SDKModel.TargetManager.instance().addEventListener(SDK.SDKModel.Events.AvailableTargetsChanged,e=>this._update(e.data)),this._button.setVisible(!1),this._update([])}_update(e){const t=!!e.find(e=>"node"===e.type&&!e.attached);this._element.classList.toggle("inactive",!t),t&&this._button.setVisible(!0)}item(){return this._button}}export class SourcesPanelIndicator{constructor(){function e(){let e=null;Common.Settings.Settings.instance().moduleSetting("javaScriptDisabled").get()&&(e=UI.Icon.Icon.create("smallicon-warning"),e.title=Common.UIString.UIString("JavaScript is disabled")),self.UI.inspectorView.setPanelIcon("sources",e)}Common.Settings.Settings.instance().moduleSetting("javaScriptDisabled").addChangeListener(e),e()}}export class BackendSettingsSync{constructor(){this._autoAttachSetting=Common.Settings.Settings.instance().moduleSetting("autoAttachToCreatedPages"),this._autoAttachSetting.addChangeListener(this._updateAutoAttach,this),this._updateAutoAttach(),this._adBlockEnabledSetting=Common.Settings.Settings.instance().moduleSetting("network.adBlockingEnabled"),this._adBlockEnabledSetting.addChangeListener(this._update,this),this._emulatePageFocusSetting=Common.Settings.Settings.instance().moduleSetting("emulatePageFocus"),this._emulatePageFocusSetting.addChangeListener(this._update,this),SDK.SDKModel.TargetManager.instance().observeTargets(this)}_updateTarget(e){e.type()!==SDK.SDKModel.Type.Frame||e.parentTarget()||(e.pageAgent().setAdBlockingEnabled(this._adBlockEnabledSetting.get()),e.emulationAgent().setFocusEmulationEnabled(this._emulatePageFocusSetting.get()))}_updateAutoAttach(){Host.InspectorFrontendHost.InspectorFrontendHostInstance.setOpenNewWindowForPopups(this._autoAttachSetting.get())}_update(){for(const e of SDK.SDKModel.TargetManager.instance().targets())this._updateTarget(e)}targetAdded(e){this._updateTarget(e)}targetRemoved(e){}}SDK.ChildTargetManager.ChildTargetManager.install();