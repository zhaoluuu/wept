import*as Common from"../common/common.js";import*as Platform from"../platform/platform.js";import*as UI from"../ui/ui.js";import{MinimalTimeWindowMs}from"./FlameChart.js";export class ChartViewportDelegate{windowChanged(t,e,i){}updateRangeSelection(t,e){}setSize(t,e){}update(){}}export class ChartViewport extends UI.Widget.VBox{constructor(t){super(),this.registerRequiredCSS("perf_ui/chartViewport.css"),this._delegate=t,this.viewportElement=this.contentElement.createChild("div","fill"),this.viewportElement.addEventListener("mousemove",this._updateCursorPosition.bind(this),!1),this.viewportElement.addEventListener("mouseout",this._onMouseOut.bind(this),!1),this.viewportElement.addEventListener("mousewheel",this._onMouseWheel.bind(this),!1),this.viewportElement.addEventListener("keydown",this._onChartKeyDown.bind(this),!1),this.viewportElement.addEventListener("keyup",this._onChartKeyUp.bind(this),!1),UI.UIUtils.installDragHandle(this.viewportElement,this._startDragging.bind(this),this._dragging.bind(this),this._endDragging.bind(this),"-webkit-grabbing",null),UI.UIUtils.installDragHandle(this.viewportElement,this._startRangeSelection.bind(this),this._rangeSelectionDragging.bind(this),this._endRangeSelection.bind(this),"text",null),this._alwaysShowVerticalScroll=!1,this._rangeSelectionEnabled=!0,this._vScrollElement=this.contentElement.createChild("div","chart-viewport-v-scroll"),this._vScrollContent=this._vScrollElement.createChild("div"),this._vScrollElement.addEventListener("scroll",this._onScroll.bind(this),!1),this._selectionOverlay=this.contentElement.createChild("div","chart-viewport-selection-overlay hidden"),this._selectedTimeSpanLabel=this._selectionOverlay.createChild("div","time-span"),this._cursorElement=this.contentElement.createChild("div","chart-cursor-element hidden"),this.reset()}alwaysShowVerticalScroll(){this._alwaysShowVerticalScroll=!0,this._vScrollElement.classList.add("always-show-scrollbar")}disableRangeSelection(){this._rangeSelectionEnabled=!1,this._rangeSelectionStart=null,this._rangeSelectionEnd=null,this._updateRangeSelectionOverlay()}isDragging(){return this._isDragging}elementsToRestoreScrollPositionsFor(){return[this._vScrollElement]}_updateScrollBar(){const t=this._alwaysShowVerticalScroll||this._totalHeight>this._offsetHeight;this._vScrollElement.classList.contains("hidden")===t&&(this._vScrollElement.classList.toggle("hidden",!t),this._updateContentElementSize())}onResize(){this._updateScrollBar(),this._updateContentElementSize(),this.scheduleUpdate()}reset(){this._vScrollElement.scrollTop=0,this._scrollTop=0,this._rangeSelectionStart=null,this._rangeSelectionEnd=null,this._isDragging=!1,this._dragStartPointX=0,this._dragStartPointY=0,this._dragStartScrollTop=0,this._visibleLeftTime=0,this._visibleRightTime=0,this._offsetWidth=0,this._offsetHeight=0,this._totalHeight=0,this._targetLeftTime=0,this._targetRightTime=0,this._updateContentElementSize()}_updateContentElementSize(){let t=this._vScrollElement.offsetLeft;t||(t=this.contentElement.offsetWidth),this._offsetWidth=t,this._offsetHeight=this.contentElement.offsetHeight,this._delegate.setSize(this._offsetWidth,this._offsetHeight)}setContentHeight(t){this._totalHeight=t,this._vScrollContent.style.height=t+"px",this._updateScrollBar(),this._updateContentElementSize(),this._scrollTop+this._offsetHeight<=t||(this._scrollTop=Math.max(0,t-this._offsetHeight),this._vScrollElement.scrollTop=this._scrollTop)}setScrollOffset(t,e){e=e||0,this._vScrollElement.scrollTop>t?this._vScrollElement.scrollTop=t:this._vScrollElement.scrollTop<t-this._offsetHeight+e&&(this._vScrollElement.scrollTop=t-this._offsetHeight+e)}scrollOffset(){return this._vScrollElement.scrollTop}chartHeight(){return this._offsetHeight}setBoundaries(t,e){this._minimumBoundary=t,this._totalTime=e}_onMouseWheel(t){const e=t.shiftKey^"zoom"===Common.Settings.Settings.instance().moduleSetting("flamechartMouseWheelAction").get(),i=!e&&(t.wheelDeltaY||120===Math.abs(t.wheelDeltaX)),s=e&&Math.abs(t.wheelDeltaX)>Math.abs(t.wheelDeltaY);if(i)this._vScrollElement.scrollTop-=(t.wheelDeltaY||t.wheelDeltaX)/120*this._offsetHeight/8;else if(s)this._handlePanGesture(-t.wheelDeltaX,!0);else{const e=1/120;this._handleZoomGesture(Math.pow(1.2,-(t.wheelDeltaY||t.wheelDeltaX)*e)-1)}t.consume(!0)}_startDragging(t){return!t.shiftKey&&(this._isDragging=!0,this._dragStartPointX=t.pageX,this._dragStartPointY=t.pageY,this._dragStartScrollTop=this._vScrollElement.scrollTop,this.viewportElement.style.cursor="",!0)}_dragging(t){const e=this._dragStartPointX-t.pageX;this._dragStartPointX=t.pageX,this._handlePanGesture(e);const i=this._dragStartPointY-t.pageY;this._vScrollElement.scrollTop=this._dragStartScrollTop+i}_endDragging(){this._isDragging=!1}_startRangeSelection(t){if(!t.shiftKey||!this._rangeSelectionEnabled)return!1;this._isDragging=!0,this._selectionOffsetShiftX=t.offsetX-t.pageX,this._selectionOffsetShiftY=t.offsetY-t.pageY,this._selectionStartX=t.offsetX;const e=this._selectionOverlay.style;return e.left=this._selectionStartX+"px",e.width="1px",this._selectedTimeSpanLabel.textContent="",this._selectionOverlay.classList.remove("hidden"),!0}_endRangeSelection(){this._isDragging=!1,this._selectionStartX=null}hideRangeSelection(){this._selectionOverlay.classList.add("hidden"),this._rangeSelectionStart=null,this._rangeSelectionEnd=null}setRangeSelection(t,e){this._rangeSelectionEnabled&&(this._rangeSelectionStart=Math.min(t,e),this._rangeSelectionEnd=Math.max(t,e),this._updateRangeSelectionOverlay(),this._delegate.updateRangeSelection(this._rangeSelectionStart,this._rangeSelectionEnd))}onClick(t){const e=this.pixelToTime(t.offsetX);null!==this._rangeSelectionStart&&e>=this._rangeSelectionStart&&e<=this._rangeSelectionEnd||this.hideRangeSelection()}_rangeSelectionDragging(t){const e=Platform.NumberUtilities.clamp(t.pageX+this._selectionOffsetShiftX,0,this._offsetWidth),i=this.pixelToTime(this._selectionStartX),s=this.pixelToTime(e);this.setRangeSelection(i,s)}_updateRangeSelectionOverlay(){const t=Platform.NumberUtilities.clamp(this.timeToPosition(this._rangeSelectionStart),-100,this._offsetWidth+100),e=Platform.NumberUtilities.clamp(this.timeToPosition(this._rangeSelectionEnd),-100,this._offsetWidth+100),i=this._selectionOverlay.style;i.left=t+"px",i.width=e-t+"px";const s=this._rangeSelectionEnd-this._rangeSelectionStart;this._selectedTimeSpanLabel.textContent=Number.preciseMillisToString(s,2)}_onScroll(){this._scrollTop=this._vScrollElement.scrollTop,this.scheduleUpdate()}_onMouseOut(){this._lastMouseOffsetX=-1,this._showCursor(!1)}_updateCursorPosition(t){this._showCursor(t.shiftKey),this._cursorElement.style.left=t.offsetX+"px",this._lastMouseOffsetX=t.offsetX}pixelToTime(t){return this.pixelToTimeOffset(t)+this._visibleLeftTime}pixelToTimeOffset(t){return t*(this._visibleRightTime-this._visibleLeftTime)/this._offsetWidth}timeToPosition(t){return Math.floor((t-this._visibleLeftTime)/(this._visibleRightTime-this._visibleLeftTime)*this._offsetWidth)}timeToPixel(){return this._offsetWidth/(this._visibleRightTime-this._visibleLeftTime)}_showCursor(t){this._cursorElement.classList.toggle("hidden",!t||this._isDragging)}_onChartKeyDown(t){this._showCursor(t.shiftKey),this._handleZoomPanKeys(t)}_onChartKeyUp(t){this._showCursor(t.shiftKey)}_handleZoomPanKeys(t){if(!UI.KeyboardShortcut.KeyboardShortcut.hasNoModifiers(t))return;const e=t.shiftKey?.8:.3,i=t.shiftKey?320:160;switch(t.code){case"KeyA":this._handlePanGesture(-i,!0);break;case"KeyD":this._handlePanGesture(i,!0);break;case"KeyW":this._handleZoomGesture(-e);break;case"KeyS":this._handleZoomGesture(e);break;default:return}t.consume(!0)}_handleZoomGesture(t){const e={left:this._targetLeftTime,right:this._targetRightTime},i=this.pixelToTime(this._lastMouseOffsetX);e.left+=(e.left-i)*t,e.right+=(e.right-i)*t,this._requestWindowTimes(e,!0)}_handlePanGesture(t,e){const i={left:this._targetLeftTime,right:this._targetRightTime},s=Platform.NumberUtilities.clamp(this.pixelToTimeOffset(t),this._minimumBoundary-i.left,this._totalTime+this._minimumBoundary-i.right);i.left+=s,i.right+=s,this._requestWindowTimes(i,!!e)}_requestWindowTimes(t,e){const i=this._minimumBoundary+this._totalTime;t.left<this._minimumBoundary?(t.right=Math.min(t.right+this._minimumBoundary-t.left,i),t.left=this._minimumBoundary):t.right>i&&(t.left=Math.max(t.left-t.right+i,this._minimumBoundary),t.right=i),t.right-t.left<MinimalTimeWindowMs||this._delegate.windowChanged(t.left,t.right,e)}scheduleUpdate(){this._updateTimerId||this._cancelWindowTimesAnimation||(this._updateTimerId=this.element.window().requestAnimationFrame(()=>{this._updateTimerId=0,this._update()}))}_update(){this._updateRangeSelectionOverlay(),this._delegate.update()}setWindowTimes(t,e,i){if(t!==this._targetLeftTime||e!==this._targetRightTime){if(!i||0===this._visibleLeftTime||this._visibleRightTime===1/0||0===t&&e===1/0||t===1/0&&e===1/0)return this._targetLeftTime=t,this._targetRightTime=e,this._visibleLeftTime=t,this._visibleRightTime=e,void this.scheduleUpdate();this._cancelWindowTimesAnimation&&(this._cancelWindowTimesAnimation(),this._visibleLeftTime=this._targetLeftTime,this._visibleRightTime=this._targetRightTime),this._targetLeftTime=t,this._targetRightTime=e,this._cancelWindowTimesAnimation=UI.UIUtils.animateFunction(this.element.window(),function(t,e){this._visibleLeftTime=t,this._visibleRightTime=e,this._update()}.bind(this),[{from:this._visibleLeftTime,to:t},{from:this._visibleRightTime,to:e}],100,()=>{this._cancelWindowTimesAnimation=null})}}windowLeftTime(){return this._visibleLeftTime}windowRightTime(){return this._visibleRightTime}}