import*as Common from"../common/common.js";export class ContrastInfo extends Common.ObjectWrapper.ObjectWrapper{constructor(o){if(super(),this._isNull=!0,this._contrastRatio=null,this._contrastRatioThresholds=null,this._fgColor=null,this._bgColor=null,!o)return;if(!o.computedFontSize||!o.computedFontWeight||!o.backgroundColors||1!==o.backgroundColors.length)return;this._isNull=!1;const t=ContrastInfo.computeIsLargeFont(o.computedFontSize,o.computedFontWeight);this._contrastRatioThresholds=_ContrastThresholds[t?"largeFont":"normalFont"];const r=o.backgroundColors[0],s=Common.Color.Color.parse(r);s&&this._setBgColorInternal(s)}isNull(){return this._isNull}setColor(o){this._fgColor=o,this._updateContrastRatio(),this.dispatchEventToListeners(Events.ContrastInfoUpdated)}color(){return this._fgColor}contrastRatio(){return this._contrastRatio}setBgColor(o){this._setBgColorInternal(o),this.dispatchEventToListeners(Events.ContrastInfoUpdated)}_setBgColorInternal(o){if(this._bgColor=o,!this._fgColor)return;const t=this._fgColor.rgba();if(o.hasAlpha()){const r=Common.ColorUtils.blendColors(o.rgba(),t);this._bgColor=new Common.Color.Color(r,Common.Color.Format.RGBA)}this._contrastRatio=Common.ColorUtils.contrastRatio(t,this._bgColor.rgba())}bgColor(){return this._bgColor}_updateContrastRatio(){this._bgColor&&this._fgColor&&(this._contrastRatio=Common.ColorUtils.contrastRatio(this._fgColor.rgba(),this._bgColor.rgba()))}contrastRatioThreshold(o){return this._contrastRatioThresholds?this._contrastRatioThresholds[o]:null}static computeIsLargeFont(o,t){const r=72*parseFloat(o.replace("px",""))/96;return-1!==["bold","bolder","600","700","800","900"].indexOf(t)?r>=14:r>=18}}export const Events={ContrastInfoUpdated:Symbol("ContrastInfoUpdated")};const _ContrastThresholds={largeFont:{aa:3,aaa:4.5},normalFont:{aa:4.5,aaa:7}};export let ContrastInfoType;