import{each,startWith,isEmpty}from"../third_party/licia.js";import*as UI from"../ui/ui.js";import*as SDK from"../sdk/sdk.js";import*as Common from"../common/common.js";import*as TextUtils from"../text_utils/text_utils.js";import*as SourceFrame from"../source_frame/source_frame.js";export class DatasetWidget extends UI.ThrottledWidget.ThrottledWidget{constructor(){super(!0),this._emptyElement=this.contentElement.createChild("div","gray-info-message"),this._emptyElement.textContent=Common.UIString.UIString("No dataset"),UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode,this._update,this),this._update()}async _update(){const t=UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode),e={};if(t){const i=t.attributes();each(i,t=>{const{name:i,value:s}=t;startWith(i,"data-")&&(e[i.replace(/^data-/,"")]=s)})}if(this._preview&&this._preview.detach(),isEmpty(e))return void this._emptyElement.classList.remove("hidden");this._emptyElement.classList.add("hidden");const i=TextUtils.StaticContentProvider.StaticContentProvider.fromString("wxml://dataset",Common.ResourceType.resourceTypes.XHR,JSON.stringify(e)),s=await SourceFrame.PreviewFactory.PreviewFactory.createPreview(i,"text/plain");this._preview=s,s.show(this.contentElement)}}