import*as Common from"../common/common.js";import*as Host from"../host/host.js";import*as Platform from"../platform/platform.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";export class PerformanceMonitorImpl extends UI.Widget.HBox{constructor(){super(!0),this.registerRequiredCSS("performance_monitor/performanceMonitor.css"),this.contentElement.classList.add("perfmon-pane"),this._metricsBuffer=[],this._pixelsPerMs=.01,this._pollIntervalMs=500,this._scaleHeight=16,this._graphHeight=90,this._gridColor=self.UI.themeSupport.patchColorText("rgba(0, 0, 0, 0.08)",UI.UIUtils.ThemeSupport.ColorUsage.Foreground),this._controlPane=new ControlPane(this.contentElement);const t=this.contentElement.createChild("div","perfmon-chart-container");this._canvas=t.createChild("canvas"),this._canvas.tabIndex=-1,UI.ARIAUtils.setAccessibleName(this._canvas,Common.UIString.UIString("Graphs displaying a real-time view of performance metrics")),this.contentElement.createChild("div","perfmon-chart-suspend-overlay fill").createChild("div").textContent=Common.UIString.UIString("Paused"),this._controlPane.addEventListener(Events.MetricChanged,this._recalcChartHeight,this),SDK.SDKModel.TargetManager.instance().observeModels(SDK.PerformanceMetricsModel.PerformanceMetricsModel,this)}wasShown(){this._model&&(SDK.SDKModel.TargetManager.instance().addEventListener(SDK.SDKModel.Events.SuspendStateChanged,this._suspendStateChanged,this),this._model.enable(),this._suspendStateChanged())}willHide(){this._model&&(SDK.SDKModel.TargetManager.instance().removeEventListener(SDK.SDKModel.Events.SuspendStateChanged,this._suspendStateChanged,this),this._stopPolling(),this._model.disable())}modelAdded(t){this._model||(this._model=t,this.isShowing()&&this.wasShown())}modelRemoved(t){this._model===t&&(this.isShowing()&&this.willHide(),this._model=null)}_suspendStateChanged(){const t=SDK.SDKModel.TargetManager.instance().allTargetsSuspended();t?this._stopPolling():this._startPolling(),this.contentElement.classList.toggle("suspended",t)}_startPolling(){this._startTimestamp=0,this._pollTimer=setInterval(()=>this._poll(),this._pollIntervalMs),this.onResize(),function t(){this._draw(),this._animationId=this.contentElement.window().requestAnimationFrame(t.bind(this))}.call(this)}_stopPolling(){clearInterval(this._pollTimer),this.contentElement.window().cancelAnimationFrame(this._animationId),this._metricsBuffer=[]}async _poll(){const t=await this._model.requestMetrics(),e=t.timestamp,i=t.metrics;this._metricsBuffer.push({timestamp:e,metrics:i});const o=this._width/this._pixelsPerMs,r=Math.ceil(o/this._pollIntervalMs*2);this._metricsBuffer.length>2*r&&this._metricsBuffer.splice(0,this._metricsBuffer.length-r),this._controlPane.updateMetrics(i)}_draw(){const t=this._canvas.getContext("2d");t.save(),t.scale(window.devicePixelRatio,window.devicePixelRatio),t.clearRect(0,0,this._width,this._height),t.save(),t.translate(0,this._scaleHeight);for(const e of this._controlPane.charts())this._controlPane.isActive(e.metrics[0].name)&&(this._drawChart(t,e,this._graphHeight),t.translate(0,this._graphHeight));t.restore(),this._drawHorizontalGrid(t),t.restore()}_drawHorizontalGrid(t){const e=self.UI.themeSupport.patchColorText("rgba(0, 0, 0, 0.02)",UI.UIUtils.ThemeSupport.ColorUsage.Foreground);t.font="10px "+Host.Platform.fontFamily(),t.fillStyle=self.UI.themeSupport.patchColorText("rgba(0, 0, 0, 0.55)",UI.UIUtils.ThemeSupport.ColorUsage.Foreground);const i=Date.now()/1e3;for(let o=Math.ceil(i);;--o){const r=this._width-(1e3*(i-o)-this._pollIntervalMs)*this._pixelsPerMs;if(r<-50)break;t.beginPath(),t.moveTo(r,0),t.lineTo(r,this._height),o>=0&&o%10==0&&t.fillText(new Date(1e3*o).toLocaleTimeString(),r+4,12),t.strokeStyle=o%10?e:this._gridColor,t.stroke()}}_drawChart(t,e,i){t.save(),t.rect(0,0,this._width,i),t.clip();const o=1.05*this._calcMax(e),r=e.stacked?new Map:null,s=[];for(let t=e.metrics.length-1;t>=0;--t){const n=e.metrics[t];s.push({path:this._buildMetricPath(e,n,i-8,o,t?r:null),color:n.color})}const n=Common.Color.Color.parse(self.UI.themeSupport.patchColorText("white",UI.UIUtils.ThemeSupport.ColorUsage.Background));for(const e of s.reverse()){const i=e.color;t.save(),t.fillStyle=n.blendWith(Common.Color.Color.parse(i).setAlpha(.2)).asString(null),t.fill(e.path),t.strokeStyle=i,t.lineWidth=.5,t.stroke(e.path),t.restore()}t.fillStyle=self.UI.themeSupport.patchColorText("rgba(0, 0, 0, 0.55)",UI.UIUtils.ThemeSupport.ColorUsage.Foreground),t.font="10px  "+Host.Platform.fontFamily(),t.fillText(e.title,8,10),this._drawVerticalGrid(t,i-8,o,e),t.restore()}_calcMax(t){if(t.max)return t.max;const e=this._width,i=performance.now()-this._pollIntervalMs-e/this._pixelsPerMs;let o=-1/0;for(const e of t.metrics)for(let t=this._metricsBuffer.length-1;t>=0;--t){const r=this._metricsBuffer[t],s=r.metrics.get(e.name);if(o=Math.max(o,s),r.timestamp<i)break}if(!this._metricsBuffer.length)return 10;const r=Math.pow(10,Math.floor(Math.log10(o)));o=Math.ceil(o/r/2)*r*2;return t.currentMax=.2*o+.8*(t.currentMax||o),t.currentMax}_drawVerticalGrid(t,e,i,o){let r=Math.pow(10,Math.floor(Math.log10(i)));const s=Math.floor(i/r);1!==s&&s%2==1&&(r*=2);let n=Math.floor(i/r)*r;const a=i,l=e-18;t.fillStyle=self.UI.themeSupport.patchColorText("rgba(0, 0, 0, 0.55)",UI.UIUtils.ThemeSupport.ColorUsage.Foreground),t.strokeStyle=this._gridColor,t.beginPath();for(let e=0;e<2;++e){const e=h(n),i=MetricIndicator._formatNumber(n,o);t.moveTo(0,e),t.lineTo(4,e),t.moveTo(t.measureText(i).width+12,e),t.lineTo(this._width,e),t.fillText(i,8,h(n)+3),n/=2}function h(t){return Math.round(e-l*t/a)+.5}t.stroke(),t.beginPath(),t.moveTo(0,e+.5),t.lineTo(this._width,e+.5),t.strokeStyle=self.UI.themeSupport.patchColorText("rgba(0, 0, 0, 0.2)",UI.UIUtils.ThemeSupport.ColorUsage.Foreground),t.stroke()}_buildMetricPath(t,e,i,o,r){const s=new Path2D,n=i-18;if(n<1)return s;const a=o,l=e.name,h=this._pixelsPerMs,c=performance.now()-this._pollIntervalMs-this._width/h,m=t.smooth;let d=0,p=0,_=0;this._metricsBuffer.length&&(d=(this._metricsBuffer[0].timestamp-c)*h,s.moveTo(d,g(0)),s.lineTo(this._width+5,g(0)),p=g(this._metricsBuffer.peekLast().metrics.get(l)),_=this._width+5,s.lineTo(_,p));for(let t=this._metricsBuffer.length-1;t>=0;--t){const e=this._metricsBuffer[t],i=e.timestamp;let o=e.metrics.get(l);r&&(o+=r.get(i)||0,o=Platform.NumberUtilities.clamp(o,0,1),r.set(i,o));const n=g(o);if(d=(i-c)*h,m){const t=(_+d)/2;s.bezierCurveTo(t,p,t,n,d,n)}else s.lineTo(d,p),s.lineTo(d,n);if(_=d,p=n,i<c)break}return s;function g(t){return Math.round(i-n*t/a)+.5}}onResize(){super.onResize(),this._width=this._canvas.offsetWidth,this._canvas.width=Math.round(this._width*window.devicePixelRatio),this._recalcChartHeight()}_recalcChartHeight(){let t=this._scaleHeight;for(const e of this._controlPane.charts())this._controlPane.isActive(e.metrics[0].name)&&(t+=this._graphHeight);this._height=Math.ceil(t*window.devicePixelRatio),this._canvas.height=this._height,this._canvas.style.height=this._height/window.devicePixelRatio+"px"}}export const Format={Percent:Symbol("Percent"),Bytes:Symbol("Bytes")};export class ControlPane extends Common.ObjectWrapper.ObjectWrapper{constructor(t){super(),this.element=t.createChild("div","perfmon-control-pane"),this._enabledChartsSetting=Common.Settings.Settings.instance().createSetting("perfmonActiveIndicators2",["TaskDuration","JSHeapTotalSize","Nodes"]),this._enabledCharts=new Set(this._enabledChartsSetting.get());const e=Format;this._chartsInfo=[{title:Common.UIString.UIString("CPU usage"),metrics:[{name:"TaskDuration",color:"#999"},{name:"ScriptDuration",color:"orange"},{name:"LayoutDuration",color:"blueviolet"},{name:"RecalcStyleDuration",color:"violet"}],format:e.Percent,smooth:!0,stacked:!0,color:"red",max:1},{title:Common.UIString.UIString("JS heap size"),metrics:[{name:"JSHeapTotalSize",color:"#99f"},{name:"JSHeapUsedSize",color:"blue"}],format:e.Bytes,color:"blue"},{title:Common.UIString.UIString("DOM Nodes"),metrics:[{name:"Nodes",color:"green"}]},{title:Common.UIString.UIString("JS event listeners"),metrics:[{name:"JSEventListeners",color:"yellowgreen"}]},{title:Common.UIString.UIString("Documents"),metrics:[{name:"Documents",color:"darkblue"}]},{title:Common.UIString.UIString("Document Frames"),metrics:[{name:"Frames",color:"darkcyan"}]},{title:Common.UIString.UIString("Layouts / sec"),metrics:[{name:"LayoutCount",color:"hotpink"}]},{title:Common.UIString.UIString("Style recalcs / sec"),metrics:[{name:"RecalcStyleCount",color:"deeppink"}]}];for(const t of this._chartsInfo){t.color&&(t.color=self.UI.themeSupport.patchColorText(t.color,UI.UIUtils.ThemeSupport.ColorUsage.Foreground));for(const e of t.metrics)e.color=self.UI.themeSupport.patchColorText(e.color,UI.UIUtils.ThemeSupport.ColorUsage.Foreground)}this._indicators=new Map;for(const t of this._chartsInfo){const e=t.metrics[0].name,i=this._enabledCharts.has(e),o=new MetricIndicator(this.element,t,i,this._onToggle.bind(this,e));this._indicators.set(e,o)}}_onToggle(t,e){e?this._enabledCharts.add(t):this._enabledCharts.delete(t),this._enabledChartsSetting.set(Array.from(this._enabledCharts)),this.dispatchEventToListeners(Events.MetricChanged)}charts(){return this._chartsInfo}isActive(t){return this._enabledCharts.has(t)}updateMetrics(t){for(const e of this._indicators.keys())t.has(e)&&this._indicators.get(e).setValue(t.get(e))}}export const Events={MetricChanged:Symbol("MetricChanged")};export class MetricIndicator{constructor(t,e,i,o){const r=e.color||e.metrics[0].color;this._info=e,this._active=i,this._onToggle=o,this.element=t.createChild("div","perfmon-indicator"),this._swatchElement=UI.Icon.Icon.create("smallicon-checkmark-square","perfmon-indicator-swatch"),this._swatchElement.style.backgroundColor=r,this.element.appendChild(this._swatchElement),this.element.createChild("div","perfmon-indicator-title").textContent=e.title,this._valueElement=this.element.createChild("div","perfmon-indicator-value"),this._valueElement.style.color=r,this.element.addEventListener("click",()=>this._toggleIndicator()),this.element.addEventListener("keypress",t=>this._handleKeypress(t)),this.element.classList.toggle("active",i),UI.ARIAUtils.markAsCheckbox(this.element),UI.ARIAUtils.setChecked(this.element,this._active),this.element.tabIndex=0}static _formatNumber(t,e){switch(MetricIndicator._numberFormatter||(MetricIndicator._numberFormatter=new Intl.NumberFormat("en-US",{maximumFractionDigits:1}),MetricIndicator._percentFormatter=new Intl.NumberFormat("en-US",{maximumFractionDigits:1,style:"percent"})),e.format){case Format.Percent:return MetricIndicator._percentFormatter.format(t);case Format.Bytes:return Platform.NumberUtilities.bytesToString(t);default:return MetricIndicator._numberFormatter.format(t)}}setValue(t){this._valueElement.textContent=MetricIndicator._formatNumber(t,this._info)}_toggleIndicator(){this._active=!this._active,this.element.classList.toggle("active",this._active),UI.ARIAUtils.setChecked(this.element,this._active),this._onToggle(this._active)}_handleKeypress(t){const e=t;" "!==e.key&&"Enter"!==e.key||this._toggleIndicator()}}export const format=new Intl.NumberFormat("en-US",{maximumFractionDigits:1});export let MetricInfo;export let ChartInfo;