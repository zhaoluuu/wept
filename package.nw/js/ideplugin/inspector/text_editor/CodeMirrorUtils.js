import*as TextUtils from"../text_utils/text_utils.js";export function toPos(t){return{start:new CodeMirror.Pos(t.startLine,t.startColumn),end:new CodeMirror.Pos(t.endLine,t.endColumn)}}export function toRange(t,e){return new TextUtils.TextRange.TextRange(t.line,t.ch,e.line,e.ch)}export function changeObjectToEditOperation(t){const e=toRange(t.from,t.to),n=e.clone(),o=t.text.length;return 0===o?(n.endLine=n.startLine,n.endColumn=n.startColumn):1===o?(n.endLine=n.startLine,n.endColumn=n.startColumn+t.text[0].length):(n.endLine=n.startLine+o-1,n.endColumn=t.text[o-1].length),{oldRange:e,newRange:n}}export function pullLines(t,e){const n=[];return t.eachLine(0,e,(function(t){n.push(t.text)})),n}export class TokenizerFactory{createTokenizer(t){const e=CodeMirror.getMode({indentUnit:2},t),n=CodeMirror.startState(e);return function(t,o){const r=new CodeMirror.StringStream(t);for(;!r.eol();){const t=e.token(r,n),i=r.current();o(i,t,r.start,r.start+i.length),r.start=r.pos}}}}