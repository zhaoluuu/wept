import*as Common from"../common/common.js";import*as Host from"../host/host.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";export class SensorsView extends UI.Widget.VBox{constructor(){super(!0),this.registerRequiredCSS("emulation/sensors.css"),this.contentElement.classList.add("sensors-view"),this._LocationSetting=Common.Settings.Settings.instance().createSetting("emulation.locationOverride",""),this._Location=SDK.EmulationModel.Location.parseSetting(this._LocationSetting.get()),this._LocationOverrideEnabled=!1,this._createLocationSection(this._Location),this.contentElement.createChild("div").classList.add("panel-section-separator"),this._deviceOrientationSetting=Common.Settings.Settings.instance().createSetting("emulation.deviceOrientationOverride",""),this._deviceOrientation=SDK.EmulationModel.DeviceOrientation.parseSetting(this._deviceOrientationSetting.get()),this._deviceOrientationOverrideEnabled=!1,this._createDeviceOrientationSection(),this.contentElement.createChild("div").classList.add("panel-section-separator"),this._appendTouchControl(),this.contentElement.createChild("div").classList.add("panel-section-separator"),this._appendIdleEmulator()}static instance(){return SensorsView._instanceObject||(SensorsView._instanceObject=new SensorsView),SensorsView._instanceObject}_createLocationSection(t){const e=this.contentElement.createChild("section","sensors-group"),i=UI.UIUtils.createLabel(ls`Location`,"sensors-group-title");e.appendChild(i);const n=e.createChild("div","geo-fields");let o=0;const a={title:Common.UIString.UIString("No override"),location:NonPresetOptions.NoOverride};this._locationSelectElement=n.createChild("select","chrome-select"),UI.ARIAUtils.bindLabelToControl(i,this._locationSelectElement),this._locationSelectElement.appendChild(new Option(a.title,a.location)),this._customLocationsGroup=this._locationSelectElement.createChild("optgroup"),this._customLocationsGroup.label=ls`Overrides`;const s=Common.Settings.Settings.instance().moduleSetting("emulation.locations"),l=UI.UIUtils.createTextButton(ls`Manage`,()=>Common.Revealer.reveal(s));UI.ARIAUtils.setAccessibleName(l,ls`Manage the list of locations`),n.appendChild(l);const r=()=>{this._customLocationsGroup.removeChildren();for(const[e,i]of s.get().entries())this._customLocationsGroup.appendChild(new Option(i.title,JSON.stringify(i))),t.latitude===i.lat&&t.longitude===i.long&&(o=e+1)};s.addChangeListener(r),r();const c={title:Common.UIString.UIString("Other…"),location:NonPresetOptions.Custom};this._locationSelectElement.appendChild(new Option(c.title,c.location));const d=this._locationSelectElement.createChild("optgroup");d.label=ls`Error`,d.appendChild(new Option(ls`Location unavailable`,NonPresetOptions.Unavailable)),this._locationSelectElement.selectedIndex=o,this._locationSelectElement.addEventListener("change",this._LocationSelectChanged.bind(this)),this._fieldsetElement=n.createChild("fieldset"),this._fieldsetElement.disabled=!this._LocationOverrideEnabled,this._fieldsetElement.id="location-override-section";const h=this._fieldsetElement.createChild("div","latlong-group"),m=this._fieldsetElement.createChild("div","latlong-group"),u=this._fieldsetElement.createChild("div","latlong-group"),p=this._fieldsetElement.createChild("div","latlong-group"),_=Host.Platform.isMac()?"⌘":"Ctrl",g=ls`Adjust with mousewheel or up/down keys. ${_}: ±10, Shift: ±1, Alt: ±0.01`;this._latitudeInput=UI.UIUtils.createInput("","number"),h.appendChild(this._latitudeInput),this._latitudeInput.setAttribute("step","any"),this._latitudeInput.value=0,this._latitudeSetter=UI.UIUtils.bindInput(this._latitudeInput,this._applyLocationUserInput.bind(this),SDK.EmulationModel.Location.latitudeValidator,!0,.1),this._latitudeSetter(String(t.latitude)),this._latitudeInput.title=g,h.appendChild(UI.UIUtils.createLabel(ls`Latitude`,"latlong-title",this._latitudeInput)),this._longitudeInput=UI.UIUtils.createInput("","number"),m.appendChild(this._longitudeInput),this._longitudeInput.setAttribute("step","any"),this._longitudeInput.value=0,this._longitudeSetter=UI.UIUtils.bindInput(this._longitudeInput,this._applyLocationUserInput.bind(this),SDK.EmulationModel.Location.longitudeValidator,!0,.1),this._longitudeSetter(String(t.longitude)),this._longitudeInput.title=g,m.appendChild(UI.UIUtils.createLabel(ls`Longitude`,"latlong-title",this._longitudeInput)),this._timezoneInput=UI.UIUtils.createInput("","text"),u.appendChild(this._timezoneInput),this._timezoneInput.value="Europe/Berlin",this._timezoneSetter=UI.UIUtils.bindInput(this._timezoneInput,this._applyLocationUserInput.bind(this),SDK.EmulationModel.Location.timezoneIdValidator,!1),this._timezoneSetter(t.timezoneId),u.appendChild(UI.UIUtils.createLabel(ls`Timezone ID`,"timezone-title",this._timezoneInput)),this._timezoneError=u.createChild("div","timezone-error"),this._localeInput=UI.UIUtils.createInput("","text"),p.appendChild(this._localeInput),this._localeInput.value="en-US",this._localeSetter=UI.UIUtils.bindInput(this._localeInput,this._applyLocationUserInput.bind(this),SDK.EmulationModel.Location.localeValidator,!1),this._localeSetter(t.locale),p.appendChild(UI.UIUtils.createLabel(ls`Locale`,"locale-title",this._localeInput)),this._localeError=p.createChild("div","locale-error")}_LocationSelectChanged(){this._fieldsetElement.disabled=!1,this._timezoneError.textContent="";const t=this._locationSelectElement.options[this._locationSelectElement.selectedIndex].value;if(t===NonPresetOptions.NoOverride)this._LocationOverrideEnabled=!1,this._clearFieldsetElementInputs(),this._fieldsetElement.disabled=!0;else if(t===NonPresetOptions.Custom){this._LocationOverrideEnabled=!0;const t=SDK.EmulationModel.Location.parseUserInput(this._latitudeInput.value.trim(),this._longitudeInput.value.trim(),this._timezoneInput.value.trim(),this._localeInput.value.trim());if(!t)return;this._Location=t}else if(t===NonPresetOptions.Unavailable)this._LocationOverrideEnabled=!0,this._Location=new SDK.EmulationModel.Location(0,0,"","",!0);else{this._LocationOverrideEnabled=!0;const e=JSON.parse(t);this._Location=new SDK.EmulationModel.Location(e.lat,e.long,e.timezoneId,e.locale,!1),this._latitudeSetter(e.lat),this._longitudeSetter(e.long),this._timezoneSetter(e.timezoneId),this._localeSetter(e.locale)}this._applyLocation(),t===NonPresetOptions.Custom&&this._latitudeInput.focus()}_applyLocationUserInput(){const t=SDK.EmulationModel.Location.parseUserInput(this._latitudeInput.value.trim(),this._longitudeInput.value.trim(),this._timezoneInput.value.trim(),this._localeInput.value.trim());t&&(this._timezoneError.textContent="",this._setSelectElementLabel(this._locationSelectElement,NonPresetOptions.Custom),this._Location=t,this._applyLocation())}_applyLocation(){this._LocationOverrideEnabled?this._LocationSetting.set(this._Location.toSetting()):this._LocationSetting.remove();for(const t of SDK.SDKModel.TargetManager.instance().models(SDK.EmulationModel.EmulationModel))t.emulateLocation(this._LocationOverrideEnabled?this._Location:null).catch(t=>{switch(t.type){case"emulation-set-timezone":this._timezoneError.textContent=t.message;break;case"emulation-set-locale":this._localeError.textContent=t.message}})}_clearFieldsetElementInputs(){this._latitudeSetter(0),this._longitudeSetter(0),this._timezoneSetter(""),this._localeSetter("")}_createDeviceOrientationSection(){const t=this.contentElement.createChild("section","sensors-group"),e=UI.UIUtils.createLabel(ls`Orientation`,"sensors-group-title");t.appendChild(e);const i=t.createChild("div","orientation-content"),n=i.createChild("div","orientation-fields"),o={title:Common.UIString.UIString("Off"),orientation:NonPresetOptions.NoOverride},a={title:Common.UIString.UIString("Custom orientation"),orientation:NonPresetOptions.Custom};this._orientationSelectElement=this.contentElement.createChild("select","chrome-select"),UI.ARIAUtils.bindLabelToControl(e,this._orientationSelectElement),this._orientationSelectElement.appendChild(new Option(o.title,o.orientation)),this._orientationSelectElement.appendChild(new Option(a.title,a.orientation));const s=PresetOrientations;for(let t=0;t<s.length;++t){const e=this._orientationSelectElement.createChild("optgroup");e.label=s[t].title;const i=s[t].value;for(let t=0;t<i.length;++t)e.appendChild(new Option(i[t].title,i[t].orientation))}this._orientationSelectElement.selectedIndex=0,n.appendChild(this._orientationSelectElement),this._orientationSelectElement.addEventListener("change",this._orientationSelectChanged.bind(this)),this._deviceOrientationFieldset=this._createDeviceOrientationOverrideElement(this._deviceOrientation),this._stageElement=i.createChild("div","orientation-stage"),this._orientationLayer=this._stageElement.createChild("div","orientation-layer"),this._boxElement=this._orientationLayer.createChild("section","orientation-box orientation-element"),this._boxElement.createChild("section","orientation-front orientation-element"),this._boxElement.createChild("section","orientation-top orientation-element"),this._boxElement.createChild("section","orientation-back orientation-element"),this._boxElement.createChild("section","orientation-left orientation-element"),this._boxElement.createChild("section","orientation-right orientation-element"),this._boxElement.createChild("section","orientation-bottom orientation-element"),UI.UIUtils.installDragHandle(this._stageElement,this._onBoxDragStart.bind(this),t=>{this._onBoxDrag(t)},null,"-webkit-grabbing","-webkit-grab"),n.appendChild(this._deviceOrientationFieldset),this._enableOrientationFields(!0),this._setBoxOrientation(this._deviceOrientation,!1)}_enableOrientationFields(t){t?(this._deviceOrientationFieldset.disabled=!0,this._stageElement.classList.add("disabled"),this._stageElement.title=ls`Enable orientation to rotate`):(this._deviceOrientationFieldset.disabled=!1,this._stageElement.classList.remove("disabled"),this._stageElement.title=ls`Shift+drag horizontally to rotate around the y-axis`)}_orientationSelectChanged(){const t=this._orientationSelectElement.options[this._orientationSelectElement.selectedIndex].value;if(this._enableOrientationFields(!1),t===NonPresetOptions.NoOverride)this._deviceOrientationOverrideEnabled=!1,this._enableOrientationFields(!0);else if(t===NonPresetOptions.Custom)this._deviceOrientationOverrideEnabled=!0,this._alphaElement.focus();else{const e=JSON.parse(t);this._deviceOrientationOverrideEnabled=!0,this._deviceOrientation=new SDK.EmulationModel.DeviceOrientation(e[0],e[1],e[2]),this._setDeviceOrientation(this._deviceOrientation,DeviceOrientationModificationSource.SelectPreset)}}_applyDeviceOrientation(){this._deviceOrientationOverrideEnabled&&this._deviceOrientationSetting.set(this._deviceOrientation.toSetting());for(const t of SDK.SDKModel.TargetManager.instance().models(SDK.EmulationModel.EmulationModel))t.emulateDeviceOrientation(this._deviceOrientationOverrideEnabled?this._deviceOrientation:null)}_setSelectElementLabel(t,e){const i=Array.prototype.map.call(t.options,t=>t.value);t.selectedIndex=i.indexOf(e)}_applyDeviceOrientationUserInput(){this._setDeviceOrientation(SDK.EmulationModel.DeviceOrientation.parseUserInput(this._alphaElement.value.trim(),this._betaElement.value.trim(),this._gammaElement.value.trim()),DeviceOrientationModificationSource.UserInput),this._setSelectElementLabel(this._orientationSelectElement,NonPresetOptions.Custom)}_resetDeviceOrientation(){this._setDeviceOrientation(new SDK.EmulationModel.DeviceOrientation(0,90,0),DeviceOrientationModificationSource.ResetButton),this._setSelectElementLabel(this._orientationSelectElement,"[0, 90, 0]")}_setDeviceOrientation(t,e){if(!t)return;function i(t){return Math.round(1e4*t)/1e4}e!==DeviceOrientationModificationSource.UserInput&&(this._alphaSetter(i(t.alpha)),this._betaSetter(i(t.beta)),this._gammaSetter(i(t.gamma)));const n=e!==DeviceOrientationModificationSource.UserDrag;this._setBoxOrientation(t,n),this._deviceOrientation=t,this._applyDeviceOrientation(),UI.ARIAUtils.alert(ls`Device orientation set to alpha: ${t.alpha}, beta: ${t.beta}, gamma: ${t.gamma}`,this._orientationSelectElement)}_createAxisInput(t,e,i){const n=t.createChild("div","orientation-axis-input-container");return n.appendChild(e),n.appendChild(UI.UIUtils.createLabel(i,"",e)),e.type="number",UI.UIUtils.bindInput(e,this._applyDeviceOrientationUserInput.bind(this),SDK.EmulationModel.DeviceOrientation.validator,!0)}_createDeviceOrientationOverrideElement(t){const e=createElement("fieldset");e.classList.add("device-orientation-override-section");const i=e.createChild("td","orientation-inputs-cell");this._alphaElement=UI.UIUtils.createInput(),this._alphaElement.setAttribute("step","any"),this._alphaSetter=this._createAxisInput(i,this._alphaElement,Common.UIString.UIString("α (alpha)")),this._alphaSetter(String(t.alpha)),this._betaElement=UI.UIUtils.createInput(),this._betaElement.setAttribute("step","any"),this._betaSetter=this._createAxisInput(i,this._betaElement,Common.UIString.UIString("β (beta)")),this._betaSetter(String(t.beta)),this._gammaElement=UI.UIUtils.createInput(),this._gammaElement.setAttribute("step","any"),this._gammaSetter=this._createAxisInput(i,this._gammaElement,Common.UIString.UIString("γ (gamma)")),this._gammaSetter(String(t.gamma));const n=UI.UIUtils.createTextButton(Common.UIString.UIString("Reset"),this._resetDeviceOrientation.bind(this),"orientation-reset-button");return UI.ARIAUtils.setAccessibleName(n,ls`Reset device orientation`),n.setAttribute("type","reset"),i.appendChild(n),e}_setBoxOrientation(t,e){e?this._stageElement.classList.add("is-animating"):this._stageElement.classList.remove("is-animating");const i=new WebKitCSSMatrix;this._boxMatrix=i.rotate(-t.beta,t.gamma,-t.alpha);const n=new UI.Geometry.EulerAngles(t.alpha,t.beta,t.gamma);this._orientationLayer.style.transform=n.toRotate3DString()}_onBoxDrag(t){const e=this._calculateRadiusVector(t.x,t.y);if(!e)return!0;let i,n;t.consume(!0),t.shiftKey?(i=new UI.Geometry.Vector(0,0,-1),n=(this._mouseDownVector.x-e.x)*ShiftDragOrientationSpeed):(i=UI.Geometry.crossProduct(this._mouseDownVector,e),n=UI.Geometry.calculateAngle(this._mouseDownVector,e));let o=new WebKitCSSMatrix;o=o.rotate(-90,0,0).rotateAxisAngle(i.x,i.y,i.z,n).rotate(90,0,0).multiply(this._originalBoxMatrix);const a=UI.Geometry.EulerAngles.fromRotationMatrix(o),s=new SDK.EmulationModel.DeviceOrientation(-a.alpha,-a.beta,a.gamma);return this._setDeviceOrientation(s,DeviceOrientationModificationSource.UserDrag),this._setSelectElementLabel(this._orientationSelectElement,NonPresetOptions.Custom),!1}_onBoxDragStart(t){return!!this._deviceOrientationOverrideEnabled&&(this._mouseDownVector=this._calculateRadiusVector(t.x,t.y),this._originalBoxMatrix=this._boxMatrix,!!this._mouseDownVector&&(t.consume(!0),!0))}_calculateRadiusVector(t,e){const i=this._stageElement.getBoundingClientRect(),n=Math.max(i.width,i.height)/2,o=(t-i.left-i.width/2)/n,a=(e-i.top-i.height/2)/n,s=o*o+a*a;return s>.5?new UI.Geometry.Vector(o,a,.5/Math.sqrt(s)):new UI.Geometry.Vector(o,a,Math.sqrt(1-s))}_appendTouchControl(){const t=this.contentElement.createChild("div","touch-section"),e=UI.SettingsUI.createControlForSetting(Common.Settings.Settings.instance().moduleSetting("emulation.touch"),ls`Forces touch instead of click`);e&&t.appendChild(e)}_appendIdleEmulator(){const t=this.contentElement.createChild("div","idle-section"),e=UI.SettingsUI.createControlForSetting(Common.Settings.Settings.instance().moduleSetting("emulation.idleDetection"),ls`Forces selected idle state emulation`);e&&t.appendChild(e)}}export const DeviceOrientationModificationSource={UserInput:"userInput",UserDrag:"userDrag",ResetButton:"resetButton",SelectPreset:"selectPreset"};export const NonPresetOptions={NoOverride:"noOverride",Custom:"custom",Unavailable:"unavailable"};export const PresetOrientations=[{title:ls`Presets`,value:[{title:Common.UIString.UIString("Portrait"),orientation:"[0, 90, 0]"},{title:Common.UIString.UIString("Portrait upside down"),orientation:"[180, -90, 0]"},{title:Common.UIString.UIString("Landscape left"),orientation:"[0, 90, -90]"},{title:Common.UIString.UIString("Landscape right"),orientation:"[0, 90, 90]"},{title:Common.UIString.UIString("Display up"),orientation:"[0, 0, 0]"},{title:Common.UIString.UIString("Display down"),orientation:"[0, 180, 0]"}]}];export class ShowActionDelegate{handleAction(t,e){return UI.ViewManager.ViewManager.instance().showView("sensors"),!0}}export const ShiftDragOrientationSpeed=16;