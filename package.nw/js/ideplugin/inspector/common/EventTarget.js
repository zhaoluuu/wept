export let EventDescriptor;export function removeEventListeners(e){for(const t of e)t.eventTarget.removeEventListener(t.eventType,t.listener,t.thisObject);e.splice(0)}export class EventTarget{addEventListener(e,t,n){throw new Error("not implemented")}once(e){throw new Error("not implemented")}removeEventListener(e,t,n){throw new Error("not implemented")}hasEventListeners(e){throw new Error("not implemented")}dispatchEventToListeners(e,t){}}EventTarget.removeEventListeners=removeEventListeners;export function fireEvent(e,t={},n=window){const r=new CustomEvent(e,{bubbles:!0,cancelable:!0,detail:t});n.dispatchEvent(r)}export let EventTargetEvent;