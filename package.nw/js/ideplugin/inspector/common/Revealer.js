export class Revealer{reveal(e,r){throw new Error("not implemented")}}export let reveal=function(e,r){return e?self.runtime.allInstances(Revealer,e).then((function(t){const n=[];for(let o=0;o<t.length;++o)n.push(t[o].reveal(e,r));return Promise.race(n)})):Promise.reject(new Error("Can't reveal "+e))};export function setRevealForTest(e){reveal=e}export const revealDestination=function(e){const r=self.runtime.extension(Revealer,e);return r?r.descriptor().destination:null};