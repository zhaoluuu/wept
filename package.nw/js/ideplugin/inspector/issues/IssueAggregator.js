import*as BrowserSDK from"../browser_sdk/browser_sdk.js";import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";export class AggregatedIssue extends SDK.Issue.Issue{constructor(e){super(e),this._cookies=new Map,this._requests=new Map,this._representative=null,this._mixedContents=new Map,this._heavyAdIssueDetails=new Map,this._cspIssues=new Set,this._blockedByResponseDetails=new Map,this._aggregatedIssuesCount=0}primaryKey(){throw new Error("This should never be called")}blockedByResponseDetails(){return this._blockedByResponseDetails.values()}cookies(){return Array.from(this._cookies.values()).map(e=>e.cookie)}cookiesWithRequestIndicator(){return this._cookies.values()}heavyAds(){return this._heavyAdIssueDetails.values()}mixedContents(){return this._mixedContents.values()}cspIssues(){return this._cspIssues}requests(){return this._requests.values()}getDescription(){return this._representative?this._representative.getDescription():null}getCategory(){return this._representative?this._representative.getCategory():SDK.Issue.IssueCategory.Other}getAggregatedIssuesCount(){return this._aggregatedIssuesCount}_keyForCookie(e){const{domain:s,path:t,name:r}=e;return`${s};${t};${r}`}addInstance(e){this._aggregatedIssuesCount++,this._representative||(this._representative=e);let s=!1;for(const t of e.requests())s=!0,this._requests.has(t.requestId)||this._requests.set(t.requestId,t);for(const t of e.cookies()){const e=this._keyForCookie(t);this._cookies.has(e)||this._cookies.set(e,{cookie:t,hasRequest:s})}for(const s of e.mixedContents()){const e=JSON.stringify(s);this._mixedContents.set(e,s)}for(const s of e.heavyAds()){const e=JSON.stringify(s);this._heavyAdIssueDetails.set(e,s)}for(const s of e.blockedByResponseDetails()){const e=JSON.stringify(s,["parentFrame","blockedFrame","requestId","frameId","reason","request"]);this._blockedByResponseDetails.set(e,s)}e instanceof SDK.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue&&this._cspIssues.add(e)}}export class IssueAggregator extends Common.ObjectWrapper.ObjectWrapper{constructor(e){super(),this._aggregatedIssuesByCode=new Map,this._issuesManager=e,this._issuesManager.addEventListener(BrowserSDK.IssuesManager.Events.IssueAdded,this._onIssueAdded,this),this._issuesManager.addEventListener(BrowserSDK.IssuesManager.Events.FullUpdateRequired,this._onFullUpdateRequired,this);for(const e of this._issuesManager.issues())this._aggregateIssue(e)}_onIssueAdded(e){const{issue:s}=e.data;this._aggregateIssue(s)}_onFullUpdateRequired(){this._aggregatedIssuesByCode.clear();for(const e of this._issuesManager.issues())this._aggregateIssue(e);this.dispatchEventToListeners(Events.FullUpdateRequired)}_aggregateIssue(e){let s=this._aggregatedIssuesByCode.get(e.code());return s||(s=new AggregatedIssue(e.code()),this._aggregatedIssuesByCode.set(e.code(),s)),s.addInstance(e),this.dispatchEventToListeners(Events.AggregatedIssueUpdated,s),s}aggregatedIssues(){return this._aggregatedIssuesByCode.values()}numberOfAggregatedIssues(){return this._aggregatedIssuesByCode.size}}export const Events={AggregatedIssueUpdated:Symbol("AggregatedIssueUpdated"),FullUpdateRequired:Symbol("FullUpdateRequired")};