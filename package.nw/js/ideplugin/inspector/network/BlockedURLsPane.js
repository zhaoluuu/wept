import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";export let _instance=null;export class BlockedURLsPane extends UI.Widget.VBox{constructor(){super(!0),this.registerRequiredCSS("network/blockedURLsPane.css"),_instance=this,this._manager=SDK.NetworkManager.MultitargetNetworkManager.instance(),this._manager.addEventListener(SDK.NetworkManager.MultitargetNetworkManager.Events.BlockedPatternsChanged,()=>{this._update()},this),this._toolbar=new UI.Toolbar.Toolbar("",this.contentElement),this._enabledCheckbox=new UI.Toolbar.ToolbarCheckbox(Common.UIString.UIString("Enable request blocking"),void 0,this._toggleEnabled.bind(this)),this._toolbar.appendToolbarItem(this._enabledCheckbox),this._toolbar.appendSeparator();const e=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Add pattern"),"largeicon-add");e.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,this._addButtonClicked,this),this._toolbar.appendToolbarItem(e);const t=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Remove all patterns"),"largeicon-clear");t.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,this._removeAll,this),this._toolbar.appendToolbarItem(t),this._list=new UI.ListWidget.ListWidget(this),this._list.element.classList.add("blocked-urls"),this._list.registerRequiredCSS("network/blockedURLsPane.css"),this._list.setEmptyPlaceholder(this._createEmptyPlaceholder()),this._list.show(this.contentElement),this._editor=null,this._blockedCountForUrl=new Map,SDK.SDKModel.TargetManager.instance().addModelListener(SDK.NetworkManager.NetworkManager,SDK.NetworkManager.Events.RequestFinished,this._onRequestFinished,this),this._updateThrottler=new Common.Throttler.Throttler(200),this._update()}_createEmptyPlaceholder(){const e=this.contentElement.createChild("div","no-blocked-urls"),t=UI.UIUtils.createTextButton(ls`Add pattern`,this._addButtonClicked.bind(this),"add-button");return UI.ARIAUtils.setAccessibleName(t,ls`Add request blocking pattern`),e.appendChild(UI.UIUtils.formatLocalized("Requests are not blocked. %s",[t])),e}static reset(){_instance&&_instance.reset()}_addButtonClicked(){this._manager.setBlockingEnabled(!0),this._list.addNewItem(0,{url:"",enabled:!0})}renderItem(e,t){const n=this._blockedRequestsCount(e.url),r=document.createElement("div");r.classList.add("blocked-url");const o=r.createChild("input","blocked-url-checkbox");return o.type="checkbox",o.checked=e.enabled,o.disabled=!this._manager.blockingEnabled(),r.createChild("div","blocked-url-label").textContent=e.url,r.createChild("div","blocked-url-count").textContent=Common.UIString.UIString("%d blocked",n),r.addEventListener("click",t=>this._togglePattern(e,t),!1),o.addEventListener("click",t=>this._togglePattern(e,t),!1),r}_togglePattern(e,t){t.consume(!0);const n=this._manager.blockedPatterns();n.splice(n.indexOf(e),1,{enabled:!e.enabled,url:e.url}),this._manager.setBlockedPatterns(n)}_toggleEnabled(){this._manager.setBlockingEnabled(!this._manager.blockingEnabled()),this._update()}removeItemRequested(e,t){const n=this._manager.blockedPatterns();n.splice(t,1),this._manager.setBlockedPatterns(n)}beginEdit(e){return this._editor=this._createEditor(),this._editor.control("url").value=e.url,this._editor}commitEdit(e,t,n){const r=t.control("url").value,o=this._manager.blockedPatterns();n?o.push({enabled:!0,url:r}):o.splice(o.indexOf(e),1,{enabled:!0,url:r}),this._manager.setBlockedPatterns(o)}_createEditor(){if(this._editor)return this._editor;const e=new UI.ListWidget.Editor,t=e.contentElement();t.createChild("div","blocked-url-edit-row").createChild("div").textContent=Common.UIString.UIString("Text pattern to block matching requests; use * for wildcard");const n=t.createChild("div","blocked-url-edit-row"),r=e.createInput("url","text","",(e,t,n)=>{let r,o=!0;return n.value?this._manager.blockedPatterns().find(e=>e.url===n.value)&&(r=ls`Pattern already exists.`,o=!1):(r=ls`Pattern input cannot be empty.`,o=!1),{valid:o,errorMessage:r}});return n.createChild("div","blocked-url-edit-value").appendChild(r),e}_removeAll(){this._manager.setBlockedPatterns([])}_update(){const e=this._manager.blockingEnabled();this._list.element.classList.toggle("blocking-disabled",!e&&!!this._manager.blockedPatterns().length),this._enabledCheckbox.setChecked(e),this._list.clear();for(const e of this._manager.blockedPatterns())this._list.appendItem(e,!0);return Promise.resolve()}_blockedRequestsCount(e){if(!e)return 0;let t=0;for(const n of this._blockedCountForUrl.keys())this._matches(e,n)&&(t+=this._blockedCountForUrl.get(n));return t}_matches(e,t){let n=0;const r=e.split("*");for(let e=0;e<r.length;e++){const o=r[e];if(o.length){if(n=t.indexOf(o,n),-1===n)return!1;n+=o.length}}return!0}reset(){this._blockedCountForUrl.clear(),this._updateThrottler.schedule(this._update.bind(this))}_onRequestFinished(e){const t=e.data;if(t.wasBlocked()){const e=this._blockedCountForUrl.get(t.url())||0;this._blockedCountForUrl.set(t.url(),e+1),this._updateThrottler.schedule(this._update.bind(this))}}}