import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{EventSourceMessagesView}from"./EventSourceMessagesView.js";import{NetworkTimeCalculator}from"./NetworkTimeCalculator.js";import{RequestCookiesView}from"./RequestCookiesView.js";import{RequestHeadersView}from"./RequestHeadersView.js";import{RequestInitiatorView}from"./RequestInitiatorView.js";import{RequestPreviewView}from"./RequestPreviewView.js";import{RequestResponseView}from"./RequestResponseView.js";import{RequestTimingView}from"./RequestTimingView.js";import{ResourceWebSocketFrameView}from"./ResourceWebSocketFrameView.js";export class NetworkItemView extends UI.TabbedPane.TabbedPane{constructor(e,s,t){if(super(),this._request=e,this.element.classList.add("network-item-view"),this._resourceViewTabSetting=Common.Settings.Settings.instance().createSetting("resourceViewTab","preview"),this._headersView=new RequestHeadersView(e),this.appendTab(Tabs.Headers,Common.UIString.UIString("Headers"),this._headersView,Common.UIString.UIString("Headers and request body")),this.addEventListener(UI.TabbedPane.Events.TabSelected,this._tabSelected,this),e.resourceType()===Common.ResourceType.resourceTypes.WebSocket){const s=new ResourceWebSocketFrameView(e);this.appendTab(Tabs.WsFrames,Common.UIString.UIString("Messages"),s,Common.UIString.UIString("WebSocket messages"))}else if("text/event-stream"===e.mimeType)this.appendTab(Tabs.EventSource,Common.UIString.UIString("EventStream"),new EventSourceMessagesView(e));else{this._responseView=new RequestResponseView(e);const s=new RequestPreviewView(e);if(this.appendTab(Tabs.Preview,Common.UIString.UIString("Preview"),s,Common.UIString.UIString("Response preview")),e.signedExchangeInfo()&&e.signedExchangeInfo().errors&&e.signedExchangeInfo().errors.length){const e=UI.Icon.Icon.create("smallicon-error");e.title=Common.UIString.UIString("SignedExchange error"),this.setTabIcon(Tabs.Preview,e)}this.appendTab(Tabs.Response,Common.UIString.UIString("Response"),this._responseView,Common.UIString.UIString("Raw response data"))}this.appendTab(Tabs.Initiator,ls`Initiator`,new RequestInitiatorView(e),ls`Request initiator call stack`),this.appendTab(Tabs.Timing,Common.UIString.UIString("Timing"),new RequestTimingView(e,s),Common.UIString.UIString("Request and response timeline")),this._cookiesView=null,this._initialTab=t||this._resourceViewTabSetting.get()}wasShown(){super.wasShown(),this._request.addEventListener(SDK.NetworkRequest.Events.RequestHeadersChanged,this._maybeAppendCookiesPanel,this),this._request.addEventListener(SDK.NetworkRequest.Events.ResponseHeadersChanged,this._maybeAppendCookiesPanel,this),this._maybeAppendCookiesPanel(),this._selectTab(this._initialTab)}willHide(){this._request.removeEventListener(SDK.NetworkRequest.Events.RequestHeadersChanged,this._maybeAppendCookiesPanel,this),this._request.removeEventListener(SDK.NetworkRequest.Events.ResponseHeadersChanged,this._maybeAppendCookiesPanel,this)}_maybeAppendCookiesPanel(){const e=this._request.hasRequestCookies()||this._request.responseCookies.length;console.assert(e||!this._cookiesView,"Cookies were introduced in headers and then removed!"),e&&!this._cookiesView&&(this._cookiesView=new RequestCookiesView(this._request),this.appendTab(Tabs.Cookies,Common.UIString.UIString("Cookies"),this._cookiesView,Common.UIString.UIString("Request and response cookies")))}_selectTab(e){this.selectTab(e)||this.selectTab("headers")}_tabSelected(e){e.data.isUserGesture&&this._resourceViewTabSetting.set(e.data.tabId)}request(){return this._request}async revealResponseBody(e){this._selectTab(Tabs.Response),this._responseView&&"number"==typeof e&&await this._responseView.revealLine(e)}revealRequestHeader(e){this._selectTab(Tabs.Headers),this._headersView.revealRequestHeader(e)}revealResponseHeader(e){this._selectTab(Tabs.Headers),this._headersView.revealResponseHeader(e)}}export const Tabs={Cookies:"cookies",EventSource:"eventSource",Headers:"headers",Initiator:"initiator",Preview:"preview",Response:"response",Timing:"timing",WsFrames:"webSocketFrames"};