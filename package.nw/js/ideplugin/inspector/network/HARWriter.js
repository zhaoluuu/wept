import*as Common from"../common/common.js";import*as Platform from"../platform/platform.js";import*as SDK from"../sdk/sdk.js";export class HARWriter{static async write(t,e,n){const o=new Common.Progress.CompositeProgress(n),r=await HARWriter._harStringForRequests(e,o);return n.isCanceled()?Promise.resolve():HARWriter._writeToStream(t,o,r)}static async _harStringForRequests(t,e){const n=e.createSubProgress();n.setTitle(Common.UIString.UIString("Collecting content…")),n.setTotalWork(t.length);const o=await SDK.HARLog.HARLog.build(t),r=[];for(let e=0;e<t.length;e++){const n=t[e].contentData();r.push(n.then(s.bind(null,o.entries[e])))}return await Promise.all(r),n.done(),n.isCanceled()?"":JSON.stringify({log:o},null,_jsonIndent);function s(t,e){n.worked();let o=e.encoded;if(null!==e.content){let n=e.content;n&&!o&&function(t){for(let n=0;n<t.length;n++)if(!((e=t.charCodeAt(n))<55296||e>=57344&&e<64976||e>65007&&e<=1114111&&65534!=(65534&e)))return!0;var e;return!1}(n)&&(n=Platform.StringUtilities.toBase64(n),o=!0),t.response.content.text=n}o&&(t.response.content.encoding="base64")}}static async _writeToStream(t,e,n){const o=e.createSubProgress();o.setTitle(Common.UIString.UIString("Writing file…")),o.setTotalWork(n.length);for(let e=0;e<n.length&&!o.isCanceled();e+=_chunkSize){const r=n.substr(e,_chunkSize);await t.write(r),o.worked(r.length)}o.done()}}export const _jsonIndent=2;export const _chunkSize=1e5;