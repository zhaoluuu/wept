import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as SourceFrame from"../source_frame/source_frame.js";import*as UI from"../ui/ui.js";export class RequestResponseView extends UI.Widget.VBox{constructor(e){super(),this.element.classList.add("request-view"),this.request=e,this._contentViewPromise=null}static _hasTextContent(e,o){const t=e.mimeType||"";let r=Common.ResourceType.ResourceType.fromMimeType(t);return r===Common.ResourceType.resourceTypes.Other&&(r=e.contentType()),r===Common.ResourceType.resourceTypes.Image?t.startsWith("image/svg"):!!r.isTextType()||!o.error&&(r===Common.ResourceType.resourceTypes.Other&&(!!o.content&&!o.encoded))}static async sourceViewForRequest(e){let o=e[_sourceViewSymbol];if(void 0!==o)return o;const t=await e.contentData();if(!RequestResponseView._hasTextContent(e,t))return e[_sourceViewSymbol]=null,null;const r=e.resourceType().canonicalMimeType()||e.mimeType;return o=SourceFrame.ResourceSourceFrame.ResourceSourceFrame.createSearchableView(e,r),e[_sourceViewSymbol]=o,o}wasShown(){this._doShowPreview()}_doShowPreview(){return this._contentViewPromise||(this._contentViewPromise=this.showPreview()),this._contentViewPromise}async showPreview(){const e=await this.createPreview();return e.show(this.element),e}async createPreview(){const e=await this.request.contentData(),o=await RequestResponseView.sourceViewForRequest(this.request);return e.content&&o||e.error?e.content&&o?o:new UI.EmptyWidget.EmptyWidget(Common.UIString.UIString("Failed to load response data")):new UI.EmptyWidget.EmptyWidget(Common.UIString.UIString("This request has no response data available."))}async revealLine(e){const o=await this._doShowPreview();o instanceof SourceFrame.ResourceSourceFrame.SearchableContainer&&o.revealPosition(e)}}export const _sourceViewSymbol=Symbol("RequestResponseSourceView");