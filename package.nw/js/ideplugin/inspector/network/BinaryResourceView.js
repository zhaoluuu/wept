import*as Common from"../common/common.js";import*as Host from"../host/host.js";import*as SourceFrame from"../source_frame/source_frame.js";import*as TextUtils from"../text_utils/text_utils.js";import*as UI from"../ui/ui.js";export class BinaryResourceView extends UI.Widget.VBox{constructor(e,t,i){if(super(),this.registerRequiredCSS("network/binaryResourceView.css"),this._empty=!e.length,this._empty)return void new UI.EmptyWidget.EmptyWidget("No data present in selected item").show(this.element);this._binaryResourceViewFactory=new SourceFrame.BinaryResourceViewFactory.BinaryResourceViewFactory(e,t,i),this._toolbar=new UI.Toolbar.Toolbar("binary-view-toolbar",this.element),this._binaryViewObjects=[new BinaryViewObject("base64",ls`Base64`,ls`Copied as Base64`,this._binaryResourceViewFactory.createBase64View.bind(this._binaryResourceViewFactory),this._binaryResourceViewFactory.base64.bind(this._binaryResourceViewFactory)),new BinaryViewObject("hex",ls`Hex Viewer`,ls`Copied as Hex`,this._binaryResourceViewFactory.createHexView.bind(this._binaryResourceViewFactory),this._binaryResourceViewFactory.hex.bind(this._binaryResourceViewFactory)),new BinaryViewObject("utf8",ls`UTF-8`,ls`Copied as UTF-8`,this._binaryResourceViewFactory.createUtf8View.bind(this._binaryResourceViewFactory),this._binaryResourceViewFactory.utf8.bind(this._binaryResourceViewFactory))],this._binaryViewTypeSetting=Common.Settings.Settings.instance().createSetting("binaryViewType","hex"),this._binaryViewTypeCombobox=new UI.Toolbar.ToolbarComboBox(this._binaryViewTypeChanged.bind(this),ls`Binary view type`);for(const e of this._binaryViewObjects)this._binaryViewTypeCombobox.addOption(this._binaryViewTypeCombobox.createOption(e.label,e.type));this._toolbar.appendToolbarItem(this._binaryViewTypeCombobox);const o=new UI.Toolbar.ToolbarButton(ls`Copy to clipboard`,"largeicon-copy");o.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,e=>{this._copySelectedViewToClipboard()},this),this._toolbar.appendToolbarItem(o),this._copiedText=new UI.Toolbar.ToolbarText,this._copiedText.element.classList.add("binary-view-copied-text"),this._toolbar.element.appendChild(this._copiedText.element),this._addFadeoutSettimeoutId=null,this._lastView=null,this._updateView()}_getCurrentViewObject(){const e=this._binaryViewObjects.find(e=>e.type===this._binaryViewTypeSetting.get());return console.assert(e,"No binary view found for binary view type found in setting 'binaryViewType': "+this._binaryViewTypeSetting.get()),e||null}async _copySelectedViewToClipboard(){const e=this._getCurrentViewObject();Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText((await e.content()).content),this._copiedText.setText(e.copiedMessage),this._copiedText.element.classList.remove("fadeout"),this._addFadeoutSettimeoutId&&(clearTimeout(this._addFadeoutSettimeoutId),this._addFadeoutSettimeoutId=null),this._addFadeoutSettimeoutId=setTimeout(function(){this._copiedText.element.classList.add("fadeout")}.bind(this),2e3)}wasShown(){this._empty||this._updateView()}_updateView(){const e=this._getCurrentViewObject();if(!e)return;const t=e.getView();t!==this._lastView&&(this._lastView&&this._lastView.detach(),this._lastView=t,t.show(this.element,this._toolbar.element),this._binaryViewTypeCombobox.selectElement().value=this._binaryViewTypeSetting.get())}_binaryViewTypeChanged(){const e=this._binaryViewTypeCombobox.selectedOption().value;this._binaryViewTypeSetting.get()!==e&&(this._binaryViewTypeSetting.set(e),this._updateView())}addCopyToContextMenu(e,t){if(this._empty)return;const i=e.clipboardSection().appendSubMenuItem(t).footerSection();i.appendItem(ls`Copy as Base64`,async()=>{const e=await this._binaryResourceViewFactory.base64();Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(e.content)}),i.appendItem(ls`Copy as Hex`,async()=>{const e=await this._binaryResourceViewFactory.hex();Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(e.content)}),i.appendItem(ls`Copy as UTF-8`,async()=>{const e=await this._binaryResourceViewFactory.utf8();Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(e.content)})}}export class BinaryViewObject{constructor(e,t,i,o,s){this.type=e,this.label=t,this.copiedMessage=i,this.content=s,this._createViewFn=o,this._view=null}getView(){return this._view||(this._view=this._createViewFn()),this._view}}