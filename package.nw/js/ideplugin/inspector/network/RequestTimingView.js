import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{Events,NetworkTimeCalculator}from"./NetworkTimeCalculator.js";export class RequestTimingView extends UI.Widget.VBox{constructor(e,t){super(),this.element.classList.add("resource-timing-view"),this._request=e,this._calculator=t}static _timeRangeTitle(e){switch(e){case RequestTimeRangeNames.Push:return Common.UIString.UIString("Receiving Push");case RequestTimeRangeNames.Queueing:return Common.UIString.UIString("Queueing");case RequestTimeRangeNames.Blocking:return Common.UIString.UIString("Stalled");case RequestTimeRangeNames.Connecting:return Common.UIString.UIString("Initial connection");case RequestTimeRangeNames.DNS:return Common.UIString.UIString("DNS Lookup");case RequestTimeRangeNames.Proxy:return Common.UIString.UIString("Proxy negotiation");case RequestTimeRangeNames.ReceivingPush:return Common.UIString.UIString("Reading Push");case RequestTimeRangeNames.Receiving:return Common.UIString.UIString("Content Download");case RequestTimeRangeNames.Sending:return Common.UIString.UIString("Request sent");case RequestTimeRangeNames.ServiceWorker:return Common.UIString.UIString("Request to ServiceWorker");case RequestTimeRangeNames.ServiceWorkerPreparation:return Common.UIString.UIString("Startup");case RequestTimeRangeNames.ServiceWorkerRespondWith:return Common.UIString.UIString("respondWith");case RequestTimeRangeNames.SSL:return Common.UIString.UIString("SSL");case RequestTimeRangeNames.Total:return Common.UIString.UIString("Total");case RequestTimeRangeNames.Waiting:return Common.UIString.UIString("Waiting (TTFB)");default:return Common.UIString.UIString(e)}}static calculateRequestTimeRanges(e,t){const i=[];function n(e,t,n){t<Number.MAX_VALUE&&t<=n&&i.push({name:e,start:t,end:n})}function r(e){for(let t=0;t<e.length;++t)if(e[t]>0)return e[t]}function s(e,t,i){t>=0&&i>=0&&n(e,c+t/1e3,c+i/1e3)}const a=e.timing;if(!a){const t=-1!==e.issueTime()?e.issueTime():-1!==e.startTime?e.startTime:0,r=-1===e.responseReceivedTime?Number.MAX_VALUE:e.responseReceivedTime,s=-1===e.endTime?Number.MAX_VALUE:e.endTime;return n(RequestTimeRangeNames.Total,t,s),n(RequestTimeRangeNames.Blocking,t,r),n(RequestTimeRangeNames.Receiving,r,s),i}const o=e.issueTime(),c=a.requestTime,m=r([e.endTime,e.responseReceivedTime])||c;if(n(RequestTimeRangeNames.Total,o<c?o:c,m),a.pushStart){const e=a.pushEnd||m;e>t&&n(RequestTimeRangeNames.Push,Math.max(a.pushStart,t),e)}o<c&&n(RequestTimeRangeNames.Queueing,o,c);const l=1e3*(e.responseReceivedTime-c);if(e.fetchedViaServiceWorker)s(RequestTimeRangeNames.Blocking,0,a.workerStart),s(RequestTimeRangeNames.ServiceWorkerPreparation,a.workerStart,a.workerReady),s(RequestTimeRangeNames.ServiceWorkerRespondWith,a.workerFetchStart,a.workerRespondWithSettled),s(RequestTimeRangeNames.ServiceWorker,a.workerReady,a.sendEnd),s(RequestTimeRangeNames.Waiting,a.sendEnd,l);else if(!a.pushStart){const e=r([a.dnsStart,a.connectStart,a.sendStart,l])||0;s(RequestTimeRangeNames.Blocking,0,e),s(RequestTimeRangeNames.Proxy,a.proxyStart,a.proxyEnd),s(RequestTimeRangeNames.DNS,a.dnsStart,a.dnsEnd),s(RequestTimeRangeNames.Connecting,a.connectStart,a.connectEnd),s(RequestTimeRangeNames.SSL,a.sslStart,a.sslEnd),s(RequestTimeRangeNames.Sending,a.sendStart,a.sendEnd),s(RequestTimeRangeNames.Waiting,Math.max(a.sendEnd,a.connectEnd,a.dnsEnd,a.proxyEnd,e),l)}return-1!==e.endTime&&n(a.pushStart?RequestTimeRangeNames.ReceivingPush:RequestTimeRangeNames.Receiving,e.responseReceivedTime,m),i}static createTimingTable(e,t){const i=document.createElement("table");i.classList.add("network-timing-table"),UI.Utils.appendStyle(i,"network/networkTimingTable.css");const n=i.createChild("colgroup");n.createChild("col","labels"),n.createChild("col","bars"),n.createChild("col","duration");const r=RequestTimingView.calculateRequestTimeRanges(e,t.minimumBoundary()),s=r.map(e=>e.start).reduce((e,t)=>Math.min(e,t)),a=r.map(e=>e.end).reduce((e,t)=>Math.max(e,t)),o=100/(a-s);let c,m,l,d,g=0;const u=i.createChild("thead","network-timing-start"),h=u.createChild("tr"),R=h.createChild("th");R.createChild("span","network-timing-hidden-header").textContent=ls`Label`,R.scope="col";const S=h.createChild("th");S.createChild("span","network-timing-hidden-header").textContent=ls`Waterfall`,S.scope="col";const C=h.createChild("th");C.createChild("span","network-timing-hidden-header").textContent=ls`Duration`,C.scope="col";const T=u.createChild("tr").createChild("td"),p=u.createChild("tr").createChild("td");let k;T.colSpan=p.colSpan=3,T.createTextChild(Common.UIString.UIString("Queued at %s",t.formatValue(e.issueTime(),2))),p.createTextChild(Common.UIString.UIString("Started at %s",t.formatValue(e.startTime,2)));for(let e=0;e<r.length;++e){const n=r[e],u=n.name;if(u===RequestTimeRangeNames.Total){g=n.end-n.start;continue}u===RequestTimeRangeNames.Push?b(Common.UIString.UIString("Server Push")):u===RequestTimeRangeNames.Queueing?d||(d=b(ls`Resource Scheduling`)):ConnectionSetupRangeNames.has(u)?c||(c=b(Common.UIString.UIString("Connection Start"))):ServiceWorkerRangeNames.has(u)?m||(m=b(ls`Service Worker`)):l||(l=b(Common.UIString.UIString("Request/Response")));const h=o*(n.start-s);k=o*(a-n.end);const R=n.end-n.start,S=i.createChild("tr"),C=S.createChild("td");C.createTextChild(RequestTimingView._timeRangeTitle(u));const T=S.createChild("td").createChild("div","network-timing-row"),p=T.createChild("span","network-timing-bar "+u);p.style.left=h+"%",p.style.right=k+"%",p.textContent="​",UI.ARIAUtils.setAccessibleName(T,ls`Started at ${t.formatValue(n.start,2)}`);S.createChild("td").createChild("div","network-timing-bar-title").textContent=Number.secondsToString(R,!0),"serviceworker-respondwith"===n.name&&(C.classList.add("network-fetch-timing-bar-clickable"),i.createChild("tr","network-fetch-timing-bar-details"),C.setAttribute("tabindex",0),C.setAttribute("role","switch"),UI.ARIAUtils.setChecked(C,!1))}if(!e.finished){const e=i.createChild("tr").createChild("td","caution");e.colSpan=3,e.createTextChild(Common.UIString.UIString("CAUTION: request is not finished yet!"))}const w=i.createChild("tr","network-timing-footer"),v=w.createChild("td");v.colSpan=1,v.appendChild(UI.UIUtils.createDocumentationLink("network-performance/reference#timing-explanation",Common.UIString.UIString("Explanation"))),w.createChild("td"),w.createChild("td").createTextChild(Number.secondsToString(g,!0));const N=e.serverTimings,U=void 0===k?100:k,q=i.createChild("tr","network-timing-table-header").createChild("td");q.colSpan=3,q.createChild("hr","break");const I=i.createChild("tr","network-timing-table-header");if(I.createChild("td").createTextChild(Common.UIString.UIString("Server Timing")),I.createChild("td"),I.createChild("td").createTextChild(Common.UIString.UIString("TIME")),!N){const e=i.createChild("tr").createChild("td");e.colSpan=3;const t=UI.XLink.XLink.create("https://web.dev/custom-metrics/#server-timing-api",ls`the Server Timing API`);return e.appendChild(UI.UIUtils.formatLocalized("During development, you can use %s to add insights into the server-side timing of this request.",[t])),i}return N.filter(e=>"total"!==e.metric.toLowerCase()).forEach(e=>f(e,U)),N.filter(e=>"total"===e.metric.toLowerCase()).forEach(e=>f(e,U)),i;function f(e,t){const n=new Common.Color.Generator({min:0,max:360,count:36},{min:50,max:80},80),r="total"===e.metric.toLowerCase(),c=i.createChild("tr",r?"network-timing-footer":""),m=c.createChild("td","network-timing-metric"),l=e.description||e.metric;m.createTextChild(l),m.title=l;const d=c.createChild("td").createChild("div","network-timing-row");if(null===e.value)return;const g=o*(a-s-e.value/1e3);if(g>=0){const i=d.createChild("span","network-timing-bar server-timing");i.style.left=g+"%",i.style.right=t+"%",i.textContent="​",r||(i.style.backgroundColor=n.colorForID(e.metric))}c.createChild("td").createChild("div","network-timing-bar-title").textContent=Number.millisToString(e.value,!0)}function b(e){const t=i.createChild("tr","network-timing-table-header"),n=t.createChild("td");return n.createTextChild(e),UI.ARIAUtils.markAsHeading(n,2),t.createChild("td").createTextChild(""),t.createChild("td").createTextChild(ls`DURATION`),t}}_constructFetchDetailsView(){if(!this._tableElement)return;const e=this._tableElement.ownerDocument,t=e.querySelector(".network-fetch-timing-bar-details");if(!t)return;t.classList.add("network-fetch-timing-bar-details-collapsed"),self.onInvokeElement(this._tableElement,this._onToggleFetchDetails.bind(this,t));const i=new UI.TreeOutline.TreeOutlineInShadow;t.appendChild(i.element);const n=SDK.NetworkLog.NetworkLog.instance().originalRequestForURL(this._request.url());if(n){const e=SDK.RemoteObject.RemoteObject.fromLocalObject(n),t=new ObjectUI.ObjectPropertiesSection.RootElement(e);t.title=ls`Original Request`,i.appendChild(t)}const r=SDK.NetworkLog.NetworkLog.instance().originalResponseForURL(this._request.url());if(r){const e=SDK.RemoteObject.RemoteObject.fromLocalObject(r),t=new ObjectUI.ObjectPropertiesSection.RootElement(e);t.title=ls`Response Received`,i.appendChild(t)}const s=e.createElementWithClass("div","network-fetch-details-treeitem");let a=ls`Unknown`;const o=this._request.serviceWorkerResponseSource();o&&(a=this._getLocalizedResponseSourceForCode(o)),s.textContent=ls`Source of response: ${a}`;const c=new UI.TreeOutline.TreeElement(s);i.appendChild(c);const m=e.createElementWithClass("div","network-fetch-details-treeitem"),l=this._request.getResponseCacheStorageCacheName();m.textContent=l?ls`Cache storage cache name: ${l}`:ls`Cache storage cache name: Unknown`;const d=new UI.TreeOutline.TreeElement(m);i.appendChild(d);const g=this._request.getResponseRetrievalTime();if(g){const t=e.createElementWithClass("div","network-fetch-details-treeitem");t.textContent=ls`Retrieval Time: ${g}`;const n=new UI.TreeOutline.TreeElement(t);i.appendChild(n)}}_getLocalizedResponseSourceForCode(e){switch(e){case Protocol.Network.ServiceWorkerResponseSource.CacheStorage:return ls`ServiceWorker cache storage`;case Protocol.Network.ServiceWorkerResponseSource.HttpCache:return ls`From HTTP cache`;case Protocol.Network.ServiceWorkerResponseSource.Network:return ls`Network fetch`;default:return ls`Fallback code`}}_onToggleFetchDetails(e,t){if(t.target&&t.target.classList.contains("network-fetch-timing-bar-clickable")){const i="true"===t.target.getAttribute("aria-checked");t.target.setAttribute("aria-checked",!i),e.classList.toggle("network-fetch-timing-bar-details-collapsed"),e.classList.toggle("network-fetch-timing-bar-details-expanded")}}wasShown(){this._request.addEventListener(SDK.NetworkRequest.Events.TimingChanged,this._refresh,this),this._request.addEventListener(SDK.NetworkRequest.Events.FinishedLoading,this._refresh,this),this._calculator.addEventListener(Events.BoundariesChanged,this._refresh,this),this._refresh()}willHide(){this._request.removeEventListener(SDK.NetworkRequest.Events.TimingChanged,this._refresh,this),this._request.removeEventListener(SDK.NetworkRequest.Events.FinishedLoading,this._refresh,this),this._calculator.removeEventListener(Events.BoundariesChanged,this._refresh,this)}_refresh(){this._tableElement&&this._tableElement.remove(),this._tableElement=RequestTimingView.createTimingTable(this._request,this._calculator),this._tableElement.classList.add("resource-timing-table"),this.element.appendChild(this._tableElement),this._request.fetchedViaServiceWorker&&this._constructFetchDetailsView()}}export const RequestTimeRangeNames={Push:"push",Queueing:"queueing",Blocking:"blocking",Connecting:"connecting",DNS:"dns",Proxy:"proxy",Receiving:"receiving",ReceivingPush:"receiving-push",Sending:"sending",ServiceWorker:"serviceworker",ServiceWorkerPreparation:"serviceworker-preparation",ServiceWorkerRespondWith:"serviceworker-respondwith",SSL:"ssl",Total:"total",Waiting:"waiting"};export const ServiceWorkerRangeNames=new Set([RequestTimeRangeNames.ServiceWorker,RequestTimeRangeNames.ServiceWorkerPreparation,RequestTimeRangeNames.ServiceWorkerRespondWith]);export const ConnectionSetupRangeNames=new Set([RequestTimeRangeNames.Queueing,RequestTimeRangeNames.Blocking,RequestTimeRangeNames.Connecting,RequestTimeRangeNames.DNS,RequestTimeRangeNames.Proxy,RequestTimeRangeNames.SSL]);export let RequestTimeRange;