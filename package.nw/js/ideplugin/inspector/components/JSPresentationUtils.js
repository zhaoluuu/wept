import*as Bindings from"../bindings/bindings.js";import*as UI from"../ui/ui.js";import{Linkifier}from"./Linkifier.js";export function buildStackTracePreviewContents(e,t,n={}){const{stackTrace:a,contentUpdated:o,tabStops:i}=n,c=document.createElement("span");c.classList.add("monospace"),c.style.display="inline-block";const l=UI.Utils.createShadowRootWithCoreStyles(c,"components/jsUtils.css").createChild("table","stack-preview-container");let s=0,r=0;const d=[];function b(n){let a=0;for(const o of n.callFrames){r++;let c=r>30&&n.callFrames.length>31;const s=createElement("tr");s.createChild("td").textContent="\n",s.createChild("td","function-name").textContent=UI.UIUtils.beautifyFunctionName(o.functionName);const b=t.maybeLinkifyConsoleCallFrame(e,o,{tabStop:!!i});if(b){b.addEventListener("contextmenu",u.bind(null,b));const e=Linkifier.uiLocation(b);e&&Bindings.BlackboxManager.BlackboxManager.instance().isBlackboxedUISourceCode(e.uiSourceCode)&&(c=!0),s.createChild("td").textContent=" @ ",s.createChild("td").appendChild(b),d.push(b)}c&&(s.classList.add("blackboxed"),++a),l.appendChild(s)}return s+=a,n.callFrames.length===a}function u(e,t){const n=new UI.ContextMenu.ContextMenu(t);t.consume(!0);const a=Linkifier.uiLocation(e);a&&Bindings.BlackboxManager.BlackboxManager.instance().canBlackboxUISourceCode(a.uiSourceCode)&&(Bindings.BlackboxManager.BlackboxManager.instance().isBlackboxedUISourceCode(a.uiSourceCode)?n.debugSection().appendItem(ls`Stop blackboxing`,()=>Bindings.BlackboxManager.BlackboxManager.instance().unblackboxUISourceCode(a.uiSourceCode)):n.debugSection().appendItem(ls`Blackbox script`,()=>Bindings.BlackboxManager.BlackboxManager.instance().blackboxUISourceCode(a.uiSourceCode))),n.appendApplicableItems(t),n.show()}if(!a)return{element:c,links:d};b(a);let C=a.parent;for(;C;){if(!C.callFrames.length){C=C.parent;continue}const e=l.createChild("tr");e.createChild("td").textContent="\n",e.createChild("td","stack-preview-async-description").textContent=UI.UIUtils.asyncStackTraceLabel(C.description),e.createChild("td"),e.createChild("td"),b(C)&&e.classList.add("blackboxed"),C=C.parent}if(s){const e=l.createChild("tr","show-blackboxed-link");e.createChild("td").textContent="\n";const t=e.createChild("td");t.colSpan=4;const n=t.createChild("span","link");n.textContent=1===s?ls`Show 1 more frame`:ls`Show ${s} more frames`,n.addEventListener("click",()=>{l.classList.add("show-blackboxed"),o&&o()},!1)}return{element:c,links:d}}export let Options;