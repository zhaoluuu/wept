export const accelerometer={accelX:0,accelY:0,accelZ:0,setEulerAngles(t){const{alpha:s,beta:h,gamma:i}=t,c={yaw:s<=180?-s:360-s,pitch:-h,roll:i};vector.reverseRollPitchYaw(c),this.accelX=vector.x,this.accelY=vector.y,this.accelZ=vector.z}};const vector={x:0,y:0,z:-1,_toRadians:t=>t*Math.PI/180,_yaw(t){const s=this._toRadians(t),h=Math.cos(s),i=Math.sin(s),c={x:h*this.x+i*this.y,y:-i*this.x+h*this.y,z:this.z};this.x=c.x,this.y=c.y,this.z=c.z},_pitch(t){const s=this._toRadians(t),h=Math.cos(s),i=Math.sin(s),c={x:this.x,y:h*this.y+i*this.z,z:-i*this.y+h*this.z};this.x=c.x,this.y=c.y,this.z=c.z},_roll(t){const s=this._toRadians(t),h=Math.cos(s),i=Math.sin(s),c={x:h*this.x+i*this.z,y:this.y,z:-i*this.x+h*this.z};this.x=c.x,this.y=c.y,this.z=c.z},reverseRollPitchYaw(t){this.x=0,this.y=0,this.z=-1,this._yaw(-t.yaw),this._pitch(-t.pitch),this._roll(-t.roll)}};