import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{AccessibilityNode}from"./AccessibilityModel.js";import{AXAttributes,AXNativeSourceTypes,AXSourceTypes}from"./AccessibilityStrings.js";import{AccessibilitySubPane}from"./AccessibilitySubPane.js";export class AXNodeSubPane extends AccessibilitySubPane{constructor(){super(ls`Computed Properties`),this._axNode=null,this.contentElement.classList.add("ax-subpane"),this._noNodeInfo=this.createInfo(ls`No accessibility node`),this._ignoredInfo=this.createInfo(ls`Accessibility node not exposed`,"ax-ignored-info hidden"),this._treeOutline=this.createTreeOutline(),this._ignoredReasonsTree=this.createTreeOutline(),this.element.classList.add("accessibility-computed"),this.registerRequiredCSS("accessibility/accessibilityNode.css"),this._treeOutline.setFocusable(!0)}setAXNode(e){if(this._axNode===e)return;this._axNode=e;const t=this._treeOutline;t.removeChildren();const s=this._ignoredReasonsTree;if(s.removeChildren(),!e)return t.element.classList.add("hidden"),this._ignoredInfo.classList.add("hidden"),s.element.classList.add("hidden"),this._noNodeInfo.classList.remove("hidden"),void this.element.classList.add("ax-ignored-node-pane");if(e.ignored()){this._noNodeInfo.classList.add("hidden"),t.element.classList.add("hidden"),this.element.classList.add("ax-ignored-node-pane"),this._ignoredInfo.classList.remove("hidden"),s.element.classList.remove("hidden");const a=e.ignoredReasons();for(const t of a)i=t,s.appendChild(new AXNodeIgnoredReasonTreeElement(i,e));return void(s.firstChild()||s.element.classList.add("hidden"))}var i;function a(s){t.appendChild(new AXNodePropertyTreePropertyElement(s,e))}this.element.classList.remove("ax-ignored-node-pane"),this._ignoredInfo.classList.add("hidden"),s.element.classList.add("hidden"),this._noNodeInfo.classList.add("hidden"),t.element.classList.remove("hidden");for(const t of e.coreProperties())a(t);a({name:"role",value:e.role()});for(const t of e.properties())a(t);const n=t.firstChild();n&&n.select(!0,!1)}setNode(e){super.setNode(e),this._axNode=null}}export class AXNodePropertyTreeElement extends UI.TreeOutline.TreeElement{constructor(e){super(""),this._axNode=e}static createSimpleValueElement(e,t){let s;const i=Protocol.Accessibility.AXValueType;let a;e&&e!==i.ValueUndefined&&e!==i.ComputedString?(s=document.createElement("span"),s.classList.add("monospace")):s=createElement("span");return e&&StringProperties.has(e)?(a='"'+t.replace(/\n/g,"↵")+'"',s._originalTextContent=t):a=String(t),e&&e in TypeStyles&&s.classList.add(TypeStyles[e]),s.setTextContentTruncatedIfNeeded(a||""),s.title=String(t)||"",s}static createExclamationMark(e){const t=createElement("span","dt-icon-label");return t.type="smallicon-warning",t.title=e,t}appendNameElement(e){const t=createElement("span");e in AXAttributes?(t.textContent=AXAttributes[e].name,t.title=AXAttributes[e].description,t.classList.add("ax-readable-name")):(t.textContent=e,t.classList.add("ax-name"),t.classList.add("monospace")),this.listItemElement.appendChild(t)}appendValueElement(e){const t=Protocol.Accessibility.AXValueType;if(e.type===t.Idref||e.type===t.Node||e.type===t.IdrefList||e.type===t.NodeList)return void this.appendRelatedNodeListValueElement(e);if(e.sources){const t=e.sources;for(let e=0;e<t.length;e++){const s=t[e],i=new AXValueSourceTreeElement(s,this._axNode);this.appendChild(i)}this.expand()}const s=AXNodePropertyTreeElement.createSimpleValueElement(e.type,String(e.value));this.listItemElement.appendChild(s)}appendRelatedNode(e,t){const s=new SDK.DOMModel.DeferredDOMNode(this._axNode.accessibilityModel().target(),e.backendDOMNodeId),i=new AXRelatedNodeSourceTreeElement({deferredNode:s},e);this.appendChild(i)}appendRelatedNodeInline(e){const t=new SDK.DOMModel.DeferredDOMNode(this._axNode.accessibilityModel().target(),e.backendDOMNodeId),s=new AXRelatedNodeElement({deferredNode:t},e);this.listItemElement.appendChild(s.render())}appendRelatedNodeListValueElement(e){1!==e.relatedNodes.length||e.value?(e.relatedNodes.forEach(this.appendRelatedNode,this),e.relatedNodes.length<=3?this.expand():this.collapse()):this.appendRelatedNodeInline(e.relatedNodes[0])}}export const TypeStyles={attribute:"ax-value-string",boolean:"object-value-boolean",booleanOrUndefined:"object-value-boolean",computedString:"ax-readable-string",idref:"ax-value-string",idrefList:"ax-value-string",integer:"object-value-number",internalRole:"ax-internal-role",number:"ax-value-number",role:"ax-role",string:"ax-value-string",tristate:"object-value-boolean",valueUndefined:"ax-value-undefined"};export const StringProperties=new Set([Protocol.Accessibility.AXValueType.String,Protocol.Accessibility.AXValueType.ComputedString,Protocol.Accessibility.AXValueType.IdrefList,Protocol.Accessibility.AXValueType.Idref]);export class AXNodePropertyTreePropertyElement extends AXNodePropertyTreeElement{constructor(e,t){super(t),this._property=e,this.toggleOnClick=!0,this.listItemElement.classList.add("property")}onattach(){this._update()}_update(){this.listItemElement.removeChildren(),this.appendNameElement(this._property.name),this.listItemElement.createChild("span","separator").textContent=": ",this.appendValueElement(this._property.value)}}export class AXValueSourceTreeElement extends AXNodePropertyTreeElement{constructor(e,t){super(t),this._source=e}onattach(){this._update()}appendRelatedNodeWithIdref(e,t){const s=new SDK.DOMModel.DeferredDOMNode(this._axNode.accessibilityModel().target(),e.backendDOMNodeId),i=new AXRelatedNodeSourceTreeElement({deferredNode:s,idref:t},e);this.appendChild(i)}appendIDRefValueElement(e){if(null===e.value)return;const t=e.relatedNodes||[];if(""===e.value){for(const e of t){const t=e.idref||"";this.appendRelatedNodeWithIdref(e,t)}return}const s=e.value.trim().split(/\s+/);for(const e of s){const i=t.find(t=>t.idref===e);i?this.appendRelatedNodeWithIdref(i,e):1===s.length?this.listItemElement.appendChild(new Accessibility.AXRelatedNodeElement({idref:e}).render()):this.appendChild(new Accessibility.AXRelatedNodeSourceTreeElement({idref:e}))}}appendRelatedNodeListValueElement(e){const t=e.relatedNodes.length;e.type===Protocol.Accessibility.AXValueType.IdrefList||e.type===Protocol.Accessibility.AXValueType.Idref?this.appendIDRefValueElement(e):super.appendRelatedNodeListValueElement(e),t<=3?this.expand():this.collapse()}appendSourceNameElement(e){const t=createElement("span"),s=Protocol.Accessibility.AXValueSourceType,i=e.type;switch(i){case s.Attribute:case s.Placeholder:case s.RelatedElement:if(e.nativeSource){const s=e.nativeSource;t.textContent=AXNativeSourceTypes[s].name,t.title=AXNativeSourceTypes[s].description,t.classList.add("ax-readable-name");break}t.textContent=e.attribute,t.classList.add("ax-name"),t.classList.add("monospace");break;default:i in AXSourceTypes?(t.textContent=AXSourceTypes[i].name,t.title=AXSourceTypes[i].description,t.classList.add("ax-readable-name")):(console.warn(i,"not in AXSourceTypes"),t.textContent=i)}this.listItemElement.appendChild(t)}_update(){if(this.listItemElement.removeChildren(),this._source.invalid){const e=AXNodePropertyTreeElement.createExclamationMark(ls`Invalid source.`);this.listItemElement.appendChild(e),this.listItemElement.classList.add("ax-value-source-invalid")}else this._source.superseded&&this.listItemElement.classList.add("ax-value-source-unused");if(this.appendSourceNameElement(this._source),this.listItemElement.createChild("span","separator").textContent=": ",this._source.attributeValue)this.appendValueElement(this._source.attributeValue),this.listItemElement.createTextChild(" ");else if(this._source.nativeSourceValue)this.appendValueElement(this._source.nativeSourceValue),this.listItemElement.createTextChild(" "),this._source.value&&this.appendValueElement(this._source.value);else if(this._source.value)this.appendValueElement(this._source.value);else{const e=AXNodePropertyTreeElement.createSimpleValueElement(Protocol.Accessibility.AXValueType.ValueUndefined,ls`Not specified`);this.listItemElement.appendChild(e),this.listItemElement.classList.add("ax-value-source-unused")}this._source.value&&this._source.superseded&&this.listItemElement.classList.add("ax-value-source-superseded")}}export class AXRelatedNodeSourceTreeElement extends UI.TreeOutline.TreeElement{constructor(e,t){super(""),this._value=t,this._axRelatedNodeElement=new AXRelatedNodeElement(e,t),this.selectable=!0}onattach(){this.listItemElement.appendChild(this._axRelatedNodeElement.render()),this._value&&this._value.text&&this.listItemElement.appendChild(AXNodePropertyTreeElement.createSimpleValueElement(Protocol.Accessibility.AXValueType.ComputedString,this._value.text))}onenter(){return this._axRelatedNodeElement.revealNode(),!0}}export class AXRelatedNodeElement{constructor(e,t){this._deferredNode=e.deferredNode,this._idref=e.idref,this._value=t}render(){const e=createElement("span");let t;return this._deferredNode?(t=createElement("span"),e.appendChild(t),this._deferredNode.resolvePromise().then(e=>{Common.Linkifier.Linkifier.linkify(e,{preventKeyboardFocus:!0}).then(e=>t.appendChild(e))})):this._idref&&(e.classList.add("invalid"),t=AXNodePropertyTreeElement.createExclamationMark(ls`No node with this ID.`),t.createTextChild(this._idref),e.appendChild(t)),e}revealNode(){this._deferredNode.resolvePromise().then(e=>Common.Revealer.reveal(e))}}export class AXNodeIgnoredReasonTreeElement extends AXNodePropertyTreeElement{constructor(e,t){super(t),this._property=e,this._axNode=t,this.toggleOnClick=!0,this.selectable=!1}static createReasonElement(e,t){let s=null;switch(e){case"activeModalDialog":s=UI.UIUtils.formatLocalized("Element is hidden by active modal dialog: ",[]);break;case"ancestorIsLeafNode":s=UI.UIUtils.formatLocalized("Ancestor's children are all presentational: ",[]);break;case"ariaHiddenElement":{const e=createElement("span","source-code").textContent="aria-hidden";s=UI.UIUtils.formatLocalized("Element is %s.",[e]);break}case"ariaHiddenSubtree":{const e=createElement("span","source-code").textContent="aria-hidden",t=createElement("span","source-code").textContent="true";s=UI.UIUtils.formatLocalized("%s is %s on ancestor: ",[e,t]);break}case"emptyAlt":s=UI.UIUtils.formatLocalized("Element has empty alt text.",[]);break;case"emptyText":s=UI.UIUtils.formatLocalized("No text content.",[]);break;case"inertElement":s=UI.UIUtils.formatLocalized("Element is inert.",[]);break;case"inertSubtree":s=UI.UIUtils.formatLocalized("Element is in an inert subtree from ",[]);break;case"inheritsPresentation":s=UI.UIUtils.formatLocalized("Element inherits presentational role from ",[]);break;case"labelContainer":s=UI.UIUtils.formatLocalized("Part of label element: ",[]);break;case"labelFor":s=UI.UIUtils.formatLocalized("Label for ",[]);break;case"notRendered":s=UI.UIUtils.formatLocalized("Element is not rendered.",[]);break;case"notVisible":s=UI.UIUtils.formatLocalized("Element is not visible.",[]);break;case"presentationalRole":{const e=createElement("span","source-code").textContent="role="+t.role().value;s=UI.UIUtils.formatLocalized("Element has %s.",[e]);break}case"probablyPresentational":s=UI.UIUtils.formatLocalized("Element is presentational.",[]);break;case"staticTextUsedAsNameFor":s=UI.UIUtils.formatLocalized("Static text node is used as name for ",[]);break;case"uninteresting":s=UI.UIUtils.formatLocalized("Element not interesting for accessibility.",[])}return s&&s.classList.add("ax-reason"),s}onattach(){this.listItemElement.removeChildren(),this._reasonElement=AXNodeIgnoredReasonTreeElement.createReasonElement(this._property.name,this._axNode),this.listItemElement.appendChild(this._reasonElement);const e=this._property.value;e.type===Protocol.Accessibility.AXValueType.Idref&&this.appendRelatedNodeListValueElement(e)}}