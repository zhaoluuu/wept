import*as Common from"../common/common.js";import*as Diff from"../diff/diff.js";import*as Host from"../host/host.js";import*as Workspace from"../workspace/workspace.js";export class WorkspaceDiffImpl extends Common.ObjectWrapper.ObjectWrapper{constructor(e){super(),this._uiSourceCodeDiffs=new WeakMap,this._loadingUISourceCodes=new Map,this._modifiedUISourceCodes=new Set,e.addEventListener(Workspace.Workspace.Events.WorkingCopyChanged,this._uiSourceCodeChanged,this),e.addEventListener(Workspace.Workspace.Events.WorkingCopyCommitted,this._uiSourceCodeChanged,this),e.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded,this._uiSourceCodeAdded,this),e.addEventListener(Workspace.Workspace.Events.UISourceCodeRemoved,this._uiSourceCodeRemoved,this),e.addEventListener(Workspace.Workspace.Events.ProjectRemoved,this._projectRemoved,this),e.uiSourceCodes().forEach(this._updateModifiedState.bind(this))}requestDiff(e){return this._uiSourceCodeDiff(e).requestDiff()}subscribeToDiffChange(e,o,i){this._uiSourceCodeDiff(e).addEventListener(Events.DiffChanged,o,i)}unsubscribeFromDiffChange(e,o,i){this._uiSourceCodeDiff(e).removeEventListener(Events.DiffChanged,o,i)}modifiedUISourceCodes(){return Array.from(this._modifiedUISourceCodes)}isUISourceCodeModified(e){return this._modifiedUISourceCodes.has(e)||this._loadingUISourceCodes.has(e)}_uiSourceCodeDiff(e){return this._uiSourceCodeDiffs.has(e)||this._uiSourceCodeDiffs.set(e,new UISourceCodeDiff(e)),this._uiSourceCodeDiffs.get(e)}_uiSourceCodeChanged(e){const o=e.data.uiSourceCode;this._updateModifiedState(o)}_uiSourceCodeAdded(e){const o=e.data;this._updateModifiedState(o)}_uiSourceCodeRemoved(e){const o=e.data;this._removeUISourceCode(o)}_projectRemoved(e){const o=e.data;for(const e of o.uiSourceCodes())this._removeUISourceCode(e)}_removeUISourceCode(e){this._loadingUISourceCodes.delete(e);const o=this._uiSourceCodeDiffs.get(e);o&&(o._dispose=!0),this._markAsUnmodified(e)}_markAsUnmodified(e){this._uiSourceCodeProcessedForTest(),this._modifiedUISourceCodes.delete(e)&&this.dispatchEventToListeners(Events.ModifiedStatusChanged,{uiSourceCode:e,isModified:!1})}_markAsModified(e){this._uiSourceCodeProcessedForTest(),this._modifiedUISourceCodes.has(e)||(this._modifiedUISourceCodes.add(e),this.dispatchEventToListeners(Events.ModifiedStatusChanged,{uiSourceCode:e,isModified:!0}))}_uiSourceCodeProcessedForTest(){}async _updateModifiedState(e){if(this._loadingUISourceCodes.delete(e),e.project().type()!==Workspace.Workspace.projectTypes.Network)return void this._markAsUnmodified(e);if(e.isDirty())return void this._markAsModified(e);if(!e.hasCommits())return void this._markAsUnmodified(e);const o=Promise.all([this.requestOriginalContentForUISourceCode(e),e.requestContent().then(e=>e.content)]);this._loadingUISourceCodes.set(e,o);const i=await o;this._loadingUISourceCodes.get(e)===o&&(this._loadingUISourceCodes.delete(e),null!==i[0]&&null!==i[1]&&i[0]!==i[1]?this._markAsModified(e):this._markAsUnmodified(e))}requestOriginalContentForUISourceCode(e){return this._uiSourceCodeDiff(e)._originalContent()}revertToOriginal(e){return Host.userMetrics.actionTaken(Host.UserMetrics.Action.RevisionApplied),this.requestOriginalContentForUISourceCode(e).then((function(o){"string"==typeof o&&e.addRevision(o)}))}}export class UISourceCodeDiff extends Common.ObjectWrapper.ObjectWrapper{constructor(e){super(),this._uiSourceCode=e,e.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged,this._uiSourceCodeChanged,this),e.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted,this._uiSourceCodeChanged,this),this._requestDiffPromise=null,this._pendingChanges=null,this._dispose=!1}_uiSourceCodeChanged(){this._pendingChanges&&(clearTimeout(this._pendingChanges),this._pendingChanges=null),this._requestDiffPromise=null;const e=this._uiSourceCode.content(),o=!e||e.length<65536?0:UpdateTimeout;this._pendingChanges=setTimeout(function(){if(this._dispose)return;this.dispatchEventToListeners(Events.DiffChanged),this._pendingChanges=null}.bind(this),o)}requestDiff(){return this._requestDiffPromise||(this._requestDiffPromise=this._innerRequestDiff()),this._requestDiffPromise}async _originalContent(){const e=self.Persistence.networkPersistenceManager.originalContentForUISourceCode(this._uiSourceCode);if(e)return e;const o=await this._uiSourceCode.project().requestFileContent(this._uiSourceCode);return o.content||o.error||""}async _innerRequestDiff(){if(this._dispose)return null;const e=await this._originalContent();if(e.length>1048576)return null;if(this._dispose)return null;let o=this._uiSourceCode.workingCopy();return o||this._uiSourceCode.contentLoaded()||(o=(await this._uiSourceCode.requestContent()).content),o.length>1048576||this._dispose||null===o||null===e?null:Diff.Diff.DiffWrapper.lineDiff(e.split(/\r\n|\n|\r/),o.split(/\r\n|\n|\r/))}}export const Events={DiffChanged:Symbol("DiffChanged"),ModifiedStatusChanged:Symbol("ModifiedStatusChanged")};let _instance=null;export function workspaceDiff(){return _instance||(_instance=new WorkspaceDiffImpl(Workspace.Workspace.WorkspaceImpl.instance())),_instance}export class DiffUILocation{constructor(e){this.uiSourceCode=e}}export const UpdateTimeout=200;