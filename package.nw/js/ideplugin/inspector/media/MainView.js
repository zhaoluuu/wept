import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{MediaModel,PlayerEvent,ProtocolTriggers}from"./MediaModel.js";import{PlayerDetailView}from"./PlayerDetailView.js";import{PlayerListView}from"./PlayerListView.js";export class TriggerHandler{onProperty(e){}onError(e){}onMessage(e){}onEvent(e){}}export class TriggerDispatcher{onProperty(e,t){}onError(e,t){}onMessage(e,t){}onEvent(e,t){}}class PlayerDataCollection{constructor(){this._properties={},this._messages=[],this._events=[],this._errors=[]}onProperty(e){this._properties[e.name]=e.value}onError(e){this._errors.push(e)}onMessage(e){this._messages.push(e)}onEvent(e){this._events.push(e)}export(){return{properties:this._properties,messages:this._messages,events:this._events,errors:this._errors}}}class PlayerDataDownloadManager{constructor(){this._playerDataCollection=new Map}addPlayer(e){this._playerDataCollection.set(e,new PlayerDataCollection)}onProperty(e,t){this._playerDataCollection.get(e).onProperty(t)}onError(e,t){this._playerDataCollection.get(e).onError(t)}onMessage(e,t){this._playerDataCollection.get(e).onMessage(t)}onEvent(e,t){this._playerDataCollection.get(e).onEvent(t)}exportPlayerData(e){return this._playerDataCollection.get(e).export()}deletePlayer(e){this._playerDataCollection.delete(e)}}export class MainView extends UI.Panel.PanelWithSidebar{constructor(){super("Media"),this.registerRequiredCSS("media/mediaView.css"),this._detailPanels=new Map,this._deletedPlayers=new Set,this._downloadStore=new PlayerDataDownloadManager,this._sidebar=new PlayerListView(this),this._sidebar.show(this.panelSidebarElement()),SDK.SDKModel.TargetManager.instance().observeModels(MediaModel,this)}renderMainPanel(e){this._detailPanels.has(e)&&(this.splitWidget().mainWidget().detachChildWidgets(),this._detailPanels.get(e).show(this.mainElement()))}wasShown(){super.wasShown();for(const e of SDK.SDKModel.TargetManager.instance().models(MediaModel))this._addEventListeners(e)}willHide(){for(const e of SDK.SDKModel.TargetManager.instance().models(MediaModel))this._removeEventListeners(e)}modelAdded(e){this.isShowing()&&this._addEventListeners(e)}modelRemoved(e){this._removeEventListeners(e)}_addEventListeners(e){e.ensureEnabled(),e.addEventListener(ProtocolTriggers.PlayerPropertiesChanged,this._propertiesChanged,this),e.addEventListener(ProtocolTriggers.PlayerEventsAdded,this._eventsAdded,this),e.addEventListener(ProtocolTriggers.PlayerMessagesLogged,this._messagesLogged,this),e.addEventListener(ProtocolTriggers.PlayerErrorsRaised,this._errorsRaised,this),e.addEventListener(ProtocolTriggers.PlayersCreated,this._playersCreated,this)}_removeEventListeners(e){e.removeEventListener(ProtocolTriggers.PlayerPropertiesChanged,this._propertiesChanged,this),e.removeEventListener(ProtocolTriggers.PlayerEventsAdded,this._eventsAdded,this),e.removeEventListener(ProtocolTriggers.PlayerMessagesLogged,this._messagesLogged,this),e.removeEventListener(ProtocolTriggers.PlayerErrorsRaised,this._errorsRaised,this),e.removeEventListener(ProtocolTriggers.PlayersCreated,this._playersCreated,this)}_onPlayerCreated(e){this._sidebar.addMediaElementItem(e),this._detailPanels.set(e,new PlayerDetailView),this._downloadStore.addPlayer(e)}_propertiesChanged(e){for(const t of e.data.properties)this.onProperty(e.data.playerId,t)}_eventsAdded(e){for(const t of e.data.events)this.onEvent(e.data.playerId,t)}_messagesLogged(e){for(const t of e.data.messages)this.onMessage(e.data.playerId,t)}_errorsRaised(e){for(const t of e.data.errors)this.onError(e.data.playerId,t)}_shouldPropagate(e){return!this._deletedPlayers.has(e)&&this._detailPanels.has(e)}onProperty(e,t){this._shouldPropagate(e)&&(this._sidebar.onProperty(e,t),this._downloadStore.onProperty(e,t),this._detailPanels.get(e).onProperty(t))}onError(e,t){this._shouldPropagate(e)&&(this._sidebar.onError(e,t),this._downloadStore.onError(e,t),this._detailPanels.get(e).onError(t))}onMessage(e,t){this._shouldPropagate(e)&&(this._sidebar.onMessage(e,t),this._downloadStore.onMessage(e,t),this._detailPanels.get(e).onMessage(t))}onEvent(e,t){this._shouldPropagate(e)&&(this._sidebar.onEvent(e,t),this._downloadStore.onEvent(e,t),this._detailPanels.get(e).onEvent(t))}_playersCreated(e){const t=e.data;for(const e of t)this._onPlayerCreated(e)}markPlayerForDeletion(e){this._deletedPlayers.add(e),this._detailPanels.delete(e),this._sidebar.deletePlayer(e),this._downloadStore.deletePlayer(e)}markOtherPlayersForDeletion(e){for(const t of this._detailPanels.keys())t!==e&&this.markPlayerForDeletion(t)}exportPlayerData(e){const t=this._downloadStore.exportPlayerData(e),r="data:application/octet-stream,"+encodeURIComponent(JSON.stringify(t,null,2)),s=document.createElement("a");s.href=r,s.download=e+".json",s.click()}}