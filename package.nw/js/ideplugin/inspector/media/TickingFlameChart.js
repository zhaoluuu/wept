import*as Common from"../common/common.js";import*as Host from"../host/host.js";import*as PerfUI from"../perf_ui/perf_ui.js";import*as UI from"../ui/ui.js";import{PlayerEvent}from"./MediaModel.js";import{Bounds,FormatMillisecondsToSeconds}from"./TickingFlameChartHelpers.js";const defaultFont="11px "+Host.Platform.fontFamily(),defaultColor="#444",DefaultStyle={height:20,padding:2,collapsible:!1,font:defaultFont,color:"#444",backgroundColor:"rgba(100 0 0 / 10%)",nestingLevel:0,itemsHeight:20,shareHeaderLine:!1,useFirstLineForOverview:!1,useDecoratorsForOverview:!1};export const HotColorScheme=["#ffba08","#faa307","#f48c06","#e85d04","#dc2f02","#d00000","#9d0208"];export const ColdColorScheme=["#7400b8","#6930c3","#5e60ce","#5390d9","#4ea8de","#48bfe3","#56cfe1","#64dfdf"];function calculateFontColor(t){return Common.Color.Color.parse(t).hsla()[2]<.5?"#eee":"#444"}let EventHandlers,EventProperties;class Event{constructor(t,e,i={}){this._timelineData=t,this._setLive=e.setLive,this._setComplete=e.setComplete,this._updateMaxTime=e.updateMaxTime,this._selfIndex=this._timelineData.entryLevels.length,this._live=!1;const s=void 0===i.duration?0:i.duration;this._timelineData.entryLevels.push(i.level||0),this._timelineData.entryStartTimes.push(i.startTime||0),this._timelineData.entryTotalTimes.push(s),-1===s&&(this.endTime=-1),this._title=i.name||"",this._color=i.color||HotColorScheme[0],this._fontColor=calculateFontColor(this._color),this._hoverData=i.hoverData||{}}decorate(t){t.createChild("span").textContent="Name: "+this._title,t.createChild("br");const e=FormatMillisecondsToSeconds(this.startTime,2);if(this._live)t.createChild("span").textContent=`Duration: ${e} - LIVE!`;else if(isNaN(this.duration))t.createChild("span").textContent="Time: "+e;else{const i=FormatMillisecondsToSeconds(this.duration+this.startTime,2);t.createChild("span").textContent=`Duration: ${e} - ${i}`}}set endTime(t){if(-1===t)this._timelineData.entryTotalTimes[this._selfIndex]=this._setLive(this._selfIndex),this._live=!0;else{this._live=!1;const e=t-this._timelineData.entryStartTimes[this._selfIndex];this._timelineData.entryTotalTimes[this._selfIndex]=e,this._setComplete(this._selfIndex),this._updateMaxTime(t)}}get id(){return this._selfIndex}set level(t){this._timelineData.entryLevels[this._selfIndex]=t}set title(t){this._title=t}get title(){return this._title}set color(t){this._color=t,this._fontColor=calculateFontColor(this._color)}get color(){return this._color}get fontColor(){return this._fontColor}get startTime(){return this._timelineData.entryStartTimes[this._selfIndex]}get duration(){return this._timelineData.entryTotalTimes[this._selfIndex]}get live(){return this._live}}export class TickingFlameChart extends UI.Widget.VBox{constructor(){super(),this._intervalTimer=null,this._lastTimestamp=0,this._canTick=!0,this._ticking=!1,this._isShown=!1,this._bounds=new Bounds(0,1e3,3e4,1e3),this._dataProvider=new TickingFlameChartDataProvider(this._bounds,this._updateMaxTime.bind(this)),this._delegate=new TickingFlameChartDelegate,this._chartGroupExpansionSetting=Common.Settings.Settings.instance().createSetting("mediaFlameChartGroupExpansion",{}),this._chart=new PerfUI.FlameChart.FlameChart(this._dataProvider,this._delegate,this._chartGroupExpansionSetting),this._chart.disableRangeSelection(),this._chart.bindCanvasEvent("wheel",this._onScroll.bind(this)),this._chart.show(this.contentElement)}addMarker(t){t.duration=NaN,this.startEvent(t)}startEvent(t){void 0===t.duration&&(t.duration=-1);const e=t.startTime||0,i=this._dataProvider.startEvent(t);return this._updateMaxTime(e),i}addGroup(t,e){this._dataProvider.addGroup(t,e)}_updateMaxTime(t){this._bounds.pushMaxAtLeastTo(t)&&this._updateRender()}_onScroll(t){const e=Math.round(t.deltaY/50),i=t.offsetX/t.srcElement.clientWidth;e>0?this._bounds.zoomOut(e,i):this._bounds.zoomIn(-e,i),this._updateRender()}willHide(){this._isShown=!1,this._ticking&&this._stop()}wasShown(){this._isShown=!0,this._canTick&&!this._ticking&&this._start()}set canTick(t){this._canTick=t,this._ticking&&!t&&this._stop(),!this._ticking&&this._isShown&&t&&this._start()}_start(){0===this._lastTimestamp&&(this._lastTimestamp=Date.now()),null!==this._intervalTimer||this._stoppedPermanently||(this._intervalTimer=setInterval(this._updateRender.bind(this),16),this._ticking=!0)}_stop(t=!1){clearInterval(this._intervalTimer),this._intervalTimer=null,t&&(this._stoppedPermanently=!0),this._ticking=!1}_updateRender(){if(this._ticking){const t=Date.now(),e=t-this._lastTimestamp;this._lastTimestamp=t,this._bounds.addMax(e)}this._dataProvider.updateMaxTime(this._bounds),this._chart.setWindowTimes(this._bounds.low,this._bounds.high,!0),this._chart.scheduleUpdate()}}class TickingFlameChartDelegate{constructor(){}windowChanged(t,e,i){}updateRangeSelection(t,e){}updateSelectedGroup(t,e){}}class TickingFlameChartDataProvider{constructor(t,e){this._updateMaxTimeHandle=e,this._bounds=t,this._liveEvents=new Set,this._eventMap=new Map,this._timelineData=new PerfUI.FlameChart.TimelineData([],[],[],[]),this._maxLevel=0}addGroup(t,e){this._timelineData.groups.push({name:t,startLevel:this._maxLevel,expanded:!0,selectable:!1,style:DefaultStyle}),this._maxLevel+=e}startEvent(t){if(t.level=t.level||0,t.level>this._maxLevel)throw`level ${t.level} is above the maximum allowed of ${this._maxLevel}`;const e=new Event(this._timelineData,{setLive:this._setLive.bind(this),setComplete:this._setComplete.bind(this),updateMaxTime:this._updateMaxTimeHandle},t);return this._eventMap.set(e.id,e),e}_setLive(t){return this._liveEvents.add(t),this._bounds.max}_setComplete(t){this._liveEvents.delete(t)}updateMaxTime(t){this._bounds=t;for(const t of this._liveEvents.entries())this._eventMap.get(t[0]).endTime=-1}maxStackDepth(){return this._maxLevel+1}timelineData(){return this._timelineData}minimumBoundary(){return this._bounds.low}totalTime(){return this._bounds.high}entryColor(t){return this._eventMap.get(t).color}textColor(t){return this._eventMap.get(t).fontColor}entryTitle(t){return this._eventMap.get(t).title}entryFont(t){return defaultFont}decorateEntry(t,e,i,s,n,a,o,r,l){return!1}forceDecoration(t){return!1}prepareHighlightedEntryInfo(t){const e=createElement("div");return this._eventMap.get(t).decorate(e),e}formatValue(t,e){return t+=Math.round(this._bounds.low),this._bounds.range<2800?FormatMillisecondsToSeconds(t,2):this._bounds.range<3e4?FormatMillisecondsToSeconds(t,1):FormatMillisecondsToSeconds(t,0)}canJumpToEntry(t){return!1}navStartTimes(){return new Map}}