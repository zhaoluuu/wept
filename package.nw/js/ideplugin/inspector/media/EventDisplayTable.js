import*as DataGrid from"../data_grid/data_grid.js";import*as UI from"../ui/ui.js";import{PlayerEvent}from"./MediaModel.js";export let EventDisplayColumnConfig;export const MediaEventColumnKeys={Timestamp:"displayTimestamp",Event:"event",Value:"value"};export class EventNode extends DataGrid.DataGrid.DataGridNode{constructor(e){super(e,!1),this._expandableElement=null}createCell(e){const t=this.createTD(e),a=this.data[e];if(e===MediaEventColumnKeys.Value){const e=t.createChild("div","event-display-table-contents-json-wrapper");this._expandableElement=new SourceFrame.JSONView(new SourceFrame.ParsedJSON(a,"",""),!0),this._expandableElement.markAsRoot(),this._expandableElement.show(e)}else t.classList.add("event-display-table-basic-text-table-entry"),t.createTextChild(a);return t}}export class PlayerEventsView extends UI.Widget.VBox{constructor(){super(),this.registerRequiredCSS("media/eventDisplayTable.css"),this.contentElement.classList.add("event-display-table-contents-table-container"),this._dataGrid=this._createDataGrid([{id:MediaEventColumnKeys.Timestamp,title:ls`Timestamp`,weight:1,sortingFunction:DataGrid.SortableDataGrid.SortableDataGrid.NumericComparator.bind(null,MediaEventColumnKeys.Timestamp)},{id:MediaEventColumnKeys.Event,title:ls`Event Name`,weight:2},{id:MediaEventColumnKeys.Value,title:ls`Value`,weight:7}]),this._firstEventTime=0,this._dataGrid.setStriped(!0),this._dataGrid.asWidget().show(this.contentElement)}_createDataGrid(e){const t=[];for(const a of e)t.push(PlayerEventsView._convertToGridDescriptor(a));const a=new DataGrid.DataGrid.DataGridImpl({displayName:ls`Event Display`,columns:t});return a.asWidget().contentElement.classList.add("no-border-top-datagrid"),a}onEvent(e){0===this._firstEventTime&&(this._firstEventTime=e.timestamp);const t=(e=this._subtractFirstEventTime(e)).value;try{const a=JSON.parse(t);e.event=a.event,delete a.event,e.value=a;const i=new EventNode(e),s=this._dataGrid.scrollContainer,r=s.scrollTop===s.scrollHeight-s.offsetHeight;this._dataGrid.rootNode().appendChild(i),r&&(s.scrollTop=s.scrollHeight)}catch(e){}}_subtractFirstEventTime(e){return e.displayTimestamp=(e.timestamp-this._firstEventTime).toFixed(3),e}static _convertToGridDescriptor(e){return{id:e.id,title:e.title,sortable:e.sortable,weight:e.weight||0,sort:DataGrid.DataGrid.Order.Ascending}}}