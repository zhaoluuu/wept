import*as Bindings from"../bindings/bindings.js";import*as ColorPicker from"../color_picker/color_picker.js";import*as Common from"../common/common.js";import*as InlineEditor from"../inline_editor/inline_editor.js";import*as UI from"../ui/ui.js";import{StylePropertyTreeElement}from"./StylePropertyTreeElement.js";export class BezierPopoverIcon{constructor(e,t,r){this._treeElement=e,this._swatchPopoverHelper=t,this._swatch=r,this._swatch.iconElement().title=Common.UIString.UIString("Open cubic bezier editor."),this._swatch.iconElement().addEventListener("click",this._iconClick.bind(this),!1),this._swatch.iconElement().addEventListener("mousedown",e=>e.consume(),!1),this._boundBezierChanged=this._bezierChanged.bind(this),this._boundOnScroll=this._onScroll.bind(this)}_iconClick(e){if(e.consume(!0),this._swatchPopoverHelper.isShowing())return void this._swatchPopoverHelper.hide(!0);this._bezierEditor=new InlineEditor.BezierEditor.BezierEditor;let t=UI.Geometry.CubicBezier.parse(this._swatch.bezierText());t||(t=UI.Geometry.CubicBezier.parse("linear")),this._bezierEditor.setBezier(t),this._bezierEditor.addEventListener(InlineEditor.BezierEditor.Events.BezierChanged,this._boundBezierChanged),this._swatchPopoverHelper.show(this._bezierEditor,this._swatch.iconElement(),this._onPopoverHidden.bind(this)),this._scrollerElement=this._swatch.enclosingNodeOrSelfWithClass("style-panes-wrapper"),this._scrollerElement&&this._scrollerElement.addEventListener("scroll",this._boundOnScroll,!1),this._originalPropertyText=this._treeElement.property.propertyText,this._treeElement.parentPane().setEditingStyle(!0);const r=Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(this._treeElement.property,!1);r&&Common.Revealer.reveal(r,!0)}_bezierChanged(e){this._swatch.setBezierText(e.data),this._treeElement.applyStyleText(this._treeElement.renderedPropertyText(),!1)}_onScroll(e){this._swatchPopoverHelper.reposition()}_onPopoverHidden(e){this._scrollerElement&&this._scrollerElement.removeEventListener("scroll",this._boundOnScroll,!1),this._bezierEditor.removeEventListener(InlineEditor.BezierEditor.Events.BezierChanged,this._boundBezierChanged),delete this._bezierEditor;const t=e?this._treeElement.renderedPropertyText():this._originalPropertyText;this._treeElement.applyStyleText(t,!0),this._treeElement.parentPane().setEditingStyle(!1),delete this._originalPropertyText}}export class ColorSwatchPopoverIcon{constructor(e,t,r){this._treeElement=e,this._treeElement[ColorSwatchPopoverIcon._treeElementSymbol]=this,this._swatchPopoverHelper=t,this._swatch=r;const o=Common.UIString.UIString("Shift + Click to change color format.");this._swatch.iconElement().title=Common.UIString.UIString("Open color picker. %s",o),this._swatch.iconElement().addEventListener("click",this._iconClick.bind(this)),this._swatch.iconElement().addEventListener("mousedown",e=>e.consume(),!1),this._contrastInfo=null,this._boundSpectrumChanged=this._spectrumChanged.bind(this),this._boundOnScroll=this._onScroll.bind(this)}_generateCSSVariablesPalette(){const e=this._treeElement.matchedStyles(),t=this._treeElement.property.ownerStyle,r=e.availableCSSVariables(t),o=[],i=[];for(const s of r){if(s===this._treeElement.property.name)continue;const r=e.computeCSSVariable(t,s);if(!r)continue;Common.Color.Color.parse(r)&&(o.push(r),i.push(s))}return{title:"CSS Variables",mutable:!1,matchUserFormat:!0,colors:o,colorNames:i}}static forTreeElement(e){return e[ColorSwatchPopoverIcon._treeElementSymbol]||null}setContrastInfo(e){this._contrastInfo=e}_iconClick(e){e.consume(!0),this.showPopover()}showPopover(){if(this._swatchPopoverHelper.isShowing())return void this._swatchPopoverHelper.hide(!0);const e=this._swatch.color();let t=this._swatch.format();t===Common.Color.Format.Original&&(t=e.format()),this._spectrum=new ColorPicker.Spectrum.Spectrum(this._contrastInfo),this._spectrum.setColor(e,t),this._spectrum.addPalette(this._generateCSSVariablesPalette()),this._spectrum.addEventListener(ColorPicker.Spectrum.Events.SizeChanged,this._spectrumResized,this),this._spectrum.addEventListener(ColorPicker.Spectrum.Events.ColorChanged,this._boundSpectrumChanged),this._swatchPopoverHelper.show(this._spectrum,this._swatch.iconElement(),this._onPopoverHidden.bind(this)),this._scrollerElement=this._swatch.enclosingNodeOrSelfWithClass("style-panes-wrapper"),this._scrollerElement&&this._scrollerElement.addEventListener("scroll",this._boundOnScroll,!1),this._originalPropertyText=this._treeElement.property.propertyText,this._treeElement.parentPane().setEditingStyle(!0);const r=Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(this._treeElement.property,!1);r&&Common.Revealer.reveal(r,!0)}_spectrumResized(e){this._swatchPopoverHelper.reposition()}_spectrumChanged(e){const t=Common.Color.Color.parse(e.data);if(!t)return;this._swatch.setColor(t);const r=this._spectrum.colorName();r&&r.startsWith("--")&&this._swatch.setText(`var(${r})`),this._treeElement.applyStyleText(this._treeElement.renderedPropertyText(),!1)}_onScroll(e){this._swatchPopoverHelper.reposition()}_onPopoverHidden(e){this._scrollerElement&&this._scrollerElement.removeEventListener("scroll",this._boundOnScroll,!1),this._spectrum.removeEventListener(ColorPicker.Spectrum.Events.ColorChanged,this._boundSpectrumChanged),delete this._spectrum;const t=e?this._treeElement.renderedPropertyText():this._originalPropertyText;this._treeElement.applyStyleText(t,!0),this._treeElement.parentPane().setEditingStyle(!1),delete this._originalPropertyText}}ColorSwatchPopoverIcon._treeElementSymbol=Symbol("ColorSwatchPopoverIcon._treeElementSymbol");export class ShadowSwatchPopoverHelper{constructor(e,t,r){this._treeElement=e,this._treeElement[ShadowSwatchPopoverHelper._treeElementSymbol]=this,this._swatchPopoverHelper=t,this._shadowSwatch=r,this._iconElement=r.iconElement(),this._iconElement.title=Common.UIString.UIString("Open shadow editor."),this._iconElement.addEventListener("click",this._iconClick.bind(this),!1),this._iconElement.addEventListener("mousedown",e=>e.consume(),!1),this._boundShadowChanged=this._shadowChanged.bind(this),this._boundOnScroll=this._onScroll.bind(this)}static forTreeElement(e){return e[ShadowSwatchPopoverHelper._treeElementSymbol]||null}_iconClick(e){e.consume(!0),this.showPopover()}showPopover(){if(this._swatchPopoverHelper.isShowing())return void this._swatchPopoverHelper.hide(!0);this._cssShadowEditor=new InlineEditor.CSSShadowEditor.CSSShadowEditor,this._cssShadowEditor.setModel(this._shadowSwatch.model()),this._cssShadowEditor.addEventListener(InlineEditor.CSSShadowEditor.Events.ShadowChanged,this._boundShadowChanged),this._swatchPopoverHelper.show(this._cssShadowEditor,this._iconElement,this._onPopoverHidden.bind(this)),this._scrollerElement=this._iconElement.enclosingNodeOrSelfWithClass("style-panes-wrapper"),this._scrollerElement&&this._scrollerElement.addEventListener("scroll",this._boundOnScroll,!1),this._originalPropertyText=this._treeElement.property.propertyText,this._treeElement.parentPane().setEditingStyle(!0);const e=Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(this._treeElement.property,!1);e&&Common.Revealer.reveal(e,!0)}_shadowChanged(e){this._shadowSwatch.setCSSShadow(e.data),this._treeElement.applyStyleText(this._treeElement.renderedPropertyText(),!1)}_onScroll(e){this._swatchPopoverHelper.reposition()}_onPopoverHidden(e){this._scrollerElement&&this._scrollerElement.removeEventListener("scroll",this._boundOnScroll,!1),this._cssShadowEditor.removeEventListener(InlineEditor.CSSShadowEditor.Events.ShadowChanged,this._boundShadowChanged),delete this._cssShadowEditor;const t=e?this._treeElement.renderedPropertyText():this._originalPropertyText;this._treeElement.applyStyleText(t,!0),this._treeElement.parentPane().setEditingStyle(!1),delete this._originalPropertyText}}ShadowSwatchPopoverHelper._treeElementSymbol=Symbol("ShadowSwatchPopoverHelper._treeElementSymbol");