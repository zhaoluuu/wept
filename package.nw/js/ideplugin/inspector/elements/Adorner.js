import*as Common from"../common/common.js";import*as UI from"../ui/ui.js";const ls=Common.ls;export const AdornerCategories={Security:"Security",Layout:"Layout",Default:"Default"};Object.freeze(AdornerCategories);const template=document.createElement("template");template.innerHTML='\n  <style>\n    :host {\n      display: inline-flex;\n    }\n\n    :host(.hidden) {\n      display: none;\n    }\n\n    :host(.clickable) {\n      cursor: pointer;\n    }\n\n    :host(:focus) slot {\n      border: var(--adorner-border-focus, 1px solid #1a73e8);\n    }\n\n    :host([aria-pressed=true]) slot {\n      color: var(--adorner-text-color-active, #ffffff);\n      background-color: var(--adorner-background-color-active, #1a73e8);\n    }\n\n    slot {\n      display: inline-flex;\n      box-sizing: border-box;\n      height: 13px;\n      padding: 0 6px;\n      font-size: 8.5px;\n      color: var(--adorner-text-color, #3c4043);\n      background-color: var(--adorner-background-color, #f1f3f4);\n      border: var(--adorner-border, 1px solid #dadce0);\n      border-radius: var(--adorner-border-radius, 10px);\n    }\n\n    ::slotted(*) {\n      height: 10px;\n    }\n  </style>\n  <slot name="content"></slot>\n';export class Adorner extends HTMLElement{static create(e,t,o={}){const{category:n=AdornerCategories.Default}=o,r=document.createElement("devtools-adorner");return e.slot="content",r.append(e),r.name=t,r.category=n,r}constructor(){super();this.attachShadow({mode:"open"}).appendChild(template.content.cloneNode(!0)),this.name="",this.category=AdornerCategories.Default,this._isToggle=!1,this._ariaLabelDefault=ls`adorner`,this._ariaLabelActive=ls`adorner active`}connectedCallback(){this.getAttribute("aria-label")||UI.ARIAUtils.setAccessibleName(this,ls`${this.name} adorner`)}isActive(){return"true"===this.getAttribute("aria-pressed")}toggle(e){if(!this._isToggle)return;const t=void 0===e?!this.isActive():e;UI.ARIAUtils.setPressed(this,t),UI.ARIAUtils.setAccessibleName(this,t?this._ariaLabelActive:this._ariaLabelDefault)}show(){this.classList.remove("hidden")}hide(){this.classList.add("hidden")}addInteraction(e,t={}){const{isToggle:o=!1,shouldPropagateOnKeydown:n=!1,ariaLabelDefault:r,ariaLabelActive:s}=t;this._isToggle=o,r&&(this._ariaLabelDefault=r,UI.ARIAUtils.setAccessibleName(this,r)),o&&(this.addEventListener("click",()=>{this.toggle()}),s&&(this._ariaLabelActive=s),this.toggle(!1)),this.addEventListener("click",e),this.classList.add("clickable"),UI.ARIAUtils.markAsButton(this),this.tabIndex=0,this.addEventListener("keydown",e=>{"Enter"!==e.code&&"Space"!==e.code||(this.click(),n||e.stopPropagation())})}}self.customElements.define("devtools-adorner",Adorner);