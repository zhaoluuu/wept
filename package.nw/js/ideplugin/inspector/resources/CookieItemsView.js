import*as BrowserSDK from"../browser_sdk/browser_sdk.js";import*as Common from"../common/common.js";import*as CookieTable from"../cookie_table/cookie_table.js";import*as Root from"../root/root.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{StorageItemsView}from"./StorageItemsView.js";export class CookieItemsView extends StorageItemsView{constructor(e,t){super(Common.UIString.UIString("Cookies"),"cookiesPanel"),this.registerRequiredCSS("resources/cookieItemsView.css"),this.element.classList.add("storage-view"),this._model=e,this._cookieDomain=t,this._totalSize=0,this._cookiesTable=new CookieTable.CookiesTable.CookiesTable(!1,this._saveCookie.bind(this),this.refreshItems.bind(this),this._handleCookieSelected.bind(this),this._deleteCookie.bind(this)),this._cookiesTable.setMinimumSize(0,50),this._splitWidget=new UI.SplitWidget.SplitWidget(!1,!0,"cookieItemsSplitViewState"),this._splitWidget.show(this.element),this._previewPanel=new UI.Widget.VBox;const s=this._previewPanel.element.createChild("div","preview-panel-resizer");this._splitWidget.setMainWidget(this._cookiesTable),this._splitWidget.setSidebarWidget(this._previewPanel),this._splitWidget.installResizer(s),this._onlyIssuesFilterUI=new UI.Toolbar.ToolbarCheckbox(ls`Only show cookies with an issue`,ls`Only show cookies which have an associated issue`,()=>{this._updateWithCookies(this._allCookies)}),Root.Runtime.experiments.isEnabled("issuesPane")?this.appendToolbarItem(this._onlyIssuesFilterUI):this._onlyIssuesFilterUI.setChecked(!1),this._refreshThrottler=new Common.Throttler.Throttler(300),this._eventDescriptors=[],this._preview=null,this._previewValue=null,this._allCookies=[],this.setCookiesDomain(e,t)}setCookiesDomain(e,t){this._model=e,this._cookieDomain=t,this.refreshItems(),Common.EventTarget.EventTarget.removeEventListeners(this._eventDescriptors);const s=e.target().model(SDK.NetworkManager.NetworkManager);this._eventDescriptors=[s.addEventListener(SDK.NetworkManager.Events.ResponseReceived,this._onResponseReceived,this),s.addEventListener(SDK.NetworkManager.Events.LoadingFinished,this._onLoadingFinished,this)],this._showPreview(null,null)}_showPreview(e,t){this._preview&&this._previewValue===t||(this._preview&&this._preview.detach(),e||(e=new UI.EmptyWidget.EmptyWidget(ls`Select a cookie to preview its value`)).element.classList.add("cookie-value"),this._previewValue=t,this._preview=e,e.show(this._previewPanel.contentElement))}_handleCookieSelected(){const e=this._cookiesTable.selectedCookie();if(this.setCanDeleteSelected(!!e),!e)return void this._showPreview(null,null);const t=document.createElement("div");t.classList.add("cookie-value"),t.textContent=e.value(),t.addEventListener("dblclick",(function(){const e=document.createRange();e.selectNode(t),window.getSelection().removeAllRanges(),window.getSelection().addRange(e)}));const s=new UI.Widget.VBox;s.contentElement.appendChild(t),this._showPreview(s,e)}async _saveCookie(e,t){return t&&e.key()!==t.key()&&await this._model.deleteCookie(t),this._model.saveCookie(e)}_deleteCookie(e,t){this._model.deleteCookie(e).then(t)}_updateWithCookies(e){this._allCookies=e,this._totalSize=e.reduce((e,t)=>e+t.size(),0);const t=Common.ParsedURL.ParsedURL.fromString(this._cookieDomain),s=t?t.host:"";this._cookiesTable.setCookieDomain(s);const i=this.filter(e,e=>`${e.name()} ${e.value()} ${e.domain()}`);this._cookiesTable.setCookies(i,this._model.getCookieToBlockedReasonsMap()),this.setCanFilter(!0),this.setCanDeleteAll(!0),this.setCanDeleteSelected(!!this._cookiesTable.selectedCookie())}filter(e,t){return super.filter(e,t).filter(e=>!this._onlyIssuesFilterUI.checked()||e instanceof SDK.Cookie.Cookie&&BrowserSDK.RelatedIssue.hasIssues(e))}deleteAllItems(){this._showPreview(null,null),this._model.clear(this._cookieDomain).then(()=>this.refreshItems())}deleteSelectedItem(){const e=this._cookiesTable.selectedCookie();e&&(this._showPreview(null,null),this._model.deleteCookie(e).then(()=>this.refreshItems()))}refreshItems(){this._model.getCookiesForDomain(this._cookieDomain).then(this._updateWithCookies.bind(this))}refreshItemsThrottled(){this._refreshThrottler.schedule(()=>Promise.resolve(this.refreshItems()))}_onResponseReceived(){this.refreshItemsThrottled()}_onLoadingFinished(){this.refreshItemsThrottled()}}