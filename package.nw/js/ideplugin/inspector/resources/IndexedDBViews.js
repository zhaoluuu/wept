import*as Common from"../common/common.js";import*as DataGrid from"../data_grid/data_grid.js";import*as ObjectUI from"../object_ui/object_ui.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{Database,DatabaseId,Entry,Index,IndexedDBModel,ObjectStore,ObjectStoreMetadata}from"./IndexedDBModel.js";export class IDBDatabaseView extends UI.Widget.VBox{constructor(e,t){super(),this._model=e;const a=t?t.databaseId.name:ls`Loading…`;this._reportView=new UI.ReportView.ReportView(a),this._reportView.show(this.contentElement);const s=this._reportView.appendSection("");this._securityOriginElement=s.appendField(ls`Security origin`),this._versionElement=s.appendField(ls`Version`),this._objectStoreCountElement=s.appendField(ls`Object stores`);const i=this._reportView.appendSection("").appendRow();this._clearButton=UI.UIUtils.createTextButton(ls`Delete database`,()=>this._deleteDatabase(),ls`Delete database`),i.appendChild(this._clearButton),this._refreshButton=UI.UIUtils.createTextButton(ls`Refresh database`,()=>this._refreshDatabaseButtonClicked(),ls`Refresh database`),i.appendChild(this._refreshButton),t&&this.update(t)}_refreshDatabase(){this._securityOriginElement.textContent=this._database.databaseId.securityOrigin,this._versionElement.textContent=this._database.version,this._objectStoreCountElement.textContent=Object.keys(this._database.objectStores).length}_refreshDatabaseButtonClicked(){this._model.refreshDatabase(this._database.databaseId)}update(e){this._database=e,this._reportView.setTitle(this._database.databaseId.name),this._refreshDatabase(),this._updatedForTests()}_updatedForTests(){}async _deleteDatabase(){await UI.UIUtils.ConfirmDialog.show(Common.UIString.UIString('Please confirm delete of "%s" database.',this._database.databaseId.name),this.element)&&this._model.deleteDatabase(this._database.databaseId)}}export class IDBDataView extends UI.View.SimpleView{constructor(e,t,a,s,i){super(Common.UIString.UIString("IDB")),this.registerRequiredCSS("resources/indexedDBViews.css"),this._model=e,this._databaseId=t,this._isIndex=!!s,this._refreshObjectStoreCallback=i,this.element.classList.add("indexed-db-data-view","storage-view"),this._refreshButton=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Refresh"),"largeicon-refresh"),this._refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,this._refreshButtonClicked,this),this._deleteSelectedButton=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Delete selected"),"largeicon-delete"),this._deleteSelectedButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,e=>{this._deleteButtonClicked(null)}),this._clearButton=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Clear object store"),"largeicon-clear"),this._clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,e=>{this._clearButtonClicked(e)},this),this._needsRefresh=new UI.Toolbar.ToolbarItem(UI.UIUtils.createIconLabel(Common.UIString.UIString("Data may be stale"),"smallicon-warning")),this._needsRefresh.setVisible(!1),this._needsRefresh.setTitle(Common.UIString.UIString("Some entries may have been modified")),this._createEditorToolbar(),this._pageSize=50,this._skipCount=0,this.update(a,s),this._entries=[]}_createDataGrid(){const e=this._isIndex?this._index.keyPath:this._objectStore.keyPath,t=[];t.push({id:"number",title:Common.UIString.UIString("#"),sortable:!1,width:"50px"}),t.push({id:"key",titleDOMFragment:this._keyColumnHeaderFragment(Common.UIString.UIString("Key"),e),sortable:!1}),this._isIndex&&t.push({id:"primaryKey",titleDOMFragment:this._keyColumnHeaderFragment(Common.UIString.UIString("Primary key"),this._objectStore.keyPath),sortable:!1}),t.push({id:"value",title:Common.UIString.UIString("Value"),sortable:!1});const a=new DataGrid.DataGrid.DataGridImpl({displayName:ls`Indexed DB`,columns:t,deleteCallback:this._deleteButtonClicked.bind(this),refreshCallback:this._updateData.bind(this,!0)});return a.setStriped(!0),a.addEventListener(DataGrid.DataGrid.Events.SelectedNode,e=>this._updateToolbarEnablement(),this),a}_keyColumnHeaderFragment(e,t){const a=createDocumentFragment();if(a.createTextChild(e),null===t)return a;if(a.createTextChild(" ("+Common.UIString.UIString("Key path: ")),Array.isArray(t)){a.createTextChild("[");for(let e=0;e<t.length;++e)0!==e&&a.createTextChild(", "),a.appendChild(this._keyPathStringFragment(t[e]));a.createTextChild("]")}else{const e=t;a.appendChild(this._keyPathStringFragment(e))}return a.createTextChild(")"),a}_keyPathStringFragment(e){const t=createDocumentFragment();t.createTextChild('"');return t.createChild("span","source-code indexed-db-key-path").textContent=e,t.createTextChild('"'),t}_createEditorToolbar(){const e=new UI.Toolbar.Toolbar("data-view-toolbar",this.element);e.appendToolbarItem(this._refreshButton),e.appendToolbarItem(new UI.Toolbar.ToolbarSeparator),this._pageBackButton=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Show previous page"),"largeicon-play-back"),this._pageBackButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,this._pageBackButtonClicked,this),e.appendToolbarItem(this._pageBackButton),this._pageForwardButton=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Show next page"),"largeicon-play"),this._pageForwardButton.setEnabled(!1),this._pageForwardButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,this._pageForwardButtonClicked,this),e.appendToolbarItem(this._pageForwardButton),this._keyInput=new UI.Toolbar.ToolbarInput(ls`Start from key`,"",.5),this._keyInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged,this._updateData.bind(this,!1)),e.appendToolbarItem(this._keyInput),e.appendToolbarItem(new UI.Toolbar.ToolbarSeparator),e.appendToolbarItem(this._clearButton),e.appendToolbarItem(this._deleteSelectedButton),e.appendToolbarItem(this._needsRefresh)}_pageBackButtonClicked(e){this._skipCount=Math.max(0,this._skipCount-this._pageSize),this._updateData(!1)}_pageForwardButtonClicked(e){this._skipCount=this._skipCount+this._pageSize,this._updateData(!1)}_populateContextMenu(e,t){const a=t;a.valueObjectPresentation&&(e.revealSection().appendItem(ls`Expand Recursively`,()=>{a.valueObjectPresentation.objectTreeElement().expandRecursively()}),e.revealSection().appendItem(ls`Collapse`,()=>{a.valueObjectPresentation.objectTreeElement().collapse()}))}refreshData(){this._updateData(!0)}update(e,t){this._objectStore=e,this._index=t,this._dataGrid&&this._dataGrid.asWidget().detach(),this._dataGrid=this._createDataGrid(),this._dataGrid.setRowContextMenuCallback(this._populateContextMenu.bind(this)),this._dataGrid.asWidget().show(this.element),this._skipCount=0,this._updateData(!0)}_parseKey(e){let t;try{t=JSON.parse(e)}catch(a){t=e}return t}_updateData(e){const t=this._parseKey(this._keyInput.value()),a=this._pageSize;let s=this._skipCount,i=this._dataGrid.selectedNode?this._dataGrid.selectedNode.data.number:0;if(i=Math.max(i,this._skipCount),this._refreshButton.setEnabled(!1),this._clearButton.setEnabled(!this._isIndex),!e&&this._lastKey===t&&this._lastPageSize===a&&this._lastSkipCount===s)return;function r(e,t){this._refreshButton.setEnabled(!0),this.clear(),this._entries=e;let a=null;for(let t=0;t<e.length;++t){const r={};r.number=t+s,r.key=e[t].key,r.primaryKey=e[t].primaryKey,r.value=e[t].value;const o=new IDBDataGridNode(r);this._dataGrid.rootNode().appendChild(o),r.number<=i&&(a=o)}a&&a.select(),this._pageBackButton.setEnabled(!!s),this._pageForwardButton.setEnabled(t),this._needsRefresh.setVisible(!1),this._updateToolbarEnablement(),this._updatedDataForTests()}this._lastKey===t&&this._lastPageSize===a||(s=0,this._skipCount=0),this._lastKey=t,this._lastPageSize=a,this._lastSkipCount=s;const o=t?window.IDBKeyRange.lowerBound(t):null;this._isIndex?this._model.loadIndexData(this._databaseId,this._objectStore.name,this._index.name,o,s,a,r.bind(this)):this._model.loadObjectStoreData(this._databaseId,this._objectStore.name,o,s,a,r.bind(this)),this._model.getMetadata(this._databaseId,this._objectStore).then(this._updateSummaryBar.bind(this))}_updateSummaryBar(e){if(this._summaryBarElement||(this._summaryBarElement=this.element.createChild("div","object-store-summary-bar")),this._summaryBarElement.removeChildren(),!e)return;const t=this._summaryBarElement.createChild("span");t.textContent=ls`Total entries: ${String(e.entriesCount)}`,this._objectStore.autoIncrement&&(t.textContent+=" ❘ ",t.textContent+=ls`Key generator value: ${String(e.keyGeneratorValue)}`)}_updatedDataForTests(){}_refreshButtonClicked(e){this._updateData(!0)}async _clearButtonClicked(e){this._clearButton.setEnabled(!1),await this._model.clearObjectStore(this._databaseId,this._objectStore.name),this._clearButton.setEnabled(!0),this._updateData(!0)}markNeedsRefresh(){this._needsRefresh.setVisible(!0)}async _deleteButtonClicked(e){if(!e&&!(e=this._dataGrid.selectedNode))return;const t=(this._isIndex?e.data.primaryKey:e.data.key).value;await this._model.deleteEntries(this._databaseId,this._objectStore.name,window.IDBKeyRange.only(t)),this._refreshObjectStoreCallback()}clear(){this._dataGrid.rootNode().removeChildren(),this._entries=[]}_updateToolbarEnablement(){const e=!this._dataGrid||0===this._dataGrid.rootNode().children.length;this._deleteSelectedButton.setEnabled(!e&&null!==this._dataGrid.selectedNode)}}export class IDBDataGridNode extends DataGrid.DataGrid.DataGridNode{constructor(e){super(e,!1),this.selectable=!0,this.valueObjectPresentation=null}createCell(e){const t=super.createCell(e),a=this.data[e];switch(e){case"value":{t.removeChildren();const e=ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.defaultObjectPropertiesSection(a,void 0,!0,!0);t.appendChild(e.element),this.valueObjectPresentation=e;break}case"key":case"primaryKey":{t.removeChildren();const e=ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.defaultObjectPresentation(a,void 0,!0,!0);t.appendChild(e);break}}return t}}