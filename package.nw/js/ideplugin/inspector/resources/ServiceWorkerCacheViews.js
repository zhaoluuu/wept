import*as Common from"../common/common.js";import*as DataGrid from"../data_grid/data_grid.js";import*as Network from"../network/network.js";import*as Platform from"../platform/platform.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";export class ServiceWorkerCacheView extends UI.View.SimpleView{constructor(e,t){super(Common.UIString.UIString("Cache")),this.registerRequiredCSS("resources/serviceWorkerCacheViews.css"),this._model=e,this._entriesForTest=null,this.element.classList.add("service-worker-cache-data-view"),this.element.classList.add("storage-view");const s=new UI.Toolbar.Toolbar("data-view-toolbar",this.element);this._splitWidget=new UI.SplitWidget.SplitWidget(!1,!1),this._splitWidget.show(this.element),this._previewPanel=new UI.Widget.VBox;const r=this._previewPanel.element.createChild("div","cache-preview-panel-resizer");this._splitWidget.setMainWidget(this._previewPanel),this._splitWidget.installResizer(r),this._preview=null,this._cache=t,this._dataGrid=null,this._refreshThrottler=new Common.Throttler.Throttler(300),this._refreshButton=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Refresh"),"largeicon-refresh"),this._refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,this._refreshButtonClicked,this),s.appendToolbarItem(this._refreshButton),this._deleteSelectedButton=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Delete Selected"),"largeicon-delete"),this._deleteSelectedButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,e=>{this._deleteButtonClicked(null)}),s.appendToolbarItem(this._deleteSelectedButton);const i=new UI.Toolbar.ToolbarInput(ls`Filter by Path`,"",1);s.appendToolbarItem(i);const a=new Common.Throttler.Throttler(300);this._entryPathFilter="",i.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged,()=>{a.schedule(()=>(this._entryPathFilter=i.value(),this._updateData(!0)))}),this._returnCount=null,this._summaryBarElement=null,this._loadingPromise=null,this.update(t)}_resetDataGrid(){this._dataGrid&&this._dataGrid.asWidget().detach(),this._dataGrid=this._createDataGrid();const e=this._dataGrid.asWidget();this._splitWidget.setSidebarWidget(e),e.setMinimumSize(0,250)}wasShown(){this._model.addEventListener(SDK.ServiceWorkerCacheModel.Events.CacheStorageContentUpdated,this._cacheContentUpdated,this),this._updateData(!0)}willHide(){this._model.removeEventListener(SDK.ServiceWorkerCacheModel.Events.CacheStorageContentUpdated,this._cacheContentUpdated,this)}_showPreview(e){e&&this._preview===e||(this._preview&&this._preview.detach(),e||(e=new UI.EmptyWidget.EmptyWidget(Common.UIString.UIString("Select a cache entry above to preview"))),this._preview=e,this._preview.show(this._previewPanel.element))}_createDataGrid(){const e=[{id:"number",title:"#",sortable:!1,width:"3px"},{id:"name",title:Common.UIString.UIString("Name"),weight:4,sortable:!0},{id:"responseType",title:ls`Response-Type`,weight:1,align:DataGrid.DataGrid.Align.Right,sortable:!0},{id:"contentType",title:Common.UIString.UIString("Content-Type"),weight:1,sortable:!0},{id:"contentLength",title:Common.UIString.UIString("Content-Length"),weight:1,align:DataGrid.DataGrid.Align.Right,sortable:!0},{id:"responseTime",title:Common.UIString.UIString("Time Cached"),width:"12em",weight:1,align:DataGrid.DataGrid.Align.Right,sortable:!0}],t=new DataGrid.DataGrid.DataGridImpl({displayName:ls`Service Worker Cache`,columns:e,deleteCallback:this._deleteButtonClicked.bind(this),refreshCallback:this._updateData.bind(this,!0)});return t.addEventListener(DataGrid.DataGrid.Events.SortingChanged,this._sortingChanged,this),t.addEventListener(DataGrid.DataGrid.Events.SelectedNode,e=>{this._previewCachedResponse(e.data.data)},this),t.setStriped(!0),t}_sortingChanged(){if(!this._dataGrid)return;const e=this._dataGrid.isSortOrderAscending(),t=this._dataGrid.sortColumnId();let s;"name"===t?s=(e,t)=>e._name.localeCompare(t._name):"contentType"===t?s=(e,t)=>e.data.mimeType.localeCompare(t.data.mimeType):"contentLength"===t?s=(e,t)=>e.data.resourceSize-t.data.resourceSize:"responseTime"===t?s=(e,t)=>e.data.endTime-t.data.endTime:"responseType"===t&&(s=(e,t)=>e._responseType.localeCompare(t._responseType));const r=this._dataGrid.rootNode().children.slice();this._dataGrid.rootNode().removeChildren(),r.sort((t,r)=>{const i=s(t,r);return e?i:-i}),r.forEach(e=>this._dataGrid.rootNode().appendChild(e))}async _deleteButtonClicked(e){(e||(e=this._dataGrid&&this._dataGrid.selectedNode))&&(await this._model.deleteCacheEntry(this._cache,e.data.url()),e.remove())}update(e){this._cache=e,this._resetDataGrid(),this._updateData(!0)}_updateSummaryBar(){this._summaryBarElement||(this._summaryBarElement=this.element.createChild("div","cache-storage-summary-bar")),this._summaryBarElement.removeChildren();const e=this._summaryBarElement.createChild("span");this._entryPathFilter?e.textContent=ls`Matching entries: ${this._returnCount}`:e.textContent=ls`Total entries: ${this._returnCount}`}_updateDataCallback(e,t,s){const r=this._dataGrid.selectedNode&&this._dataGrid.selectedNode.data.url();this._refreshButton.setEnabled(!0),this._entriesForTest=t,this._returnCount=s,this._updateSummaryBar();const i=new Map,a=this._dataGrid.rootNode();for(const e of a.children)i.set(e.data.url,e);a.removeChildren();let n=null;for(let e=0;e<t.length;++e){const s=t[e];let o=i.get(s.requestURL);o&&o.data.responseTime===s.responseTime?o.data.number=e:(o=new DataGridNode(e,this._createRequest(s),s.responseType),o.selectable=!0),a.appendChild(o),s.requestURL===r&&(n=o)}n?n.revealAndSelect():this._showPreview(null),this._updatedForTest()}async _updateData(e){if(!e&&this._loadingPromise)return this._loadingPromise;if(this._refreshButton.setEnabled(!1),this._loadingPromise)return this._loadingPromise;this._loadingPromise=new Promise(e=>{this._model.loadAllCacheData(this._cache,this._entryPathFilter,(t,s)=>{e([t,s])})});const[t,s]=await this._loadingPromise;this._updateDataCallback(0,t,s),this._loadingPromise=null}_refreshButtonClicked(e){this._updateData(!0)}_cacheContentUpdated(e){const t=e.data;this._cache.securityOrigin===t.origin&&this._cache.cacheName===t.cacheName&&this._refreshThrottler.schedule(()=>Promise.resolve(this._updateData(!0)),!0)}async _previewCachedResponse(e){let t=e[ServiceWorkerCacheView._previewSymbol];t||(t=new RequestView(e),e[ServiceWorkerCacheView._previewSymbol]=t),e===this._dataGrid.selectedNode.data&&this._showPreview(t)}_createRequest(e){const t=new SDK.NetworkRequest.NetworkRequest("cache-storage-"+e.requestURL,e.requestURL,"","","",null);t.requestMethod=e.requestMethod,t.setRequestHeaders(e.requestHeaders),t.statusCode=e.responseStatus,t.statusText=e.responseStatusText,t.protocol=new Common.ParsedURL.ParsedURL(e.requestURL).scheme,t.responseHeaders=e.responseHeaders,t.setRequestHeadersText(""),t.endTime=e.responseTime;let s=e.responseHeaders.find(e=>"content-type"===e.name.toLowerCase());const r=s?s.value:SDK.NetworkRequest.MIME_TYPE.PLAIN;t.mimeType=r,s=e.responseHeaders.find(e=>"content-length"===e.name.toLowerCase()),t.resourceSize=0|(s&&s.value);let i=Common.ResourceType.ResourceType.fromMimeType(r);return i||(i=Common.ResourceType.ResourceType.fromURL(e.requestURL)||Common.ResourceType.resourceTypes.Other),t.setResourceType(i),t.setContentDataProvider(this._requestContent.bind(this,t)),t}async _requestContent(e){const t=e.resourceType().isTextType(),s={error:null,content:null,encoded:!t},r=await this._cache.requestCachedResponse(e.url(),e.requestHeaders());return r&&(s.content=t?window.atob(r.body):r.body),s}_updatedForTest(){}}ServiceWorkerCacheView._previewSymbol=Symbol("preview");export class DataGridNode extends DataGrid.DataGrid.DataGridNode{constructor(e,t,s){super(t),this._number=e;const r=new Common.ParsedURL.ParsedURL(t.url());r.isValid?this._name=Platform.StringUtilities.trimURL(t.url(),r.domain()):this._name=t.url(),this._request=t,this._responseType=s}createCell(e){const t=this.createTD(e);let s;return"number"===e?s=String(this._number):"name"===e?s=this._name:"responseType"===e?s="opaqueResponse"===this._responseType?"opaque":"opaqueRedirect"===this._responseType?"opaqueredirect":this._responseType:"contentType"===e?s=this._request.mimeType:"contentLength"===e?s=(0|this._request.resourceSize).toLocaleString("en-US"):"responseTime"===e&&(s=new Date(1e3*this._request.endTime).toLocaleString()),DataGrid.DataGrid.DataGridImpl.setElementText(t,s||"",!0),t.title=this._request.url(),t}}export class RequestView extends UI.Widget.VBox{constructor(e){super(),this._tabbedPane=new UI.TabbedPane.TabbedPane,this._tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected,this._tabSelected,this),this._resourceViewTabSetting=Common.Settings.Settings.instance().createSetting("cacheStorageViewTab","preview"),this._tabbedPane.appendTab("headers",Common.UIString.UIString("Headers"),new Network.RequestHeadersView.RequestHeadersView(e)),this._tabbedPane.appendTab("preview",Common.UIString.UIString("Preview"),new Network.RequestPreviewView.RequestPreviewView(e)),this._tabbedPane.show(this.element)}wasShown(){super.wasShown(),this._selectTab()}_selectTab(e){e||(e=this._resourceViewTabSetting.get()),this._tabbedPane.selectTab(e)||this._tabbedPane.selectTab("headers")}_tabSelected(e){e.data.isUserGesture&&this._resourceViewTabSetting.set(e.data.tabId)}}