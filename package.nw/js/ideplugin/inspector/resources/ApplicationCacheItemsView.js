import*as Common from"../common/common.js";import*as DataGrid from"../data_grid/data_grid.js";import*as Platform from"../platform/platform.js";import*as UI from"../ui/ui.js";import{CHECKING,DOWNLOADING,IDLE,OBSOLETE,UNCACHED,UPDATEREADY}from"./ApplicationCacheModel.js";export class ApplicationCacheItemsView extends UI.View.SimpleView{constructor(t,e){super(Common.UIString.UIString("AppCache")),this._model=t,this.element.classList.add("storage-view","table"),this._deleteButton=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Delete"),"largeicon-delete"),this._deleteButton.setVisible(!1),this._deleteButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,this._deleteButtonClicked,this),this._connectivityIcon=createElement("span","dt-icon-label"),this._connectivityIcon.style.margin="0 2px 0 5px",this._statusIcon=createElement("span","dt-icon-label"),this._statusIcon.style.margin="0 2px 0 5px",this._frameId=e,this._emptyWidget=new UI.EmptyWidget.EmptyWidget(Common.UIString.UIString("No Application Cache information available.")),this._emptyWidget.show(this.element),this._markDirty();const i=this._model.frameManifestStatus(e);this.updateStatus(i),this.updateNetworkState(this._model.onLine),this._deleteButton.element.style.display="none"}async toolbarItems(){return[this._deleteButton,new UI.Toolbar.ToolbarItem(this._connectivityIcon),new UI.Toolbar.ToolbarSeparator,new UI.Toolbar.ToolbarItem(this._statusIcon)]}wasShown(){this._maybeUpdate()}willHide(){this._deleteButton.setVisible(!1)}_maybeUpdate(){this.isShowing()&&this._viewDirty&&(this._update(),this._viewDirty=!1)}_markDirty(){this._viewDirty=!0}updateStatus(t){const e=this._status;this._status=t;const i={};i[UNCACHED]={type:"smallicon-red-ball",text:"UNCACHED"},i[IDLE]={type:"smallicon-green-ball",text:"IDLE"},i[CHECKING]={type:"smallicon-orange-ball",text:"CHECKING"},i[DOWNLOADING]={type:"smallicon-orange-ball",text:"DOWNLOADING"},i[UPDATEREADY]={type:"smallicon-green-ball",text:"UPDATEREADY"},i[OBSOLETE]={type:"smallicon-red-ball",text:"OBSOLETE"};const s=i[t]||i[UNCACHED];this._statusIcon.type=s.type,this._statusIcon.textContent=s.text,!this.isShowing()||this._status!==IDLE||e!==UPDATEREADY&&this._resources||this._markDirty(),this._maybeUpdate()}updateNetworkState(t){t?(this._connectivityIcon.type="smallicon-green-ball",this._connectivityIcon.textContent=Common.UIString.UIString("Online")):(this._connectivityIcon.type="smallicon-red-ball",this._connectivityIcon.textContent=Common.UIString.UIString("Offline"))}async _update(){const t=await this._model.requestApplicationCache(this._frameId);if(!t||!t.manifestURL)return delete this._manifest,delete this._creationTime,delete this._updateTime,delete this._size,delete this._resources,this._emptyWidget.show(this.element),this._deleteButton.setVisible(!1),void(this._dataGrid&&this._dataGrid.element.classList.add("hidden"));this._manifest=t.manifestURL,this._creationTime=t.creationTime,this._updateTime=t.updateTime,this._size=t.size,this._resources=t.resources,this._dataGrid||this._createDataGrid(),this._populateDataGrid(),this._dataGrid.autoSizeColumns(20,80),this._dataGrid.element.classList.remove("hidden"),this._emptyWidget.detach(),this._deleteButton.setVisible(!0)}_createDataGrid(){const t=[{id:"resource",title:Common.UIString.UIString("Resource"),sort:DataGrid.DataGrid.Order.Ascending,sortable:!0},{id:"type",title:Common.UIString.UIString("Type"),sortable:!0},{id:"size",title:Common.UIString.UIString("Size"),align:DataGrid.DataGrid.Align.Right,sortable:!0}];this._dataGrid=new DataGrid.DataGrid.DataGridImpl({displayName:ls`Application Cache`,columns:t}),this._dataGrid.setStriped(!0),this._dataGrid.asWidget().show(this.element),this._dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged,this._populateDataGrid,this)}_populateDataGrid(){const t=this._dataGrid.selectedNode?this._dataGrid.selectedNode.resource:null,e=this._dataGrid.isSortOrderAscending()?1:-1;function i(t,i,s){return e*(i[t]+"").localeCompare(s[t]+"")}let s,a;switch(this._dataGrid.sortColumnId()){case"resource":s=i.bind(null,"url");break;case"type":s=i.bind(null,"type");break;case"size":s=function(t,i,s){return e*(i[t]-s[t])}.bind(null,"size");break;default:i.bind(null,"resource")}this._resources.sort(s),this._dataGrid.rootNode().removeChildren();for(let e=0;e<this._resources.length;++e){const i={},s=this._resources[e];i.resource=s.url,i.type=s.type,i.size=Platform.NumberUtilities.bytesToString(s.size);const o=new DataGrid.DataGrid.DataGridNode(i);o.resource=s,o.selectable=!0,this._dataGrid.rootNode().appendChild(o),s===t&&(a=o,a.selected=!0)}!a&&this._dataGrid.rootNode().children.length&&(this._dataGrid.rootNode().children[0].selected=!0)}_deleteButtonClicked(t){this._dataGrid&&this._dataGrid.selectedNode&&this._deleteCallback(this._dataGrid.selectedNode)}_deleteCallback(t){}}