import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as SourceFrame from"../source_frame/source_frame.js";import*as UI from"../ui/ui.js";import{ApplicationPanelSidebar,StorageCategoryView}from"./ApplicationPanelSidebar.js";import{CookieItemsView}from"./CookieItemsView.js";import{DatabaseQueryView}from"./DatabaseQueryView.js";import{DatabaseTableView}from"./DatabaseTableView.js";import{DOMStorageItemsView}from"./DOMStorageItemsView.js";import{DOMStorage}from"./DOMStorageModel.js";import{StorageItemsView}from"./StorageItemsView.js";export class ResourcesPanel extends UI.Panel.PanelWithSidebar{constructor(){super("resources"),this.registerRequiredCSS("resources/resourcesPanel.css"),this._resourcesLastSelectedItemSetting=Common.Settings.Settings.instance().createSetting("resourcesLastSelectedElementPath",[]),this.visibleView=null,this._pendingViewPromise=null,this._categoryView=null;const e=new UI.Widget.VBox;this.storageViews=e.element.createChild("div","vbox flex-auto"),this._storageViewToolbar=new UI.Toolbar.Toolbar("resources-toolbar",e.element),this.splitWidget().setMainWidget(e),this._domStorageView=null,this._cookieView=null,this._emptyWidget=null,this._sidebar=new ApplicationPanelSidebar(this),this._sidebar.show(this.panelSidebarElement())}static _instance(){return self.runtime.sharedInstance(ResourcesPanel)}static _shouldCloseOnReset(e){return[SourceFrame.ResourceSourceFrame.ResourceSourceFrame,SourceFrame.ImageView.ImageView,SourceFrame.FontView.FontView,StorageItemsView,DatabaseQueryView,DatabaseTableView].some(i=>e instanceof i)}focus(){this._sidebar.focus()}lastSelectedItemPath(){return this._resourcesLastSelectedItemSetting.get()}setLastSelectedItemPath(e){this._resourcesLastSelectedItemSetting.set(e)}resetView(){this.visibleView&&ResourcesPanel._shouldCloseOnReset(this.visibleView)&&this.showView(null)}showView(e){this._pendingViewPromise=null,this.visibleView!==e&&(this.visibleView&&this.visibleView.detach(),e&&e.show(this.storageViews),this.visibleView=e,this._storageViewToolbar.removeToolbarItems(),e instanceof UI.View.SimpleView&&e.toolbarItems().then(e=>{e.map(e=>this._storageViewToolbar.appendToolbarItem(e)),this._storageViewToolbar.element.classList.toggle("hidden",!e.length)}))}async scheduleShowView(e){this._pendingViewPromise=e;const i=await e;return this._pendingViewPromise!==e?null:(this.showView(i),i)}showCategoryView(e,i){this._categoryView||(this._categoryView=new StorageCategoryView),this._categoryView.setText(e),this._categoryView.setLink(i),this.showView(this._categoryView)}showDOMStorage(e){e&&(this._domStorageView?this._domStorageView.setStorage(e):this._domStorageView=new DOMStorageItemsView(e),this.showView(this._domStorageView))}showCookies(e,i){const t=e.model(SDK.CookieModel.CookieModel);t&&(this._cookieView?this._cookieView.setCookiesDomain(t,i):this._cookieView=new CookieItemsView(t,i),this.showView(this._cookieView))}clearCookies(e,i){const t=e.model(SDK.CookieModel.CookieModel);t&&t.clear(i).then(()=>{this._cookieView&&this._cookieView.refreshItems()})}}export class ResourceRevealer{async reveal(e){if(!(e instanceof SDK.Resource.Resource))return Promise.reject(new Error("Internal error: not a resource"));const i=ResourcesPanel._instance()._sidebar;await UI.ViewManager.ViewManager.instance().showView("resources"),await i.showResource(e)}}export class CookieReferenceRevealer{async reveal(e){if(!(e instanceof SDK.Cookie.CookieReference))throw new Error("Internal error: not a cookie reference");const i=ResourcesPanel._instance()._sidebar;await UI.ViewManager.ViewManager.instance().showView("resources"),await i.cookieListTreeElement.select();const t=e.contextUrl();t&&await this._revealByDomain(i,t)||this._revealByDomain(i,e.domain())}async _revealByDomain(e,i){const t=e.cookieListTreeElement.children().find(e=>e._cookieDomain.endsWith(i));return!!t&&(await t.revealAndSelect(),!0)}}