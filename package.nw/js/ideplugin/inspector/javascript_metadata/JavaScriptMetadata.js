import*as Common from"../common/common.js";import{NativeFunctions}from"./NativeFunctions.js";export class JavaScriptMetadataImpl{constructor(){this._uniqueFunctions=new Map,this._instanceMethods=new Map,this._staticMethods=new Map;for(const t of NativeFunctions)t.receiver?t.static?(this._staticMethods.has(t.receiver)||this._staticMethods.set(t.receiver,new Map),this._staticMethods.get(t.receiver).set(t.name,t.signatures)):(this._instanceMethods.has(t.receiver)||this._instanceMethods.set(t.receiver,new Map),this._instanceMethods.get(t.receiver).set(t.name,t.signatures)):this._uniqueFunctions.set(t.name,t.signatures)}signaturesForNativeFunction(t){return this._uniqueFunctions.get(t)||null}signaturesForInstanceMethod(t,e){return this._instanceMethods.has(e)&&this._instanceMethods.get(e).get(t)||null}signaturesForStaticMethod(t,e){return this._staticMethods.has(e)&&this._staticMethods.get(e).get(t)||null}}