import*as UI from"../ui/ui.js";export class BezierUI{constructor(t,i,r,s,e){this.width=t,this.height=i,this.marginTop=r,this.radius=s,this.linearLine=e}static drawVelocityChart(t,i,r){const s=Height;let e=["M",0,s];let o=t.evaluateAt(0);for(let i=1/40;i<1.025;i+=1/40){const h=t.evaluateAt(i);let n=(h.y-o.y)/(h.x-o.x);const a=o.x*(1-i)+h.x*i;n=Math.tanh(n/1.5),e=e.concat(["L",(a*r).toFixed(2),(s-n*s).toFixed(2)]),o=h}e=e.concat(["L",r.toFixed(2),s,"Z"]),i.setAttribute("d",e.join(" "))}curveWidth(){return this.width-2*this.radius}curveHeight(){return this.height-2*this.radius-2*this.marginTop}_drawLine(t,i,r,s,e,o){const h=t.createSVGChild("line",i);h.setAttribute("x1",r+this.radius),h.setAttribute("y1",s+this.radius+this.marginTop),h.setAttribute("x2",e+this.radius),h.setAttribute("y2",o+this.radius+this.marginTop)}_drawControlPoints(t,i,r,s,e){this._drawLine(t,"bezier-control-line",i,r,s,e);const o=t.createSVGChild("circle","bezier-control-circle");o.setAttribute("cx",s+this.radius),o.setAttribute("cy",e+this.radius+this.marginTop),o.setAttribute("r",this.radius)}drawCurve(t,i){if(!t)return;const r=this.curveWidth(),s=this.curveHeight();i.setAttribute("width",this.width),i.setAttribute("height",this.height),i.removeChildren();const e=i.createSVGChild("g");this.linearLine&&this._drawLine(e,"linear-line",0,s,r,0);const o=e.createSVGChild("path","bezier-path"),h=[new UI.Geometry.Point(t.controlPoints[0].x*r+this.radius,(1-t.controlPoints[0].y)*s+this.radius+this.marginTop),new UI.Geometry.Point(t.controlPoints[1].x*r+this.radius,(1-t.controlPoints[1].y)*s+this.radius+this.marginTop),new UI.Geometry.Point(r+this.radius,this.marginTop+this.radius)];o.setAttribute("d","M"+this.radius+","+(s+this.radius+this.marginTop)+" C"+h.join(" ")),this._drawControlPoints(e,0,s,t.controlPoints[0].x*r,(1-t.controlPoints[0].y)*s),this._drawControlPoints(e,r,0,t.controlPoints[1].x*r,(1-t.controlPoints[1].y)*s)}}export const Height=26;