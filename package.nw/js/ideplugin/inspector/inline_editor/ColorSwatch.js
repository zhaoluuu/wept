import*as Common from"../common/common.js";import*as TextUtils from"../text_utils/text_utils.js";import*as UI from"../ui/ui.js";import{CSSShadowModel}from"./CSSShadowModel.js";export class ColorSwatch extends HTMLSpanElement{constructor(){super();const t=UI.Utils.createShadowRootWithCoreStyles(this,"inline_editor/colorSwatch.css");this._iconElement=t.createChild("span","color-swatch"),this._iconElement.title=Common.UIString.UIString("Shift-click to change color format"),this._swatchInner=this._iconElement.createChild("span","color-swatch-inner"),this._swatchInner.addEventListener("dblclick",t=>t.consume(),!1),this._swatchInner.addEventListener("mousedown",t=>t.consume(),!1),this._swatchInner.addEventListener("click",this._handleClick.bind(this),!0),t.createChild("slot"),this._colorValueElement=this.createChild("span")}static create(){return ColorSwatch._constructor||(ColorSwatch._constructor=UI.Utils.registerCustomElement("span","color-swatch",ColorSwatch)),ColorSwatch._constructor()}static _nextColorFormat(t,e){const o=Common.Color.Format;switch(e){case o.Original:return t.hasAlpha()?o.RGBA:o.RGB;case o.RGB:case o.RGBA:return t.hasAlpha()?o.HSLA:o.HSL;case o.HSL:case o.HSLA:return t.nickname()?o.Nickname:t.detectHEXFormat();case o.ShortHEX:return o.HEX;case o.ShortHEXA:return o.HEXA;case o.HEXA:case o.HEX:return o.Original;case o.Nickname:return t.detectHEXFormat();default:return o.RGBA}}color(){return this._color}setColor(t){this._color=t,this._format=this._color.format();const e=this._color.asString(this._format);this.setText(e),this._swatchInner.style.backgroundColor=e}hideText(t){this._colorValueElement.hidden=t}setText(t,e){this._colorValueElement.textContent=t,this._colorValueElement.title=e}format(){return this._format}setFormat(t){this._format=t,this.setText(this._color.asString(this._format))}toggleNextFormat(){let t;do{this._format=ColorSwatch._nextColorFormat(this._color,this._format),t=this._color.asString(this._format)}while(t===this._colorValueElement.textContent);this.setText(t)}iconElement(){return this._iconElement}_handleClick(t){t.shiftKey&&(t.target.parentNode.parentNode.host.toggleNextFormat(),t.consume(!0))}}export class BezierSwatch extends HTMLSpanElement{constructor(){super();const t=UI.Utils.createShadowRootWithCoreStyles(this,"inline_editor/bezierSwatch.css");this._iconElement=UI.Icon.Icon.create("smallicon-bezier","bezier-swatch-icon"),t.appendChild(this._iconElement),this._textElement=this.createChild("span"),t.createChild("slot")}static create(){return BezierSwatch._constructor||(BezierSwatch._constructor=UI.Utils.registerCustomElement("span","bezier-swatch",BezierSwatch)),BezierSwatch._constructor()}bezierText(){return this._textElement.textContent}setBezierText(t){this._textElement.textContent=t}hideText(t){this._textElement.hidden=t}iconElement(){return this._iconElement}}export class CSSShadowSwatch extends HTMLSpanElement{constructor(){super();const t=UI.Utils.createShadowRootWithCoreStyles(this,"inline_editor/cssShadowSwatch.css");this._iconElement=UI.Icon.Icon.create("smallicon-shadow","shadow-swatch-icon"),t.appendChild(this._iconElement),t.createChild("slot"),this._contentElement=this.createChild("span")}static create(){return CSSShadowSwatch._constructor||(CSSShadowSwatch._constructor=UI.Utils.registerCustomElement("span","css-shadow-swatch",CSSShadowSwatch)),CSSShadowSwatch._constructor()}model(){return this._model}setCSSShadow(t){this._model=t,this._contentElement.removeChildren();const e=TextUtils.TextUtils.Utils.splitStringByRegexes(t.asCSSText(),[/inset/g,Common.Color.Regex]);for(let o=0;o<e.length;o++){const r=e[o];1===r.regexIndex?(this._colorSwatch||(this._colorSwatch=ColorSwatch.create()),this._colorSwatch.setColor(t.color()),this._contentElement.appendChild(this._colorSwatch)):this._contentElement.appendChild(createTextNode(r.value))}}hideText(t){this._contentElement.hidden=t}iconElement(){return this._iconElement}colorSwatch(){return this._colorSwatch}}