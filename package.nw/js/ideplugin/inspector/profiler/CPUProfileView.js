import*as Common from"../common/common.js";import*as Components from"../components/components.js";import*as Host from"../host/host.js";import*as PerfUI from"../perf_ui/perf_ui.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{ProfileFlameChartDataProvider}from"./CPUProfileFlameChart.js";import{Formatter,ProfileDataGridNode}from"./ProfileDataGrid.js";import{ProfileEvents,ProfileHeader,ProfileType}from"./ProfileHeader.js";import{ProfileView,WritableProfileHeader}from"./ProfileView.js";export class CPUProfileView extends ProfileView{constructor(e){super(),this._profileHeader=e,this.initialize(new NodeFormatter(this));const r=e.profileModel();this.adjustedTotal=r.profileHead.total,this.adjustedTotal-=r.idleNode?r.idleNode.total:0,this.setProfile(r)}wasShown(){super.wasShown();const e=self.runtime.sharedInstance(PerfUI.LineLevelProfile.Performance);e.reset(),e.appendCPUProfile(this._profileHeader.profileModel())}columnHeader(e){switch(e){case"self":return Common.UIString.UIString("Self Time");case"total":return Common.UIString.UIString("Total Time")}return""}createFlameChartDataProvider(){return new CPUFlameChartDataProvider(this._profileHeader.profileModel(),this._profileHeader._cpuProfilerModel)}}export class CPUProfileType extends ProfileType{constructor(){super(CPUProfileType.TypeId,Common.UIString.UIString("Record JavaScript CPU Profile")),this._recording=!1,CPUProfileType.instance=this,SDK.SDKModel.TargetManager.instance().addModelListener(SDK.CPUProfilerModel.CPUProfilerModel,SDK.CPUProfilerModel.Events.ConsoleProfileFinished,this._consoleProfileFinished,this)}profileBeingRecorded(){return super.profileBeingRecorded()}typeName(){return"CPU"}fileExtension(){return".cpuprofile"}get buttonTooltip(){return this._recording?Common.UIString.UIString("Stop CPU profiling"):Common.UIString.UIString("Start CPU profiling")}buttonClicked(){return this._recording?(this._stopRecordingProfile(),!1):(this._startRecordingProfile(),!0)}get treeItemTitle(){return Common.UIString.UIString("CPU PROFILES")}get description(){return Common.UIString.UIString("CPU profiles show where the execution time is spent in your page's JavaScript functions.")}_consoleProfileFinished(e){const r=e.data,t=r.cpuProfile,o=new CPUProfileHeader(r.cpuProfilerModel,this,r.title);o.setProtocolProfile(t),this.addProfile(o)}_startRecordingProfile(){const e=UI.Context.Context.instance().flavor(SDK.CPUProfilerModel.CPUProfilerModel);if(this.profileBeingRecorded()||!e)return;const r=new CPUProfileHeader(e,this);this.setProfileBeingRecorded(r),SDK.SDKModel.TargetManager.instance().suspendAllTargets(),this.addProfile(r),r.updateStatus(Common.UIString.UIString("Recording…")),this._recording=!0,e.startRecording(),Host.userMetrics.actionTaken(Host.UserMetrics.Action.ProfilesCPUProfileTaken)}async _stopRecordingProfile(){if(this._recording=!1,!this.profileBeingRecorded()||!this.profileBeingRecorded()._cpuProfilerModel)return;const e=await this.profileBeingRecorded()._cpuProfilerModel.stopRecording(),r=this.profileBeingRecorded();r&&(console.assert(e),r.setProtocolProfile(e),r.updateStatus(""),this.setProfileBeingRecorded(null)),await SDK.SDKModel.TargetManager.instance().resumeAllTargets(),this.dispatchEventToListeners(ProfileEvents.ProfileComplete,r)}createProfileLoadedFromFile(e){return new CPUProfileHeader(null,this,e)}profileBeingRecordedRemoved(){this._stopRecordingProfile()}}CPUProfileType.TypeId="CPU";export class CPUProfileHeader extends WritableProfileHeader{constructor(e,r,t){super(e&&e.debuggerModel(),r,t),this._cpuProfilerModel=e}createView(){return new CPUProfileView(this)}protocolProfile(){return this._protocolProfile}profileModel(){return this._profileModel}setProfile(e){const r=this._cpuProfilerModel&&this._cpuProfilerModel.target()||null;this._profileModel=new SDK.CPUProfileDataModel.CPUProfileDataModel(e,r)}}export class NodeFormatter{constructor(e){this._profileView=e}formatValue(e){return Common.UIString.UIString("%.1f ms",e)}formatValueAccessibleText(e){return this.formatValue(e)}formatPercent(e,r){return r.profileNode===this._profileView.profile().idleNode?"":Common.UIString.UIString("%.2f %%",e)}linkifyNode(e){const r=this._profileView._profileHeader._cpuProfilerModel,t=r?r.target():null;return this._profileView.linkifier().maybeLinkifyConsoleCallFrame(t,e.profileNode.callFrame,{className:"profile-node-file"})}}export class CPUFlameChartDataProvider extends ProfileFlameChartDataProvider{constructor(e,r){super(),this._cpuProfile=e,this._cpuProfilerModel=r}_calculateTimelineData(){const e=[],r=[];let t=5;this._cpuProfile.forEachFrame((function(){r.push(e.length),e.push(null)}),(function(o,i,l,n,s){const a=r.pop();e[a]=new CPUFlameChartDataProvider.ChartEntry(o,n,l,s,i),t=Math.max(t,o)}));const o=new Array(e.length),i=new Uint16Array(e.length),l=new Float32Array(e.length),n=new Float32Array(e.length),s=new Float64Array(e.length);for(let r=0;r<e.length;++r){const t=e[r];o[r]=t.node,i[r]=t.depth,l[r]=t.duration,s[r]=t.startTime,n[r]=t.selfTime}return this._maxStackDepth=t+1,this._timelineData=new PerfUI.FlameChart.TimelineData(i,l,s,null),this._entryNodes=o,this._entrySelfTimes=n,this._timelineData}prepareHighlightedEntryInfo(e){const r=this._timelineData,t=this._entryNodes[e];if(!t)return null;const o=[];function i(e,r){o.push({title:e,value:r})}function l(e){return 0===e?"0":e<1e3?Common.UIString.UIString("%.1f ms",e):Number.secondsToString(e/1e3,!0)}const n=UI.UIUtils.beautifyFunctionName(t.functionName);i(ls`Name`,n);const s=l(this._entrySelfTimes[e]),a=l(r.entryTotalTimes[e]);i(ls`Self time`,s),i(ls`Total time`,a);const f=new Components.Linkifier.Linkifier,d=f.maybeLinkifyConsoleCallFrame(this._cpuProfilerModel&&this._cpuProfilerModel.target(),t.callFrame);return d&&i(ls`URL`,d.textContent),f.dispose(),i(ls`Aggregated self time`,Number.secondsToString(t.self/1e3,!0)),i(ls`Aggregated total time`,Number.secondsToString(t.total/1e3,!0)),t.deoptReason&&i(ls`Not optimized`,t.deoptReason),ProfileView.buildPopoverTable(o)}}CPUFlameChartDataProvider.ChartEntry=class{constructor(e,r,t,o,i){this.depth=e,this.duration=r,this.startTime=t,this.selfTime=o,this.node=i}};