import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{DataDisplayDelegate,Events as ProfileHeaderEvents,ProfileEvents as ProfileTypeEvents,ProfileHeader,ProfileType}from"./ProfileHeader.js";import{Events as ProfileLauncherEvents,ProfileLauncherView}from"./ProfileLauncherView.js";import{ProfileSidebarTreeElement}from"./ProfileSidebarTreeElement.js";import{instance}from"./ProfileTypeRegistry.js";export class ProfilesPanel extends UI.Panel.PanelWithSidebar{constructor(e,t,i){super(e),this._profileTypes=t,this.registerRequiredCSS("profiler/heapProfiler.css"),this.registerRequiredCSS("profiler/profilesPanel.css"),this.registerRequiredCSS("object_ui/objectValue.css");const r=new UI.Widget.VBox;this.splitWidget().setMainWidget(r),this.profilesItemTreeElement=new ProfilesSidebarTreeElement(this),this._sidebarTree=new UI.TreeOutline.TreeOutlineInShadow,this._sidebarTree.registerRequiredCSS("profiler/profilesSidebarTree.css"),this._sidebarTree.element.classList.add("profiles-sidebar-tree-box"),this.panelSidebarElement().appendChild(this._sidebarTree.element),this._sidebarTree.appendChild(this.profilesItemTreeElement),this._sidebarTree.element.addEventListener("keydown",this._onKeyDown.bind(this),!1),this.profileViews=createElement("div"),this.profileViews.id="profile-views",this.profileViews.classList.add("vbox"),r.element.appendChild(this.profileViews),this._toolbarElement=document.createElement("div"),this._toolbarElement.classList.add("profiles-toolbar"),r.element.insertBefore(this._toolbarElement,r.element.firstChild),this.panelSidebarElement().classList.add("profiles-tree-sidebar");const l=document.createElement("div");l.classList.add("profiles-toolbar"),this.panelSidebarElement().insertBefore(l,this.panelSidebarElement().firstChild);const o=new UI.Toolbar.Toolbar("",l);this._toggleRecordAction=UI.ActionRegistry.ActionRegistry.instance().action(i),this._toggleRecordButton=UI.Toolbar.Toolbar.createActionButton(this._toggleRecordAction),o.appendToolbarItem(this._toggleRecordButton),this.clearResultsButton=new UI.Toolbar.ToolbarButton(Common.UIString.UIString("Clear all profiles"),"largeicon-clear"),this.clearResultsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,this._reset,this),o.appendToolbarItem(this.clearResultsButton),o.appendSeparator(),o.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId("components.collect-garbage")),this._profileViewToolbar=new UI.Toolbar.Toolbar("",this._toolbarElement),this._profileGroups={},this._launcherView=new ProfileLauncherView(this),this._launcherView.addEventListener(ProfileLauncherEvents.ProfileTypeSelected,this._onProfileTypeSelected,this),this._profileToView=[],this._typeIdToSidebarSection={};const s=this._profileTypes;for(let e=0;e<s.length;e++)this._registerProfileType(s[e]);this._launcherView.restoreSelectedProfileType(),this.profilesItemTreeElement.select(),this._showLauncherView(),this._createFileSelectorElement(),this.element.addEventListener("contextmenu",this._handleContextMenuEvent.bind(this),!1),SDK.SDKModel.TargetManager.instance().addEventListener(SDK.SDKModel.Events.SuspendStateChanged,this._onSuspendStateChanged,this),UI.Context.Context.instance().addFlavorChangeListener(SDK.CPUProfilerModel.CPUProfilerModel,this._updateProfileTypeSpecificUI,this),UI.Context.Context.instance().addFlavorChangeListener(SDK.HeapProfilerModel.HeapProfilerModel,this._updateProfileTypeSpecificUI,this)}_onKeyDown(e){let t=!1;"ArrowDown"!==e.key||e.altKey?"ArrowUp"!==e.key||e.altKey||(t=this._sidebarTree.selectPrevious()):t=this._sidebarTree.selectNext(),t&&e.consume(!0)}searchableView(){return this.visibleView&&this.visibleView.searchableView?this.visibleView.searchableView():null}_createFileSelectorElement(){this._fileSelectorElement&&this.element.removeChild(this._fileSelectorElement),this._fileSelectorElement=UI.UIUtils.createFileSelectorElement(this._loadFromFile.bind(this)),ProfilesPanel._fileSelectorElement=this._fileSelectorElement,this.element.appendChild(this._fileSelectorElement)}_findProfileTypeByExtension(e){return this._profileTypes.find(t=>!!t.fileExtension()&&e.endsWith(t.fileExtension()||""))||null}async _loadFromFile(e){this._createFileSelectorElement();const t=this._findProfileTypeByExtension(e.name);if(!t){const e=new Set(this._profileTypes.map(e=>e.fileExtension()).filter(e=>e));return void Common.Console.Console.instance().error(Common.UIString.UIString("Can’t load file. Supported file extensions: `%s`.",Array.from(e).join("', '")))}if(t.profileBeingRecorded())return void Common.Console.Console.instance().error(Common.UIString.UIString("Can’t load profile while another profile is being recorded."));const i=await t.loadFromFile(e);i&&UI.UIUtils.MessageDialog.show(Common.UIString.UIString("Profile loading failed: %s.",i.message))}toggleRecord(){if(!this._toggleRecordAction.enabled())return!0;const e=this.element.ownerDocument.deepActiveElement(),t=this._selectedProfileType,i=t.buttonClicked();return this._updateToggleRecordAction(i),i?(this._launcherView.profileStarted(),t.hasTemporaryView()&&this.showProfile(t.profileBeingRecorded())):this._launcherView.profileFinished(),e&&e.focus(),!0}_onSuspendStateChanged(){this._updateToggleRecordAction(this._toggleRecordAction.toggled())}_updateToggleRecordAction(e){const t=!(!UI.Context.Context.instance().flavor(SDK.CPUProfilerModel.CPUProfilerModel)&&!UI.Context.Context.instance().flavor(SDK.HeapProfilerModel.HeapProfilerModel)),i=e||!SDK.SDKModel.TargetManager.instance().allTargetsSuspended()&&t;this._toggleRecordAction.setEnabled(i),this._toggleRecordAction.setToggled(e),i?this._toggleRecordButton.setTitle(this._selectedProfileType?this._selectedProfileType.buttonTooltip:""):this._toggleRecordButton.setTitle(UI.UIUtils.anotherProfilerActiveLabel()),this._selectedProfileType&&this._launcherView.updateProfileType(this._selectedProfileType,i)}_profileBeingRecordedRemoved(){this._updateToggleRecordAction(!1),this._launcherView.profileFinished()}_onProfileTypeSelected(e){this._selectedProfileType=e.data,this._updateProfileTypeSpecificUI()}_updateProfileTypeSpecificUI(){this._updateToggleRecordAction(this._toggleRecordAction.toggled())}_reset(){this._profileTypes.forEach(e=>e.reset()),delete this.visibleView,this._profileGroups={},this._updateToggleRecordAction(!1),this._launcherView.profileFinished(),this._sidebarTree.element.classList.remove("some-expandable"),this._launcherView.detach(),this.profileViews.removeChildren(),this._profileViewToolbar.removeToolbarItems(),this.clearResultsButton.element.classList.remove("hidden"),this.profilesItemTreeElement.select(),this._showLauncherView()}_showLauncherView(){this.closeVisibleView(),this._profileViewToolbar.removeToolbarItems(),this._launcherView.show(this.profileViews),this.visibleView=this._launcherView,this._toolbarElement.classList.add("hidden")}_registerProfileType(e){this._launcherView.addProfileType(e);const t=new ProfileTypeSidebarSection(this,e);this._typeIdToSidebarSection[e.id]=t,this._sidebarTree.appendChild(t),t.childrenListElement.addEventListener("contextmenu",this._handleContextMenuEvent.bind(this),!1),e.addEventListener(ProfileTypeEvents.ViewUpdated,this._updateProfileTypeSpecificUI,this),e.addEventListener(ProfileTypeEvents.AddProfileHeader,(function(e){this._addProfileHeader(e.data)}),this),e.addEventListener(ProfileTypeEvents.RemoveProfileHeader,(function(e){this._removeProfileHeader(e.data)}),this),e.addEventListener(ProfileTypeEvents.ProfileComplete,(function(e){this.showProfile(e.data)}),this);const i=e.getProfiles();for(let e=0;e<i.length;e++)this._addProfileHeader(i[e])}_handleContextMenuEvent(e){const t=new UI.ContextMenu.ContextMenu(e);this.panelSidebarElement().isSelfOrAncestor(e.srcElement)&&t.defaultSection().appendItem(Common.UIString.UIString("Load…"),this._fileSelectorElement.click.bind(this._fileSelectorElement)),t.show()}showLoadFromFileDialog(){this._fileSelectorElement.click()}_addProfileHeader(e){const t=e.profileType().id;this._typeIdToSidebarSection[t].addProfileHeader(e),this.visibleView&&this.visibleView!==this._launcherView||this.showProfile(e)}_removeProfileHeader(e){e.profileType().profileBeingRecorded()===e&&this._profileBeingRecordedRemoved();const t=this._indexOfViewForProfile(e);-1!==t&&this._profileToView.splice(t,1);const i=e.profileType().id;this._typeIdToSidebarSection[i].removeProfileHeader(e)&&(this.profilesItemTreeElement.select(),this._showLauncherView())}showProfile(e){if(!e||e.profileType().profileBeingRecorded()===e&&!e.profileType().hasTemporaryView())return null;const t=this.viewForProfile(e);if(t===this.visibleView)return t;this.closeVisibleView(),t.show(this.profileViews),this._toolbarElement.classList.remove("hidden"),this.visibleView=t;return this._typeIdToSidebarSection[e.profileType().id].sidebarElementForProfile(e).revealAndSelect(),this._profileViewToolbar.removeToolbarItems(),t.toolbarItems().then(e=>{e.map(e=>this._profileViewToolbar.appendToolbarItem(e))}),t}showObject(e,t){}async linkifyObject(e){return null}viewForProfile(e){const t=this._indexOfViewForProfile(e);if(-1!==t)return this._profileToView[t].view;const i=e.createView(this);return i.element.classList.add("profile-view"),this._profileToView.push({profile:e,view:i}),i}_indexOfViewForProfile(e){return this._profileToView.findIndex(t=>t.profile===e)}closeVisibleView(){this.visibleView&&this.visibleView.detach(),delete this.visibleView}focus(){this._sidebarTree.focus()}}export class ProfileTypeSidebarSection extends UI.TreeOutline.TreeElement{constructor(e,t){super(t.treeItemTitle,!0),this.selectable=!1,this._dataDisplayDelegate=e,this._profileTreeElements=[],this._profileGroups={},this.expand(),this.hidden=!0,this.setCollapsible(!1)}addProfileHeader(e){this.hidden=!1;const t=e.profileType();let i=this;const r=e.createSidebarTreeElement(this._dataDisplayDelegate);if(this._profileTreeElements.push(r),!e.fromFile()&&t.profileBeingRecorded()!==e){const t=e.title;let l=this._profileGroups[t];l||(l=new ProfileGroup,this._profileGroups[t]=l),l.profileSidebarTreeElements.push(r);const o=l.profileSidebarTreeElements.length;if(2===o){l.sidebarTreeElement=new ProfileGroupSidebarTreeElement(this._dataDisplayDelegate,e.title);const t=l.profileSidebarTreeElements[0],i=this.children().indexOf(t);this.insertChild(l.sidebarTreeElement,i);const r=t.selected;this.removeChild(t),l.sidebarTreeElement.appendChild(t),r&&t.revealAndSelect(),t.setSmall(!0),t.setMainTitle(Common.UIString.UIString("Run %d",1)),this.treeOutline.element.classList.add("some-expandable")}o>=2&&(i=l.sidebarTreeElement,r.setSmall(!0),r.setMainTitle(Common.UIString.UIString("Run %d",o)))}i.appendChild(r)}removeProfileHeader(e){const t=this._sidebarElementIndex(e);if(-1===t)return!1;const i=this._profileTreeElements[t];this._profileTreeElements.splice(t,1);let r=this;const l=this._profileGroups[e.title];if(l){const t=l.profileSidebarTreeElements;if(t.splice(t.indexOf(i),1),1===t.length){const i=r.children().indexOf(l.sidebarTreeElement);l.sidebarTreeElement.removeChild(t[0]),this.insertChild(t[0],i),t[0].setSmall(!1),t[0].setMainTitle(e.title),this.removeChild(l.sidebarTreeElement)}0!==t.length&&(r=l.sidebarTreeElement)}return r.removeChild(i),i.dispose(),!this.childCount()&&(this.hidden=!0,!0)}sidebarElementForProfile(e){const t=this._sidebarElementIndex(e);return-1===t?null:this._profileTreeElements[t]}_sidebarElementIndex(e){const t=this._profileTreeElements;for(let i=0;i<t.length;i++)if(t[i].profile===e)return i;return-1}onattach(){this.listItemElement.classList.add("profiles-tree-section")}}export class ProfileGroup{constructor(){this.profileSidebarTreeElements=[],this.sidebarTreeElement=null}}export class ProfileGroupSidebarTreeElement extends UI.TreeOutline.TreeElement{constructor(e,t){super("",!0),this.selectable=!1,this._dataDisplayDelegate=e,this._title=t,this.expand(),this.toggleOnClick=!0}onselect(){const e=this.childCount()>0;return e&&this._dataDisplayDelegate.showProfile(this.lastChild().profile),e}onattach(){this.listItemElement.classList.add("profile-group-sidebar-tree-item"),this.listItemElement.createChild("div","icon"),this.listItemElement.createChild("div","titles no-subtitle").createChild("span","title-container").createChild("span","title").textContent=this._title}}export class ProfilesSidebarTreeElement extends UI.TreeOutline.TreeElement{constructor(e){super("",!1),this.selectable=!0,this._panel=e}onselect(){return this._panel._showLauncherView(),!0}onattach(){this.listItemElement.classList.add("profile-launcher-view-tree-item"),this.listItemElement.createChild("div","icon"),this.listItemElement.createChild("div","titles no-subtitle").createChild("span","title-container").createChild("span","title").textContent=Common.UIString.UIString("Profiles")}}export class JSProfilerPanel extends ProfilesPanel{constructor(){super("js_profiler",[instance.cpuProfileType],"profiler.js-toggle-recording")}wasShown(){UI.Context.Context.instance().setFlavor(JSProfilerPanel,this)}willHide(){UI.Context.Context.instance().setFlavor(JSProfilerPanel,null)}handleAction(e,t){const i=UI.Context.Context.instance().flavor(JSProfilerPanel);return console.assert(i&&i instanceof JSProfilerPanel),i.toggleRecord(),!0}}