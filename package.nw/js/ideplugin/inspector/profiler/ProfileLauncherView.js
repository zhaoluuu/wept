import*as Common from"../common/common.js";import*as UI from"../ui/ui.js";import{IsolateSelector}from"./IsolateSelector.js";import{ProfileType}from"./ProfileHeader.js";export class ProfileLauncherView extends UI.Widget.VBox{constructor(t){super(),this.registerRequiredCSS("profiler/profileLauncherView.css"),this._panel=t,this.element.classList.add("profile-launcher-view"),this._contentElement=this.element.createChild("div","profile-launcher-view-content vbox");const e=this._contentElement.createChild("div","vbox");this._selectedProfileTypeSetting=Common.Settings.Settings.instance().createSetting("selectedProfileType","CPU"),this._profileTypeHeaderElement=e.createChild("h1"),this._profileTypeSelectorForm=e.createChild("form"),UI.ARIAUtils.markAsRadioGroup(this._profileTypeSelectorForm);const o=this._contentElement.createChild("div","vbox profile-isolate-selector-block");o.createChild("h1").textContent=ls`Select JavaScript VM instance`;const i=new IsolateSelector;i.show(o.createChild("div","vbox profile-launcher-target-list")),o.appendChild(i.totalMemoryElement());const n=this._contentElement.createChild("div","hbox profile-launcher-buttons");this._controlButton=UI.UIUtils.createTextButton("",this._controlButtonClicked.bind(this),"",!0),this._loadButton=UI.UIUtils.createTextButton(ls`Load`,this._loadButtonClicked.bind(this),""),n.appendChild(this._controlButton),n.appendChild(this._loadButton),this._recordButtonEnabled=!0,this._typeIdToOptionElement=new Map}_loadButtonClicked(){this._panel.showLoadFromFileDialog()}_updateControls(){this._isEnabled&&this._recordButtonEnabled?this._controlButton.removeAttribute("disabled"):this._controlButton.setAttribute("disabled",""),this._controlButton.title=this._recordButtonEnabled?"":UI.UIUtils.anotherProfilerActiveLabel(),this._isInstantProfile?(this._controlButton.classList.remove("running"),this._controlButton.classList.add("primary-button"),this._controlButton.textContent=Common.UIString.UIString("Take snapshot")):this._isProfiling?(this._controlButton.classList.add("running"),this._controlButton.classList.remove("primary-button"),this._controlButton.textContent=Common.UIString.UIString("Stop")):(this._controlButton.classList.remove("running"),this._controlButton.classList.add("primary-button"),this._controlButton.textContent=Common.UIString.UIString("Start"));for(const t of this._typeIdToOptionElement.values())t.disabled=!!this._isProfiling}profileStarted(){this._isProfiling=!0,this._updateControls()}profileFinished(){this._isProfiling=!1,this._updateControls()}updateProfileType(t,e){this._isInstantProfile=t.isInstantProfile(),this._recordButtonEnabled=e,this._isEnabled=t.isEnabled(),this._updateControls()}addProfileType(t){const e=UI.UIUtils.createRadioLabel("profile-type",t.name);this._profileTypeSelectorForm.appendChild(e);const o=e.radioElement;this._typeIdToOptionElement.set(t.id,o),o._profileType=t,o.style.hidden=!0,o.addEventListener("change",this._profileTypeChanged.bind(this,t),!1);this._profileTypeSelectorForm.createChild("p").textContent=t.description,UI.ARIAUtils.setDescription(o,t.description);const i=t.customContent();i&&(this._profileTypeSelectorForm.createChild("p").appendChild(i),t.setCustomContentEnabled(!1));const n=this._typeIdToOptionElement.size>1?ls`Select profiling type`:t.name;this._profileTypeHeaderElement.textContent=n,UI.ARIAUtils.setAccessibleName(this._profileTypeSelectorForm,n)}restoreSelectedProfileType(){let t=this._selectedProfileTypeSetting.get();this._typeIdToOptionElement.has(t)||(t=this._typeIdToOptionElement.keys().next().value,this._selectedProfileTypeSetting.set(t)),this._typeIdToOptionElement.get(t).checked=!0;const e=this._typeIdToOptionElement.get(t)._profileType;for(const[e,o]of this._typeIdToOptionElement){const i=e===t;o._profileType.setCustomContentEnabled(i)}this.dispatchEventToListeners(Events.ProfileTypeSelected,e)}_controlButtonClicked(){this._panel.toggleRecord()}_profileTypeChanged(t){const e=this._selectedProfileTypeSetting.get();this._typeIdToOptionElement.get(e)._profileType.setCustomContentEnabled(!1),t.setCustomContentEnabled(!0),this.dispatchEventToListeners(Events.ProfileTypeSelected,t),this._isInstantProfile=t.isInstantProfile(),this._isEnabled=t.isEnabled(),this._updateControls(),this._selectedProfileTypeSetting.set(t.id)}}export const Events={ProfileTypeSelected:Symbol("ProfileTypeSelected")};