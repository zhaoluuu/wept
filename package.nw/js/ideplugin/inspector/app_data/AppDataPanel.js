import*as UI from"../ui/ui.js";import*as Common from"../common/common.js";import{each,keys,difference,last,isEmpty,now,startWith,isPrimitive,isArr}from"../third_party/licia.js";import JSONEditor from"../third_party/jsoneditor.js";import PluginMessenger from"../wx_main/PluginMessenger.js";import deepDiff from"./deepDiff.js";import AppDataItem from"./AppDataItem.js";export class AppDataPanel extends UI.Panel.PanelWithSidebar{constructor(){super("app-data"),this.registerRequiredCSS("app_data/appDataPanel.css"),this._initMessenger(),this._appDatas={},this._isArrData=!1,this._currentPath="",this._searchableView=new UI.SearchableView.SearchableView(this);const e=this._searchableView;this._editorViewToolbar=new UI.Toolbar.Toolbar("app-data-toolbar",e.element),UI.Utils.appendStyle(this._editorViewToolbar.element.shadowRoot,"app_data/appDataToolbar.css"),this.editorViews=e.element.createChild("div","vbox flex-auto"),this.editorViews.classList.add("app-data-editor-views"),this.splitWidget().setMainWidget(e),this._sidebarTree=new UI.TreeOutline.TreeOutlineInShadow,this._sidebarTree.registerRequiredCSS("app_data/appDataSidebar.css"),this.panelSidebarElement().appendChild(this._sidebarTree.element);const t=new UI.TreeOutline.TreeElement(Common.UIString.UIString("Pages"),!0);t.listItemElement.classList.add("app-data-list-title"),t.setCollapsible(!1),t.selectable=!1,this._sidebarTree.appendChild(t),this._refreshButton=this._addButton(Common.UIString.UIString("Refresh"),"largeicon-refresh",this.refresh),this._formatButton=this._addButton(Common.UIString.UIString("Format JSON data, with proper indentation and line feeds"),"jsoneditor-format",this.format),this._compactButton=this._addButton(Common.UIString.UIString("Compact JSON data, remove all whitespaces"),"jsoneditor-compact",this.compact),this._expandAllButton=this._addButton(Common.UIString.UIString("Expand all fields"),"jsoneditor-expand-all",this.expandAll),this._collapseAllButton=this._addButton(Common.UIString.UIString("Collapse all fields"),"jsoneditor-collapse-all",this.collapseAll),this._undoButton=this._addButton(Common.UIString.UIString("Undo last action"),"jsoneditor-undo",this.undo),this._redoButton=this._addButton(Common.UIString.UIString("Redo"),"jsoneditor-redo",this.redo);const i=new UI.Toolbar.ToolbarComboBox(this._modeChanged.bind(this),ls`Mode`);this._treeModeOption=i.createOption("Tree","tree"),i.addOption(this._treeModeOption),this._codeModeOption=i.createOption("Code","code"),i.addOption(this._codeModeOption),this._modeSelect=i,this._editingText=new UI.Toolbar.ToolbarText("Editing..."),this._editingText.setVisible(!1),this._isEditing=!1;const s=[this._refreshButton,new UI.Toolbar.ToolbarSeparator,this._formatButton,this._compactButton,this._expandAllButton,this._collapseAllButton,new UI.Toolbar.ToolbarSeparator,this._undoButton,this._redoButton,new UI.Toolbar.ToolbarSeparator,this._modeSelect,this._editingText];for(const e of s)this._editorViewToolbar.appendToolbarItem(e);this._updateToolbar(),this._editorPromise=self.runtime.extension(UI.TextEditor.TextEditorFactory).instance().then(e=>{this._editorFactory=e}),this._bindEvent()}wasShown(){this._appDataMessenger.send("GET_APP_DATA")}willHide(){this._appDataMessenger.send("ON_PANEL_HIDE")}refresh(){this._onAppDataUpdated({}),this._appDataMessenger.send("GET_APP_DATA")}searchCanceled(){delete this._searchConfig,this._hideSearchHighlights(),this._searchableView.updateSearchMatchesCount(0),delete this._currentSearchResultIndex,delete this._searchResults}performSearch(e,t,i){const s=e.query,o=s.trim();if(!o.length)return;this._searchConfig&&this._searchConfig.query===s?this._hideSearchHighlights():this.searchCanceled(),this._searchConfig=e;const a=this.visibleView.getJSONEditor().search(o);if(this._searchResults=a,this._searchableView.updateSearchMatchesCount(a.length),!a.length)return;this._currentSearchResultIndex>=a.length&&(this._currentSearchResultIndex=void 0);let r=this._currentSearchResultIndex;t&&(r=void 0===this._currentSearchResultIndex?i?-1:0:i?r-1:r+1,this._jumpToSearchResult(r))}jumpToNextSearchResult(){this._searchResults&&this.performSearch(this._searchConfig,!0)}jumpToPreviousSearchResult(){this._searchResults&&this.performSearch(this._searchConfig,!0,!0)}searchableView(){if("tree"===this.visibleView.getJSONEditor().getMode())return this._searchableView}supportsCaseSensitiveSearch(){return!1}supportsRegexSearch(){return!1}format(){this.visibleView.getJSONEditor().format()}compact(){this.visibleView.getJSONEditor().compact()}expandAll(){this.visibleView.getJSONEditor().expandAll()}collapseAll(){this.visibleView.getJSONEditor().collapseAll()}undo(){const e=this.visibleView.getJSONEditor();"code"===e.getMode()?e.cmEditor.undo():(e.history.undo(),this.onDataChange())}redo(){const e=this.visibleView.getJSONEditor();"code"===e.getMode()?e.cmEditor.redo():(e.history.redo(),this.onDataChange())}_hideSearchHighlights(){if(this.visibleView.getJSONEditor().search(""),this._activeResult){const{node:e,elem:t}=this._activeResult;"field"===t?delete e.searchFieldActive:delete e.searchValueActive,e.updateDom()}}_jumpToSearchResult(e){const t=this._searchResults;if(!t)return;this._currentSearchResultIndex=(e+this._searchResults.length)%this._searchResults.length;const i=t[e=this._currentSearchResultIndex];this._searchableView.updateCurrentMatchIndex(e);const{elem:s,node:o}=i;"field"===s?o.searchFieldActive=!0:o.searchValueActive=!0,this._activeResult=i,o.updateDom(),o.scrollTo()}_updateToolbar(){const e=this._editorViewToolbar,{visibleView:t}=this;if(!t)return this._formatButton.setVisible(!1),this._compactButton.setVisible(!1),e.setEnabled(!1);e.setEnabled(!0);const i=t.getJSONEditor(),s="code"===i.getMode();if(this._expandAllButton.setVisible(!s),this._collapseAllButton.setVisible(!s),this._formatButton.setVisible(s),this._compactButton.setVisible(s),s){const e=i.cmEditor.codeMirror(),{undo:t,redo:s}=e.historySize();this._undoButton.setEnabled(t>0),this._redoButton.setEnabled(s>0),this._modeSelect.select(this._codeModeOption)}else i.history&&(this._undoButton.setEnabled(i.history.canUndo()),this._redoButton.setEnabled(i.history.canRedo())),this._modeSelect.select(this._treeModeOption)}_bindEvent(){const e=this._editingText;this.editorViews.addEventListener("focus",()=>{this._isEditing=!0,e.setVisible(!0)},!0),this.editorViews.addEventListener("blur",()=>{this._isEditing=!1,e.setVisible(!1)},!0)}_modeChanged(){const e=this.visibleView.getJSONEditor(),t=this._modeSelect.selectedOption().value;"code"===t&&this._searchableView.cancelSearch(),e.setMode(t),this._updateToolbar()}showView(e,t){this.visibleView!==t&&(this.visibleView&&this.visibleView.detach(),t&&t.show(this.editorViews),this._searchableView.cancelSearch(),this._currentPath=e,this.visibleView=t,this._updateToolbar())}addPage(e){this._sidebarTree.insertChild(e,1)}removePage(e){this._sidebarTree.removeChild(e)}onDataChange(){let e={};each(this._appDatas,(t,i)=>{e[i]=t.get()}),this._isArrData&&(e=this._mapDataToArr(e)),this._appDataMessenger.send("WRITE_APP_DATA",e),this._updateToolbar()}_addButton(e,t,i){let s;return startWith(t,"jsoneditor")?(s=new UI.Toolbar.ToolbarButton(e),s.element.classList.add(t),s.element.classList.add("jsoneditor-icon")):s=new UI.Toolbar.ToolbarButton(e,t),s.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,i,this),s}_initMessenger(){const e=new PluginMessenger("PLUGIN_appdata_"+("RemoteDebug"===wxMain.type?"remotedebug":"miniprogram"));let t,i,s=0;const o=()=>{clearTimeout(t),t=setTimeout(()=>{this._isEditing?o():(s=now(),this._onAppDataUpdated(i))},200)};e.on("SEND_APP_DATA",e=>{isArr(e)?(this._isArrData=!0,e=this._arrDataToMap(e)):this._isArrData=!1,i=e,now()-s<200||this._isEditing?o():(s=now(),this._onAppDataUpdated(e))}),this._appDataMessenger=e}_arrDataToMap(e){const t={};return each(e,(e,i)=>{t[`${i} ${e.route}`]=e.data}),t}_mapDataToArr(e){const t=[];return each(e,(e,i)=>{const[s,o]=i.split(" ");t[s]={route:o,data:e}}),t}async _onAppDataUpdated(e){await this._editorPromise;const t=this._appDatas,i=!isEmpty(difference(keys(e),keys(t)));if(each(e,(e,i)=>{t[i]?this._updateJSON(i,e):t[i]=new AppDataItem(this,{path:i,data:e,editorFactory:this._editorFactory})}),each(t,(i,s)=>{e[s]||(i.destroy(),delete t[s])}),i){const i=last(keys(e));i?t[i].select():this.visibleView=null}this._updateToolbar()}_updateJSON(e,t){const i=this._appDatas[e],s=i.getJSONEditor();if(!s)return i.update(t);const o=s.get();if("code"===s.getMode())return s.update(t);const a=deepDiff(o,t);if(!a||0===a.length)return;let r,n;a.forEach(e=>{const{kind:t,path:i,rhs:o}=e,a=findNodeFromPath(s,i);if(a!==r&&(r=a,n=0),"E"===t){const e=getType(o);try{e!==a.type&&a.changeType(e)}catch(e){}try{isPrimitive(o)&&isPrimitive(a.getValue())?a.updateValue(o):a.setValue(o)}catch(e){}}else if("N"===t){const e=new Node(s,{field:i[i.length-1],value:o});a.appendChild(e)}else if("D"===t)a.parent.removeChild(a);else if("A"===t){const{item:t,index:i}=e;if("D"===t.kind)a.removeChild(a.childs[i-n]),n+=1;else if("N"===t.kind){a.childs||(a.childs=[]);const e=new Node(s,{field:void 0,value:t.rhs}),o=a.childs[i-1];a.insertAfter(e,o)}}});const d=s.get(),h=deepDiff(t,d);h&&h.length&&(console.log(d),console.log(t),console.log(h),console.log(a),console.error("some wrong"))}}function findNodeFromPath(e,t){let i=e.node;return t.forEach(e=>{const t=i.childs;if("number"!=typeof e)for(let s=0,o=t.length;s<o;s++){const o=t[s];if(o.field===e)return void(i=o)}else i=t[e]}),i}function getType(e){if(Array.isArray(e))return"array";const t=typeof e;return"string"===t||"object"===t?t:"auto"}const tempObj={},tempDiv=document.createElement("div"),tempEditor=new JSONEditor(tempDiv,{},tempObj),Node=tempEditor.node.constructor;tempEditor.destroy();