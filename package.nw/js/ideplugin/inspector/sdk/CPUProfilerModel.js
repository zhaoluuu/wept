import*as Common from"../common/common.js";import{DebuggerModel,Location}from"./DebuggerModel.js";import{RuntimeModel}from"./RuntimeModel.js";import{Capability,SDKModel,Target}from"./SDKModel.js";export class CPUProfilerModel extends SDKModel{constructor(e){super(e),this._isRecording=!1,this._nextAnonymousConsoleProfileNumber=1,this._anonymousConsoleProfileIdToTitle=new Map,this._profilerAgent=e.profilerAgent(),this._preciseCoverageDeltaUpdateCallback=null,e.registerProfilerDispatcher(this),this._profilerAgent.enable(),this._debuggerModel=e.model(DebuggerModel)}runtimeModel(){return this._debuggerModel.runtimeModel()}debuggerModel(){return this._debuggerModel}consoleProfileStarted(e,o,t){t||(t=Common.UIString.UIString("Profile %d",this._nextAnonymousConsoleProfileNumber++),this._anonymousConsoleProfileIdToTitle.set(e,t)),this._dispatchProfileEvent(Events.ConsoleProfileStarted,e,o,t)}consoleProfileFinished(e,o,t,r){r||(r=this._anonymousConsoleProfileIdToTitle.get(e),this._anonymousConsoleProfileIdToTitle.delete(e)),self.runtime.loadModulePromise("profiler").then(()=>{this._dispatchProfileEvent(Events.ConsoleProfileFinished,e,o,r,t)})}_dispatchProfileEvent(e,o,t,r,i){const s=Location.fromPayload(this._debuggerModel,t),l={id:this.target().id()+"."+o,scriptLocation:s,cpuProfile:i,title:r,cpuProfilerModel:this};this.dispatchEventToListeners(e,l)}isRecordingProfile(){return this._isRecording}startRecording(){this._isRecording=!0;return this._profilerAgent.setSamplingInterval(100),this._profilerAgent.start()}stopRecording(){return this._isRecording=!1,this._profilerAgent.stop()}startPreciseCoverage(e,o){this._preciseCoverageDeltaUpdateCallback=o;return this._profilerAgent.startPreciseCoverage(!1,e,!0)}async takePreciseCoverage(){const e=await this._profilerAgent.invoke_takePreciseCoverage({});return{timestamp:e&&e.timestamp||0,coverage:e&&e.result||[]}}stopPreciseCoverage(){return this._preciseCoverageDeltaUpdateCallback=null,this._profilerAgent.stopPreciseCoverage()}preciseCoverageDeltaUpdate(e,o,t){this._preciseCoverageDeltaUpdateCallback&&this._preciseCoverageDeltaUpdateCallback(e,o,t)}}export const Events={ConsoleProfileStarted:Symbol("ConsoleProfileStarted"),ConsoleProfileFinished:Symbol("ConsoleProfileFinished")};SDKModel.register(CPUProfilerModel,Capability.JS,!0);export let EventData;