import*as Common from"../common/common.js";import*as Platform from"../platform/platform.js";import{ConsoleMessage,ConsoleModel,MessageLevel,MessageSource}from"./ConsoleModel.js";import{Events as NetworkManagerEvents,Message,NetworkManager}from"./NetworkManager.js";import{Events as NetworkRequestEvents,InitiatorType,NetworkRequest}from"./NetworkRequest.js";import{Events as ResourceTreeModelEvents,ResourceTreeFrame,ResourceTreeModel}from"./ResourceTreeModel.js";import{RuntimeModel}from"./RuntimeModel.js";import{SDKModelObserver,TargetManager}from"./SDKModel.js";let _instance;export class NetworkLog extends Common.ObjectWrapper.ObjectWrapper{constructor(){super(),this._requests=[],this._sentNetworkRequests=[],this._receivedNetworkResponses=[],this._requestsSet=new Set,this._requestsMap=new Map,this._pageLoadForManager=new Map,this._isRecording=!0,this._modelListeners=new WeakMap,this._initiatorData=new WeakMap,TargetManager.instance().observeModels(NetworkManager,this)}static instance(){return _instance||(_instance=new NetworkLog),_instance}modelAdded(e){const t=[];t.push(e.addEventListener(NetworkManagerEvents.RequestStarted,this._onRequestStarted,this)),t.push(e.addEventListener(NetworkManagerEvents.RequestUpdated,this._onRequestUpdated,this)),t.push(e.addEventListener(NetworkManagerEvents.RequestRedirected,this._onRequestRedirect,this)),t.push(e.addEventListener(NetworkManagerEvents.RequestFinished,this._onRequestUpdated,this)),t.push(e.addEventListener(NetworkManagerEvents.MessageGenerated,this._networkMessageGenerated.bind(this,e))),t.push(e.addEventListener(NetworkManagerEvents.ResponseReceived,this._onResponseReceived,this));const s=e.target().model(ResourceTreeModel);s&&(t.push(s.addEventListener(ResourceTreeModelEvents.WillReloadPage,this._willReloadPage,this)),t.push(s.addEventListener(ResourceTreeModelEvents.MainFrameNavigated,this._onMainFrameNavigated,this)),t.push(s.addEventListener(ResourceTreeModelEvents.Load,this._onLoad,this)),t.push(s.addEventListener(ResourceTreeModelEvents.DOMContentLoaded,this._onDOMContentLoaded.bind(this,s)))),this._modelListeners.set(e,t)}modelRemoved(e){this._removeNetworkManagerListeners(e)}_removeNetworkManagerListeners(e){Common.EventTarget.EventTarget.removeEventListeners(this._modelListeners.get(e)||[])}setIsRecording(e){this._isRecording!==e&&(this._isRecording=e,e?TargetManager.instance().observeModels(NetworkManager,this):(TargetManager.instance().unobserveModels(NetworkManager,this),TargetManager.instance().models(NetworkManager).forEach(this._removeNetworkManagerListeners.bind(this))))}requestForURL(e){return this._requests.find(t=>t.url()===e)||null}originalRequestForURL(e){return this._sentNetworkRequests.find(t=>t.url===e)||null}originalResponseForURL(e){return this._receivedNetworkResponses.find(t=>t.url===e)||null}requests(){return this._requests}requestByManagerAndId(e,t){for(let s=this._requests.length-1;s>=0;s--){const r=this._requests[s];if(t===r.requestId()&&e===NetworkManager.forRequest(r))return r}return null}_requestByManagerAndURL(e,t){for(const s of this._requests)if(t===s.url()&&e===NetworkManager.forRequest(s))return s;return null}_initializeInitiatorSymbolIfNeeded(e){let t=this._initiatorData.get(e);return t||(t={info:null,chain:null,request:void 0},this._initiatorData.set(e,t),t)}initiatorInfoForRequest(e){const t=this._initializeInitiatorSymbolIfNeeded(e);if(t.info)return t.info;let s=InitiatorType.Other,r="",a=-1/0,o=-1/0,n=null,i=null;const d=e.initiator(),u=e.redirectSource();if(u)s=InitiatorType.Redirect,r=u.url();else if(d)if(d.type===Protocol.Network.InitiatorType.Parser)s=InitiatorType.Parser,r=d.url?d.url:r,a=d.lineNumber?d.lineNumber:a;else if(d.type===Protocol.Network.InitiatorType.Script){for(let e=d.stack;e;){const t=e.callFrames.length?e.callFrames[0]:null;if(t){s=InitiatorType.Script,r=t.url||Common.UIString.UIString("<anonymous>"),a=t.lineNumber,o=t.columnNumber,n=t.scriptId;break}e=e.parent}!d.stack&&d.url&&(s=InitiatorType.Script,r=d.url,a=d.lineNumber||0),d.stack&&d.stack.callFrames&&d.stack.callFrames.length&&(i=d.stack||null)}else d.type===Protocol.Network.InitiatorType.Preload?s=InitiatorType.Preload:d.type===Protocol.Network.InitiatorType.SignedExchange&&(s=InitiatorType.SignedExchange,r=d.url||"");return t.info={type:s,url:r,lineNumber:a,columnNumber:o,scriptId:n,stack:i},t.info}initiatorGraphForRequest(e){const t=new Map,s=NetworkManager.forRequest(e);for(const r of this._requests){if(s===NetworkManager.forRequest(r)&&this._initiatorChain(r).has(e)){const e=this._initiatorRequest(r);e&&t.set(r,e)}}return{initiators:this._initiatorChain(e),initiated:t}}_initiatorChain(e){const t=this._initializeInitiatorSymbolIfNeeded(e);let s=t.chain;if(s)return s;s=new Set;let r=e;for(;r;){const e=this._initializeInitiatorSymbolIfNeeded(r);if(e.chain){Platform.SetUtilities.addAll(s,e.chain);break}if(s.has(r))break;s.add(r),r=this._initiatorRequest(r)}return t.chain=s,s}_initiatorRequest(e){const t=this._initializeInitiatorSymbolIfNeeded(e);if(void 0!==t.request)return t.request;const s=this.initiatorInfoForRequest(e).url,r=NetworkManager.forRequest(e);return t.request=r?this._requestByManagerAndURL(r,s):null,t.request}_willReloadPage(){Common.Settings.Settings.instance().moduleSetting("network_log.preserve-log").get()||this.reset()}_onMainFrameNavigated(e){const t=e.data,s=t.resourceTreeModel().target().model(NetworkManager);if(!s||t.resourceTreeModel().target().parentTarget())return;if(t.url!==t.unreachableUrl()&&t.url.startsWith("chrome-error://"))return;const r=this._requests,a=this._requests.filter(e=>NetworkManager.forRequest(e)===s),o=this._requestsSet;this._requests=[],this._sentNetworkRequests=[],this._receivedNetworkResponses=[],this._requestsSet=new Set,this._requestsMap.clear(),this.dispatchEventToListeners(Events.Reset);let n=null;const i=[];for(const e of a)if(e.loaderId===t.loaderId){if(!n){n=new PageLoad(e);let t=e.redirectSource();for(;t;)i.push(t),t=t.redirectSource()}i.push(e)}const d=[];for(const e of r){if(!e.initiatedByServiceWorker())continue;i.some(t=>t.url()===e.url()&&t.issueTime()<=e.issueTime())&&d.push(e)}i.push(...d);for(const e of i)n&&n.bindRequest(e),o.delete(e),this._addRequest(e);if(Common.Settings.Settings.instance().moduleSetting("network_log.preserve-log").get())for(const e of o)this._addRequest(e);n&&this._pageLoadForManager.set(s,n)}_addRequest(e){this._requests.push(e),this._requestsSet.add(e);const t=this._requestsMap.get(e.requestId());t?t.push(e):this._requestsMap.set(e.requestId(),[e]),this.dispatchEventToListeners(Events.RequestAdded,e)}importRequests(e){this.reset(),this._requests=[],this._sentNetworkRequests=[],this._receivedNetworkResponses=[],this._requestsSet.clear(),this._requestsMap.clear();for(const t of e)this._addRequest(t)}_onRequestStarted(e){const t=e.data.request;e.data.originalRequest&&this._sentNetworkRequests.push(e.data.originalRequest),this._requestsSet.add(t);const s=NetworkManager.forRequest(t),r=s?this._pageLoadForManager.get(s):null;r&&r.bindRequest(t),this._addRequest(t)}_onResponseReceived(e){const t=e.data.response;this._receivedNetworkResponses.push(t)}_onRequestUpdated(e){const t=e.data;this._requestsSet.has(t)&&this.dispatchEventToListeners(Events.RequestUpdated,t)}_onRequestRedirect(e){const t=e.data;this._initiatorData.delete(t)}_onDOMContentLoaded(e,t){const s=e.target().model(NetworkManager),r=s?this._pageLoadForManager.get(s):null;r&&(r.contentLoadTime=t.data)}_onLoad(e){const t=e.data.resourceTreeModel.target().model(NetworkManager),s=t?this._pageLoadForManager.get(t):null;s&&(s.loadTime=e.data.loadTime)}reset(){this._requests=[],this._sentNetworkRequests=[],this._receivedNetworkResponses=[],this._requestsSet.clear(),this._requestsMap.clear();const e=new Set(TargetManager.instance().models(NetworkManager));for(const t of this._pageLoadForManager.keys())e.has(t)||this._pageLoadForManager.delete(t);this.dispatchEventToListeners(Events.Reset)}_networkMessageGenerated(e,t){const s=t.data,r=new ConsoleMessage(e.target().model(RuntimeModel),MessageSource.Network,s.warning?MessageLevel.Warning:MessageLevel.Info,s.message);this.associateConsoleMessageWithRequest(r,s.requestId),ConsoleModel.instance().addMessage(r)}associateConsoleMessageWithRequest(e,t){const s=e.target(),r=s?s.model(NetworkManager):null;if(!r)return;const a=this.requestByManagerAndId(r,t);if(!a)return;consoleMessageToRequest.set(e,a);const o=a.initiator();o&&(e.stackTrace=o.stack||void 0,o.url&&(e.url=o.url,e.line=o.lineNumber||0))}static requestForConsoleMessage(e){return consoleMessageToRequest.get(e)||null}requestsForId(e){return this._requestsMap.get(e)||[]}}const consoleMessageToRequest=new WeakMap;export class PageLoad{constructor(e){this.id=++PageLoad._lastIdentifier,this.url=e.url(),this.startTime=e.startTime,this.loadTime,this.contentLoadTime,this.mainRequest=e,this._showDataSaverWarningIfNeeded()}async _showDataSaverWarningIfNeeded(){const e=NetworkManager.forRequest(this.mainRequest);if(!e)return;this.mainRequest.finished||await this.mainRequest.once(NetworkRequestEvents.FinishedLoading);const t=this.mainRequest.requestHeaderValue("Save-Data");if(!PageLoad._dataSaverMessageWasShown&&t&&"on"===t){const t=Common.UIString.UIString("Consider disabling %s while debugging. For more info see: %s",Common.UIString.UIString("Chrome Data Saver"),"https://support.google.com/chrome/?p=datasaver");e.dispatchEventToListeners(NetworkManagerEvents.MessageGenerated,{message:t,requestId:this.mainRequest.requestId(),warning:!0}),PageLoad._dataSaverMessageWasShown=!0}}static forRequest(e){return pageLoadForRequest.get(e)||null}bindRequest(e){pageLoadForRequest.set(e,this)}}PageLoad._lastIdentifier=0;const pageLoadForRequest=new WeakMap;PageLoad._dataSaverMessageWasShown=!1;export const Events={Reset:Symbol("Reset"),RequestAdded:Symbol("RequestAdded"),RequestUpdated:Symbol("RequestUpdated")};let InitiatorData;export let InitiatorGraph;export let _InitiatorInfo;