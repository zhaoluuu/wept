import*as Common from"../common/common.js";import*as Host from"../host/host.js";import*as Platform from"../platform/platform.js";import*as ProtocolClient from"../protocol_client/protocol_client.js";const _registeredModels=new Map;export class SDKModel extends Common.ObjectWrapper.ObjectWrapper{constructor(e){super(),this._target=e}target(){return this._target}preSuspendModel(e){return Promise.resolve()}suspendModel(e){return Promise.resolve()}resumeModel(){return Promise.resolve()}postResumeModel(){return Promise.resolve()}dispose(){}static register(e,t,s){_registeredModels.set(e,{capabilities:t,autostart:s})}static get registeredModels(){return _registeredModels}}export class Target extends ProtocolClient.InspectorBackend.TargetBase{constructor(e,t,s,r,i,a,o,n){switch(super(r===Type.Node,i,a,n),this._targetManager=e,this._name=s,this._inspectedURL="",this._inspectedURLName="",this._capabilitiesMask=0,r){case Type.Frame:this._capabilitiesMask=Capability.Browser|Capability.Storage|Capability.DOM|Capability.JS|Capability.Log|Capability.Network|Capability.Target|Capability.Tracing|Capability.Emulation|Capability.Input|Capability.Inspector|Capability.Audits|Capability.WebAuthn,i||(this._capabilitiesMask|=Capability.DeviceEmulation|Capability.ScreenCapture|Capability.Security|Capability.ServiceWorker);break;case Type.ServiceWorker:this._capabilitiesMask=Capability.JS|Capability.Log|Capability.Network|Capability.Target|Capability.Inspector,i||(this._capabilitiesMask|=Capability.Browser);break;case Type.Worker:this._capabilitiesMask=Capability.JS|Capability.Log|Capability.Network|Capability.Target;break;case Type.Node:this._capabilitiesMask=Capability.JS;break;case Type.Browser:this._capabilitiesMask=Capability.Target}this._type=r,this._parentTarget=i,this._id=t,this._modelByConstructor=new Map,this._isSuspended=o}createModels(e){this._creatingModels=!0,this.model(SDK.ResourceTreeModel);const t=Array.from(SDKModel.registeredModels.keys());for(const s of t){(SDKModel.registeredModels.get(s).autostart||e.has(s))&&this.model(s)}this._creatingModels=!1}id(){return this._id}name(){return this._name||this._inspectedURLName}type(){return this._type}markAsNodeJSForTest(){super.markAsNodeJSForTest(),this._type=Type.Node}targetManager(){return this._targetManager}hasAllCapabilities(e){return(this._capabilitiesMask&e)===e}decorateLabel(e){return this._type===Type.Worker||this._type===Type.ServiceWorker?"âš™ "+e:e}parentTarget(){return this._parentTarget}dispose(e){super.dispose(e),this._targetManager.removeTarget(this);for(const e of this._modelByConstructor.values())e.dispose()}model(e){if(!this._modelByConstructor.get(e)){const t=SDKModel.registeredModels.get(e);if(void 0===t)throw"Model class is not registered @"+(new Error).stack;if((this._capabilitiesMask&t.capabilities)===t.capabilities){const t=new e(this);this._modelByConstructor.set(e,t),this._creatingModels||this._targetManager.modelAdded(this,e,t)}}return this._modelByConstructor.get(e)||null}models(){return this._modelByConstructor}inspectedURL(){return this._inspectedURL}setInspectedURL(e){this._inspectedURL=e;const t=Common.ParsedURL.ParsedURL.fromString(e);this._inspectedURLName=t?t.lastPathComponentWithFragment():"#"+this._id,this.parentTarget()||Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectedURLChanged(e||""),this._targetManager.dispatchEventToListeners(Events.InspectedURLChanged,this),this._name||this._targetManager.dispatchEventToListeners(Events.NameChanged,this)}async suspend(e){if(this._isSuspended)return Promise.resolve();this._isSuspended=!0,await Promise.all(Array.from(this.models().values(),t=>t.preSuspendModel(e))),await Promise.all(Array.from(this.models().values(),t=>t.suspendModel(e)))}async resume(){if(!this._isSuspended)return Promise.resolve();this._isSuspended=!1,await Promise.all(Array.from(this.models().values(),e=>e.resumeModel())),await Promise.all(Array.from(this.models().values(),e=>e.postResumeModel()))}suspended(){return this._isSuspended}}export const Capability={Browser:1,DOM:2,JS:4,Log:8,Network:16,Target:32,ScreenCapture:64,Tracing:128,Emulation:256,Security:512,Input:1024,Inspector:2048,DeviceEmulation:4096,Storage:8192,ServiceWorker:16384,Audits:32768,WebAuthn:65536,None:0};export const Type={Frame:"frame",ServiceWorker:"service-worker",Worker:"worker",Node:"node",Browser:"browser"};let targetManagerInstance;export class TargetManager extends Common.ObjectWrapper.ObjectWrapper{constructor(){super(),this._targets=new Set,this._observers=new Set,this._modelListeners=new Platform.Multimap,this._modelObservers=new Platform.Multimap,this._isSuspended=!1}static instance({forceNew:e}={forceNew:!1}){return targetManagerInstance&&!e||(targetManagerInstance=new TargetManager),targetManagerInstance}async suspendAllTargets(e){if(this._isSuspended)return;this._isSuspended=!0,this.dispatchEventToListeners(Events.SuspendStateChanged);const t=Array.from(this._targets.values(),t=>t.suspend(e));await Promise.all(t)}async resumeAllTargets(){if(!this._isSuspended)return;this._isSuspended=!1,this.dispatchEventToListeners(Events.SuspendStateChanged);const e=Array.from(this._targets.values(),e=>e.resume());await Promise.all(e)}allTargetsSuspended(){return this._isSuspended}models(e){const t=[];for(const s of this._targets){const r=s.model(e);r&&t.push(r)}return t}inspectedURL(){const e=this.mainTarget();return e?e.inspectedURL():""}observeModels(e,t){const s=this.models(e);this._modelObservers.set(e,t);for(const e of s)t.modelAdded(e)}unobserveModels(e,t){this._modelObservers.delete(e,t)}modelAdded(e,t,s){for(const e of this._modelObservers.get(t).values())e.modelAdded(s)}_modelRemoved(e,t,s){for(const e of this._modelObservers.get(t).values())e.modelRemoved(s)}addModelListener(e,t,s,r){for(const i of this.models(e))i.addEventListener(t,s,r);this._modelListeners.set(t,{modelClass:e,thisObject:r,listener:s})}removeModelListener(e,t,s,r){if(this._modelListeners.has(t)){for(const i of this.models(e))i.removeEventListener(t,s,r);for(const i of this._modelListeners.get(t))i.modelClass===e&&i.listener===s&&i.thisObject===r&&this._modelListeners.delete(t,i)}}observeTargets(e){if(this._observers.has(e))throw new Error("Observer can only be registered once");for(const t of this._targets)e.targetAdded(t);this._observers.add(e)}unobserveTargets(e){this._observers.delete(e)}createTarget(e,t,s,r,i,a,o){const n=new Target(this,e,t,s,r,i||"",this._isSuspended,o||null);a&&n.pageAgent().waitForDebugger(),n.createModels(new Set(this._modelObservers.keysArray())),this._targets.add(n);for(const e of[...this._observers])e.targetAdded(n);for(const e of n.models().keys()){const t=n.models().get(e);this.modelAdded(n,e,t)}for(const e of this._modelListeners.keysArray())for(const t of this._modelListeners.get(e)){const s=n.model(t.modelClass);s&&s.addEventListener(e,t.listener,t.thisObject)}return n}removeTarget(e){if(this._targets.has(e)){this._targets.delete(e);for(const t of e.models().keys()){const s=e.models().get(t);this._modelRemoved(e,t,s)}for(const t of[...this._observers])t.targetRemoved(e);for(const t of this._modelListeners.keysArray())for(const s of this._modelListeners.get(t)){const r=e.model(s.modelClass);r&&r.removeEventListener(t,s.listener,s.thisObject)}}}targets(){return[...this._targets]}targetById(e){return this.targets().find(t=>t.id()===e)||null}mainTarget(){return this._targets.size?this._targets.values().next().value:null}}export const Events={AvailableTargetsChanged:Symbol("AvailableTargetsChanged"),InspectedURLChanged:Symbol("InspectedURLChanged"),NameChanged:Symbol("NameChanged"),SuspendStateChanged:Symbol("SuspendStateChanged")};export class Observer{targetAdded(e){}targetRemoved(e){}}export class SDKModelObserver{modelAdded(e){}modelRemoved(e){}}