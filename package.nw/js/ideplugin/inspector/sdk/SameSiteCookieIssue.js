import*as Common from"../common/common.js";import{ls}from"../platform/platform.js";import{FrameManager}from"./FrameManager.js";import{Issue,IssueCategory,IssueDescription,IssueKind}from"./Issue.js";import{ResourceTreeFrame}from"./ResourceTreeModel.js";export class SameSiteCookieIssue extends Issue{constructor(e,s){super(e),this._issueDetails=s}primaryKey(){const{domain:e,path:s,name:t}=this._issueDetails.cookie,i=`${e};${s};${t}`,o=this._issueDetails.request?this._issueDetails.request.requestId:"no-request";return`${this.code()}-(${i})-(${o})`}static createIssuesFromSameSiteDetails(e){const s=[];if(e.cookieExclusionReasons&&e.cookieExclusionReasons.length>0){for(const t of e.cookieExclusionReasons){const i=SameSiteCookieIssue.codeForSameSiteDetails(t,e.cookieWarningReasons,e.operation,e.cookieUrl);i&&s.push(new SameSiteCookieIssue(i,e))}return s}if(e.cookieWarningReasons)for(const t of e.cookieWarningReasons){const i=SameSiteCookieIssue.codeForSameSiteDetails(t,[],e.operation,e.cookieUrl);i&&s.push(new SameSiteCookieIssue(i,e))}return s}static codeForSameSiteDetails(e,s,t,i){const o=i&&(i.startsWith("https://")||i.startsWith("wss://"))?"Secure":"Insecure";if(e===Protocol.Audits.SameSiteCookieExclusionReason.ExcludeSameSiteStrict||e===Protocol.Audits.SameSiteCookieExclusionReason.ExcludeSameSiteLax){if(s&&s.length>0){if(s.includes(Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteStrictLaxDowngradeStrict))return[Protocol.Audits.InspectorIssueCode.SameSiteCookieIssue,"ExcludeNavigationContextDowngrade",o].join("::");if(s.includes(Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteStrictCrossDowngradeStrict)||s.includes(Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteStrictCrossDowngradeLax)||s.includes(Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteLaxCrossDowngradeStrict)||s.includes(Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteLaxCrossDowngradeLax))return[Protocol.Audits.InspectorIssueCode.SameSiteCookieIssue,"ExcludeContextDowngrade",t,o].join("::")}return null}return e===Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteStrictLaxDowngradeStrict?[Protocol.Audits.InspectorIssueCode.SameSiteCookieIssue,e,o].join("::"):e===Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteStrictCrossDowngradeStrict||e===Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteStrictCrossDowngradeLax||e===Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteLaxCrossDowngradeLax||e===Protocol.Audits.SameSiteCookieWarningReason.WarnSameSiteLaxCrossDowngradeStrict?[Protocol.Audits.InspectorIssueCode.SameSiteCookieIssue,"WarnCrossDowngrade",t,o].join("::"):[Protocol.Audits.InspectorIssueCode.SameSiteCookieIssue,e,t].join("::")}cookies(){return[this._issueDetails.cookie]}requests(){return this._issueDetails.request?[this._issueDetails.request]:[]}getCategory(){return IssueCategory.SameSiteCookie}getDescription(){const e=issueDescriptions.get(this.code());return e||null}isCausedByThirdParty(){return isCausedByThirdParty(FrameManager.instance().getTopFrame(),this._issueDetails.cookieUrl)}}export function isCausedByThirdParty(e,s){if(!e)return!0;if(!s||""===e.domainAndRegistry())return!1;const t=Common.ParsedURL.ParsedURL.fromString(s);return!!t&&!IsSubdomainOf(t.domain(),e.domainAndRegistry())}function IsSubdomainOf(e,s){if(e.length<=s.length)return e===s;if(!e.endsWith(s))return!1;return e.substr(0,e.length-s.length).endsWith(".")}function textMessageWithResolutions(e,s,t){const i=(e,s)=>{let t=0;const i=s.matchAll(/\|(.*?)\|/g);for(const o of i)if(void 0!==o.index){const i=document.createElement("span");i.textContent=s.substring(t,o.index),e.appendChild(i);const n=document.createElement("code");n.textContent=o[1],t=o.index+o[0].length,e.appendChild(n)}if(t<s.length){const i=document.createElement("span");i.textContent=s.substring(t,s.length),e.appendChild(i)}},o=document.createElement("div");o.classList.add("message");const n=document.createElement("p");i(n,e),o.append(n);const a=document.createElement("p");o.append(a);const r=document.createElement("span");if(i(r,s),a.append(r),t.length>0){const e=document.createElement("ul");e.classList.add("resolutions-list"),a.append(e);for(const s of t){const t=document.createElement("li");i(t,s),e.append(t)}}return o}const resolutionsRead=[ls`Specify |SameSite=None| and |Secure| if the cookie should be sent in cross-site requests. This enables third-party use.`,ls`Specify |SameSite=Strict| or |SameSite=Lax| if the cookie should not be sent in cross-site requests`],resolutionsSet=[ls`Specify |SameSite=None| and |Secure| if the cookie is intended to be set in cross-site contexts. Note that only cookies sent over HTTPS may use the |Secure| attribute.`,ls`Specify |SameSite=Strict| or |SameSite=Lax| if the cookie should not be set by cross-site requests`],resolveBySentence=ls`Resolve this issue by updating the attributes of the cookie:`,sameSiteUnspecifiedErrorRead={title:ls`Indicate whether to send a cookie in a cross-site request by specifying its SameSite attribute`,message:()=>textMessageWithResolutions(ls`Because a cookie's |SameSite| attribute was not set or is invalid, it defaults to |SameSite=Lax|, which prevents the cookie from being sent in a cross-site request.
       This behavior protects user data from accidentally leaking to third parties and cross-site request forgery.`,resolveBySentence,resolutionsRead),issueKind:IssueKind.BreakingChange,links:[{link:"https://web.dev/samesite-cookies-explained/",linkTitle:ls`SameSite cookies explained`}]},sameSiteUnspecifiedErrorSet={title:ls`Indicate whether a cookie is intended to be set in a cross-site context by specifying its SameSite attribute`,message:()=>textMessageWithResolutions(ls`Because a cookie's |SameSite| attribute  was not set or is invalid, it defaults to |SameSite=Lax|, which prevents the cookie from being set in a cross-site context.
       This behavior protects user data from accidentally leaking to third parties and cross-site request forgery.`,resolveBySentence,resolutionsSet),issueKind:IssueKind.BreakingChange,links:[{link:"https://web.dev/samesite-cookies-explained/",linkTitle:ls`SameSite cookies explained`}]},sameSiteUnspecifiedWarnRead={title:ls`Indicate whether to send a cookie in a cross-site request by specifying its SameSite attribute`,message:()=>textMessageWithResolutions(ls`Because a cookie's |SameSite| attribute was not set or is invalid, it defaults to |SameSite=Lax|, which will prevent the cookie from being sent in a cross-site request in a future version of the browser.
       This behavior protects user data from accidentally leaking to third parties and cross-site request forgery.`,resolveBySentence,resolutionsRead),issueKind:IssueKind.BreakingChange,links:[{link:"https://web.dev/samesite-cookies-explained/",linkTitle:ls`SameSite cookies explained`}]},sameSiteUnspecifiedWarnSet={title:ls`Indicate whether a cookie is intended to be set in cross-site context by specifying its SameSite attribute`,message:()=>textMessageWithResolutions(ls`Because a cookie's |SameSite| attribute was not set or is invalid, it defaults to |SameSite=Lax|, which will prevents the cookie from being set in a cross-site context in a future version of the browser.
       This behavior protects user data from accidentally leaking to third parties and cross-site request forgery.`,resolveBySentence,resolutionsSet),issueKind:IssueKind.BreakingChange,links:[{link:"https://web.dev/samesite-cookies-explained/",linkTitle:ls`SameSite cookies explained`}]},sameSiteNoneInsecureErrorRead={title:ls`Mark cross-site cookies as Secure to allow them to be sent in cross-site requests`,message:()=>textMessageWithResolutions(ls`Cookies marked with |SameSite=None| must also be marked with |Secure| to get sent in cross-site requests.
       This behavior protects user data from being sent over an insecure connection.`,resolveBySentence,resolutionsRead),issueKind:IssueKind.BreakingChange,links:[{link:"https://web.dev/samesite-cookies-explained/",linkTitle:ls`SameSite cookies explained`}]},sameSiteNoneInsecureErrorSet={title:ls`Mark cross-site cookies as Secure to allow setting them in cross-site contexts`,message:()=>textMessageWithResolutions(ls`Cookies marked with |SameSite=None| must also be marked with |Secure| to allow setting them in a cross-site context.
       This behavior protects user data from being sent over an insecure connection.`,resolveBySentence,resolutionsSet),issueKind:IssueKind.BreakingChange,links:[{link:"https://web.dev/samesite-cookies-explained/",linkTitle:ls`SameSite cookies explained`}]},sameSiteNoneInsecureWarnRead={title:ls`Mark cross-site cookies as Secure to allow them to be sent in cross-site requests`,message:()=>textMessageWithResolutions(ls`In a future version of the browser, cookies marked with |SameSite=None| must also be marked with |Secure| to get sent in cross-site requests.
       This behavior protects user data from being sent over an insecure connection.`,resolveBySentence,resolutionsRead),issueKind:IssueKind.BreakingChange,links:[{link:"https://web.dev/samesite-cookies-explained/",linkTitle:ls`SameSite cookies explained`}]},sameSiteNoneInsecureWarnSet={title:ls`Mark cross-site cookies as Secure to allow setting them in cross-site contexts`,message:()=>textMessageWithResolutions(ls`In a future version of the browser, cookies marked with |SameSite=None| must also be marked with |Secure| to allow setting them in a cross-site context.
       This behavior protects user data from being sent over an insecure connection.`,resolveBySentence,resolutionsSet),issueKind:IssueKind.BreakingChange,links:[{link:"https://web.dev/samesite-cookies-explained/",linkTitle:ls`SameSite cookies explained`}]},schemefulSameSiteArticles=[{link:"https://www.chromium.org/updates/schemeful-same-site/schemeful-same-site-devtools-issues",linkTitle:ls`How Schemeful Same-Site Works`}],resolveBySentenceForDowngrade=ls`Resolve this issue by migrating your site (as defined by the eTLD+1) entirely to HTTPS. It is also recommended to mark the cookie with the |Secure| attribute if that is not already the case.`;function sameSiteWarnStrictLaxDowngradeStrict(e){const s=e?ls`a secure`:ls`an insecure`,t=e?ls`an insecure`:ls`a secure`;return{title:ls`Migrate entirely to HTTPS to continue having cookies sent on same-site requests`,message:()=>textMessageWithResolutions(ls`A cookie is being sent to ${s} origin from ${t} context on a navigation.
        Because this cookie is being sent across schemes on the same site, it will not be sent in a future version of Chrome.
        This behavior enhances the |SameSite| attribute’s protection of user data from request forgery by network attackers.`,resolveBySentenceForDowngrade,[]),issueKind:IssueKind.BreakingChange,links:schemefulSameSiteArticles}}function sameSiteExcludeNavigationContextDowngrade(e){const s=e?ls`a secure`:ls`an insecure`,t=e?ls`an insecure`:ls`a secure`;return{title:ls`Migrate entirely to HTTPS to have cookies sent on same-site requests`,message:()=>textMessageWithResolutions(ls`A cookie was not sent to ${s} origin from ${t} context on a navigation.
        Because this cookie would have been sent across schemes on the same site, it was not sent.
        This behavior enhances the |SameSite| attribute’s protection of user data from request forgery by network attackers.`,resolveBySentenceForDowngrade,[]),issueKind:IssueKind.BreakingChange,links:schemefulSameSiteArticles}}function sameSiteWarnCrossDowngradeRead(e){const s=e?ls`a secure`:ls`an insecure`,t=e?ls`an insecure`:ls`a secure`;return{title:ls`Migrate entirely to HTTPS to continue having cookies sent to same-site subresources`,message:()=>textMessageWithResolutions(ls`A cookie is being sent to ${s} origin from ${t} context.
        Because this cookie is being sent across schemes on the same site, it will not be sent in a future version of Chrome.
        This behavior enhances the |SameSite| attribute’s protection of user data from request forgery by network attackers.`,resolveBySentenceForDowngrade,[]),issueKind:IssueKind.BreakingChange,links:schemefulSameSiteArticles}}function sameSiteExcludeContextDowngradeRead(e){const s=e?ls`a secure`:ls`an insecure`,t=e?ls`an insecure`:ls`a secure`;return{title:ls`Migrate entirely to HTTPS to have cookies sent to same-site subresources`,message:()=>textMessageWithResolutions(ls`A cookie was not sent to ${s} origin from ${t} context.
        Because this cookie would have been sent across schemes on the same site, it was not sent.
        This behavior enhances the |SameSite| attribute’s protection of user data from request forgery by network attackers.`,resolveBySentenceForDowngrade,[]),issueKind:IssueKind.BreakingChange,links:schemefulSameSiteArticles}}function sameSiteWarnCrossDowngradeSet(e){const s=e?ls`a secure`:ls`an insecure`,t=e?ls`an insecure`:ls`a secure`;return{title:ls`Migrate entirely to HTTPS to continue allowing cookies to be set by same-site subresources`,message:()=>textMessageWithResolutions(ls`A cookie is being set by ${s} origin in ${t} context.
        Because this cookie is being set across schemes on the same site, it will be blocked in a future version of Chrome.
        This behavior enhances the |SameSite| attribute’s protection of user data from request forgery by network attackers.`,resolveBySentenceForDowngrade,[]),issueKind:IssueKind.BreakingChange,links:schemefulSameSiteArticles}}function sameSiteExcludeContextDowngradeSet(e){const s=e?ls`a secure`:ls`an insecure`,t=e?ls`an insecure`:ls`a secure`;return{title:ls`Migrate entirely to HTTPS to allow cookies to be set by same-site subresources`,message:()=>textMessageWithResolutions(ls`A cookie was not set by ${t} origin in ${s} context.
        Because this cookie would have been set across schemes on the same site, it was blocked.
        This behavior enhances the |SameSite| attribute’s protection of user data from request forgery by network attackers.`,resolveBySentenceForDowngrade,[]),issueKind:IssueKind.BreakingChange,links:schemefulSameSiteArticles}}const issueDescriptions=new Map([["SameSiteCookieIssue::ExcludeSameSiteUnspecifiedTreatedAsLax::ReadCookie",sameSiteUnspecifiedErrorRead],["SameSiteCookieIssue::ExcludeSameSiteUnspecifiedTreatedAsLax::SetCookie",sameSiteUnspecifiedErrorSet],["SameSiteCookieIssue::WarnSameSiteUnspecifiedLaxAllowUnsafe::ReadCookie",sameSiteUnspecifiedWarnRead],["SameSiteCookieIssue::WarnSameSiteUnspecifiedLaxAllowUnsafe::SetCookie",sameSiteUnspecifiedWarnSet],["SameSiteCookieIssue::ExcludeSameSiteNoneInsecure::ReadCookie",sameSiteNoneInsecureErrorRead],["SameSiteCookieIssue::ExcludeSameSiteNoneInsecure::SetCookie",sameSiteNoneInsecureErrorSet],["SameSiteCookieIssue::WarnSameSiteNoneInsecure::ReadCookie",sameSiteNoneInsecureWarnRead],["SameSiteCookieIssue::WarnSameSiteNoneInsecure::SetCookie",sameSiteNoneInsecureWarnSet],["SameSiteCookieIssue::WarnSameSiteUnspecifiedCrossSiteContext::ReadCookie",sameSiteUnspecifiedWarnRead],["SameSiteCookieIssue::WarnSameSiteUnspecifiedCrossSiteContext::SetCookie",sameSiteUnspecifiedWarnSet],["SameSiteCookieIssue::WarnSameSiteStrictLaxDowngradeStrict::Secure",sameSiteWarnStrictLaxDowngradeStrict(!0)],["SameSiteCookieIssue::WarnSameSiteStrictLaxDowngradeStrict::Insecure",sameSiteWarnStrictLaxDowngradeStrict(!1)],["SameSiteCookieIssue::WarnCrossDowngrade::ReadCookie::Secure",sameSiteWarnCrossDowngradeRead(!0)],["SameSiteCookieIssue::WarnCrossDowngrade::ReadCookie::Insecure",sameSiteWarnCrossDowngradeRead(!1)],["SameSiteCookieIssue::WarnCrossDowngrade::SetCookie::Secure",sameSiteWarnCrossDowngradeSet(!0)],["SameSiteCookieIssue::WarnCrossDowngrade::SetCookie::Insecure",sameSiteWarnCrossDowngradeSet(!1)],["SameSiteCookieIssue::ExcludeNavigationContextDowngrade::Secure",sameSiteExcludeNavigationContextDowngrade(!0)],["SameSiteCookieIssue::ExcludeNavigationContextDowngrade::Insecure",sameSiteExcludeNavigationContextDowngrade(!1)],["SameSiteCookieIssue::ExcludeContextDowngrade::ReadCookie::Secure",sameSiteExcludeContextDowngradeRead(!0)],["SameSiteCookieIssue::ExcludeContextDowngrade::ReadCookie::Insecure",sameSiteExcludeContextDowngradeRead(!1)],["SameSiteCookieIssue::ExcludeContextDowngrade::SetCookie::Secure",sameSiteExcludeContextDowngradeSet(!0)],["SameSiteCookieIssue::ExcludeContextDowngrade::SetCookie::Insecure",sameSiteExcludeContextDowngradeSet(!1)]]);