import*as Common from"../common/common.js";export const IssueCategory={CrossOriginEmbedderPolicy:Symbol("CrossOriginEmbedderPolicy"),MixedContent:Symbol("MixedContent"),SameSiteCookie:Symbol("SameSiteCookie"),HeavyAd:Symbol("HeavyAd"),ContentSecurityPolicy:Symbol("ContentSecurityPolicy"),Other:Symbol("Other")};export const IssueKind={BreakingChange:Symbol("BreakingChange")};export function getShowThirdPartyIssuesSetting(){return Common.Settings.Settings.instance().createSetting("showThirdPartyIssues",!1)}export let IssueDescription;export let MarkdownIssueDescription;export let AffectedElement;export let AffectedSource;export class Issue extends Common.ObjectWrapper.ObjectWrapper{constructor(e){super(),this._code=e}code(){return this._code}primaryKey(){throw new Error("Not implemented")}blockedByResponseDetails(){return[]}cookies(){return[]}elements(){return[]}heavyAds(){return[]}mixedContents(){return[]}requests(){return[]}sources(){return[]}isAssociatedWithRequestId(e){for(const t of this.requests())if(t.requestId===e)return!0;return!1}getDescription(){throw new Error("Not implemented")}getCategory(){throw new Error("Not implemented")}isCausedByThirdParty(){return!1}}