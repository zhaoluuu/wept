import*as Common from"../common/common.js";import*as Diff from"../diff/diff.js";import*as Host from"../host/host.js";import*as UI from"../ui/ui.js";import{FilteredListWidget,Provider}from"./FilteredListWidget.js";import{QuickOpenImpl}from"./QuickOpen.js";export class CommandMenu{constructor(){this._commands=[],this._loadCommands()}static createCommand(t){const{category:e,keys:o,title:n,shortcut:s,executeHandler:r,availableHandler:i,userActionCode:a}=t,c=o.split(",");let m="";c.forEach(t=>{m+=ls(t.trim())+"\0"});let d=r;if(a){const t=a;d=()=>{Host.userMetrics.actionTaken(t),r()}}return new Command(e,n,m,s,d,i)}static createSettingCommand(t,e,o){const n=t.descriptor().category||"",s=t.descriptor().tags||"",r=!!t.descriptor().reloadRequired,i=Common.Settings.Settings.instance().moduleSetting(t.descriptor().settingName);return CommandMenu.createCommand({category:ls(n),keys:s,title:e,shortcut:"",executeHandler:()=>{i.set(o),r&&UI.InspectorView.InspectorView.instance().displayReloadRequiredWarning(ls`One or more settings have changed which requires a reload to take effect.`)},availableHandler:function(){return i.get()!==o}})}static createActionCommand(t){const{action:e,userActionCode:o}=t,n=self.UI.shortcutRegistry.shortcutTitleForAction(e.id())||"";return CommandMenu.createCommand({category:e.category(),keys:e.tags(),title:e.title(),shortcut:n,executeHandler:e.execute.bind(e),userActionCode:o})}static createRevealViewCommand(t){const{extension:e,category:o,userActionCode:n}=t,s=e.descriptor().id;return CommandMenu.createCommand({category:o,keys:e.descriptor().tags||"",title:Common.UIString.UIString("Show %s",e.title()),shortcut:"",executeHandler:UI.ViewManager.ViewManager.instance().showView.bind(UI.ViewManager.ViewManager.instance(),s,!0),userActionCode:n})}_loadCommands(){const t=new Map;self.runtime.extensions(UI.View.ViewLocationResolver).forEach(e=>{const o=e.descriptor().category,n=e.descriptor().name;o&&n&&t.set(n,o)});const e=self.runtime.extensions("view");for(const o of e){const e=t.get(o.descriptor().location);if(!e)continue;const n={extension:o,category:ls(e),userActionCode:void 0};"Settings"===e&&(n.userActionCode=Host.UserMetrics.Action.SettingsOpenedFromCommandMenu),this._commands.push(CommandMenu.createRevealViewCommand(n))}const o=self.runtime.extensions("setting");for(const t of o){const e=t.descriptor().options;if(e&&t.descriptor().category)for(const o of e)this._commands.push(CommandMenu.createSettingCommand(t,ls(o.title),o.value))}}commands(){return this._commands}}export let ActionCommandOptions;export let RevealViewCommandOptions;export let CreateCommandOptions;export class CommandMenuProvider extends Provider{constructor(){super(),this._commands=[]}attach(){const t=commandMenu.commands(),e=UI.ActionRegistry.ActionRegistry.instance().availableActions();for(const t of e){const e=t.category();if(!e)continue;const o={action:t};"Settings"===e&&(o.userActionCode=Host.UserMetrics.Action.SettingsOpenedFromCommandMenu),this._commands.push(CommandMenu.createActionCommand(o))}for(const e of t)e.available()&&this._commands.push(e);this._commands=this._commands.sort((function(t,e){const o=t.category().compareTo(e.category());return o||t.title().compareTo(e.title())}))}detach(){this._commands=[]}itemCount(){return this._commands.length}itemKeyAt(t){return this._commands[t].key()}itemScoreAt(t,e){const o=this._commands[t];let n=Diff.Diff.DiffWrapper.characterScore(e.toLowerCase(),o.title().toLowerCase());return o.category().startsWith("Panel")?n+=2:o.category().startsWith("Drawer")&&(n+=1),n}renderItem(t,e,o,n){const s=this._commands[t];o.removeChildren();const r=o.createChild("span","tag"),i=String.hashCode(s.category())%MaterialPaletteColors.length;r.style.backgroundColor=MaterialPaletteColors[i],r.textContent=s.category(),o.createTextChild(s.title()),FilteredListWidget.highlightRanges(o,e,!0),n.textContent=s.shortcut()}selectItem(t,e){null!==t&&(this._commands[t].execute(),Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelectCommandFromCommandMenu))}notFoundText(){return ls`No commands found`}}export const MaterialPaletteColors=["#F44336","#E91E63","#9C27B0","#673AB7","#3F51B5","#03A9F4","#00BCD4","#009688","#4CAF50","#8BC34A","#CDDC39","#FFC107","#FF9800","#FF5722","#795548","#9E9E9E","#607D8B"];export class Command{constructor(t,e,o,n,s,r){this._category=t,this._title=e,this._key=t+"\0"+e+"\0"+o,this._shortcut=n,this._executeHandler=s,this._availableHandler=r}category(){return this._category}title(){return this._title}key(){return this._key}shortcut(){return this._shortcut}available(){return!this._availableHandler||this._availableHandler()}execute(){this._executeHandler()}}export class ShowActionDelegate{handleAction(t,e){return Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront(),QuickOpenImpl.show(">"),!0}}export const commandMenu=new CommandMenu;