import*as UI from"../ui/ui.js";import{FilteredListWidget,Provider}from"./FilteredListWidget.js";export const history=[];export class QuickOpenImpl{constructor(){this._prefix=null,this._query="",this._providers=new Map,this._prefixes=[],this._filteredListWidget=null,self.runtime.extensions(Provider).forEach(this._addProvider.bind(this)),this._prefixes.sort((e,i)=>i.length-e.length)}static show(e){const i=new this,t=new FilteredListWidget(null,history,i._queryChanged.bind(i));i._filteredListWidget=t,t.setPlaceholder(ls`Type '?' to see available commands`,ls`Type question mark to see available commands`),t.showAsDialog(),t.setQuery(e)}_addProvider(e){const i=e.descriptor().prefix;this._prefixes.push(i),this._providers.set(i,e.instance.bind(e))}_queryChanged(e){const i=this._prefixes.find(i=>e.startsWith(i));"string"==typeof i&&this._prefix!==i&&(this._prefix=i,this._filteredListWidget.setPrefix(i),this._filteredListWidget.setProvider(null),this._providers.get(i)().then(e=>{this._prefix===i&&(this._filteredListWidget.setProvider(e),this._providerLoadedForTest(e))}))}_providerLoadedForTest(e){}}export class ShowActionDelegate{handleAction(e,i){switch(i){case"quickOpen.show":return QuickOpenImpl.show(""),!0}return!1}}