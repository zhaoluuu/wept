import*as Common from"../common/common.js";import*as UI from"../ui/ui.js";import{Events,LighthouseController,RuntimeSettings}from"./LighthouseController.js";export class StatusView{constructor(e){this._controller=e,this._statusView=null,this._statusHeader=null,this._progressWrapper=null,this._progressBar=null,this._statusText=null,this._cancelButton=null,this._inspectedURL="",this._textChangedAt=0,this._fastFactsQueued=FastFacts.slice(),this._currentPhase=null,this._scheduledTextChangeTimeout=null,this._scheduledFastFactTimeout=null,this._dialog=new UI.Dialog.Dialog,this._dialog.setDimmed(!0),this._dialog.setCloseOnEscape(!1),this._dialog.setOutsideClickCallback(e=>e.consume(!0)),this._render()}_render(){const e=UI.Utils.createShadowRootWithCoreStyles(this._dialog.contentElement,"lighthouse/lighthouseDialog.css").createChild("div","lighthouse-view vbox"),t=UI.UIUtils.createTextButton(ls`Cancel`,this._cancel.bind(this)),s=UI.Fragment.Fragment.build`
      <div class="lighthouse-view vbox">
        <h2 $="status-header">Auditing your web page…</h2>
        <div class="lighthouse-status vbox" $="status-view">
          <div class="lighthouse-progress-wrapper" $="progress-wrapper">
            <div class="lighthouse-progress-bar" $="progress-bar"></div>
          </div>
          <div class="lighthouse-status-text" $="status-text"></div>
        </div>
        ${t}
      </div>
    `;e.appendChild(s.element()),this._statusView=s.$("status-view"),this._statusHeader=s.$("status-header"),this._progressWrapper=s.$("progress-wrapper"),this._progressBar=s.$("progress-bar"),this._statusText=s.$("status-text"),UI.ARIAUtils.markAsProgressBar(this._progressBar,0,StatusPhases.length-1),this._cancelButton=t,UI.ARIAUtils.markAsStatus(this._statusText),this._dialog.setDefaultFocusedElement(t),this._dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.SetExactWidthMaxHeight),this._dialog.setMaxContentSize(new UI.Geometry.Size(500,400))}_reset(){this._resetProgressBarClasses(),clearTimeout(this._scheduledFastFactTimeout),this._textChangedAt=0,this._fastFactsQueued=FastFacts.slice(),this._currentPhase=null,this._scheduledTextChangeTimeout=null,this._scheduledFastFactTimeout=null}show(e){this._reset(),this.updateStatus(ls`Loading…`);const t=Common.ParsedURL.ParsedURL.fromString(this._inspectedURL),s=t&&t.host,i=s?ls`Auditing ${s}`:ls`Auditing your web page`;this._renderStatusHeader(i),this._dialog.show(e)}_renderStatusHeader(e){this._statusHeader.textContent=e+"…"}hide(){this._dialog.isShowing()&&this._dialog.hide()}setInspectedURL(e=""){this._inspectedURL=e}updateStatus(e){if(!e||!this._statusText)return;if(e.startsWith("Cancel"))return this._commitTextChange(Common.UIString.UIString("Cancelling…")),void clearTimeout(this._scheduledFastFactTimeout);const t=this._getPhaseForMessage(e),s=StatusPhases.indexOf(t),i=StatusPhases.indexOf(this._currentPhase);if(t||this._currentPhase){if(t&&(!this._currentPhase||i<s)){this._currentPhase=t;const e=this._getMessageForPhase(t);this._scheduleTextChange(e),this._scheduleFastFactCheck(),this._resetProgressBarClasses(),this._progressBar.classList.add(t.progressBarClass),UI.ARIAUtils.setProgressBarValue(this._progressBar,s,e)}}else this._commitTextChange(Common.UIString.UIString("Lighthouse is warming up…")),clearTimeout(this._scheduledFastFactTimeout)}_cancel(){this._controller.dispatchEventToListeners(Events.RequestLighthouseCancel)}_getMessageForPhase(e){if(e.message)return e.message;const t=RuntimeSettings.find(e=>"lighthouse.device_type"===e.setting.name).setting.get(),s=RuntimeSettings.find(e=>"lighthouse.throttling"===e.setting.name).setting.get(),i=LoadingMessages.find(e=>e.deviceType===t&&e.throttling===s);return i?i.message:ls`Lighthouse is loading your page`}_getPhaseForMessage(e){return StatusPhases.find(t=>e.startsWith(t.statusMessagePrefix))}_resetProgressBarClasses(){this._progressBar&&(this._progressBar.className="lighthouse-progress-bar")}_scheduleFastFactCheck(){this._currentPhase&&!this._scheduledFastFactTimeout&&(this._scheduledFastFactTimeout=setTimeout(()=>{this._updateFastFactIfNecessary(),this._scheduledFastFactTimeout=null,this._scheduleFastFactCheck()},100))}_updateFastFactIfNecessary(){if(performance.now()-this._textChangedAt<fastFactRotationInterval)return;if(!this._fastFactsQueued.length)return;const e=Math.floor(Math.random()*this._fastFactsQueued.length);this._scheduleTextChange(ls`\ud83d\udca1 ${this._fastFactsQueued[e]}`),this._fastFactsQueued.splice(e,1)}_commitTextChange(e){this._statusText&&(this._textChangedAt=performance.now(),this._statusText.textContent=e)}_scheduleTextChange(e){this._scheduledTextChangeTimeout&&clearTimeout(this._scheduledTextChangeTimeout);const t=performance.now()-this._textChangedAt,s=minimumTextVisibilityDuration-t;this._scheduledTextChangeTimeout=setTimeout(()=>{this._commitTextChange(e)},Math.max(s,0))}renderBugReport(e){if(console.error(e),clearTimeout(this._scheduledFastFactTimeout),clearTimeout(this._scheduledTextChangeTimeout),this._resetProgressBarClasses(),this._progressBar.classList.add("errored"),this._commitTextChange(""),this._statusText.createChild("p").createTextChild(Common.UIString.UIString("Ah, sorry! We ran into an error.")),KnownBugPatterns.some(t=>t.test(e.message))){const e=Common.UIString.UIString("Try to navigate to the URL in a fresh Chrome profile without any other tabs or extensions open and try again.");this._statusText.createChild("p").createTextChild(e)}else this._renderBugReportBody(e,this._inspectedURL)}renderText(e,t){this._renderStatusHeader(e),this._commitTextChange(t)}toggleCancelButton(e){this._cancelButton.style.visibility=e?"visible":"hidden"}_renderBugReportBody(e,t){const s=`\n${e.message}\n\`\`\`\nChannel: DevTools\nInitial URL: ${t}\nChrome Version: ${navigator.userAgent.match(/Chrome\/(\S+)/)[1]}\nStack Trace: ${e.stack}\n\`\`\`\n`;this._statusText.createChild("p").createTextChild(ls`If this issue is reproducible, please report it at the Lighthouse GitHub repo.`),this._statusText.createChild("code","monospace").createTextChild(s.trim())}}export const fastFactRotationInterval=6e3;export const minimumTextVisibilityDuration=3e3;const KnownBugPatterns=[/PARSING_PROBLEM/,/DOCUMENT_REQUEST/,/READ_FAILED/,/TRACING_ALREADY_STARTED/,/^You must provide a url to the runner/,/^You probably have multiple tabs open/];export const StatusPhases=[{id:"loading",progressBarClass:"loading",statusMessagePrefix:"Loading page"},{id:"gathering",progressBarClass:"gathering",message:ls`Lighthouse is gathering information about the page to compute your score.`,statusMessagePrefix:"Gathering"},{id:"auditing",progressBarClass:"auditing",message:ls`Almost there! Lighthouse is now generating your report.`,statusMessagePrefix:"Auditing"}];const LoadingMessages=[{deviceType:"mobile",throttling:"on",message:ls`Lighthouse is loading your page with throttling to measure performance on a mobile device on 3G.`},{deviceType:"desktop",throttling:"on",message:ls`Lighthouse is loading your page with throttling to measure performance on a slow desktop on 3G.`},{deviceType:"mobile",throttling:"off",message:ls`Lighthouse is loading your page with mobile emulation.`},{deviceType:"desktop",throttling:"off",message:ls`Lighthouse is loading your page.`}],FastFacts=[ls`1MB takes a minimum of 5 seconds to download on a typical 3G connection [Source: WebPageTest and DevTools 3G definition].`,ls`Rebuilding Pinterest pages for performance increased conversion rates by 15% [Source: WPO Stats]`,ls`By reducing the response size of JSON needed for displaying comments, Instagram saw increased impressions [Source: WPO Stats]`,ls`Walmart saw a 1% increase in revenue for every 100ms improvement in page load [Source: WPO Stats]`,ls`If a site takes >1 second to become interactive, users lose attention, and their perception of completing the page task is broken [Source: Google Developers Blog]`,ls`75% of global mobile users in 2016 were on 2G or 3G [Source: GSMA Mobile]`,ls`The average user device costs less than 200 USD. [Source: International Data Corporation]`,ls`19 seconds is the average time a mobile web page takes to load on a 3G connection [Source: Google DoubleClick blog]`,ls`70% of mobile pages take nearly 7 seconds for the visual content above the fold to display on the screen. [Source: Think with Google]`,ls`As page load time increases from one second to seven seconds, the probability of a mobile site visitor bouncing increases 113%. [Source: Think with Google]`,ls`As the number of elements on a page increases from 400 to 6,000, the probability of conversion drops 95%. [Source: Think with Google]`,ls`70% of mobile pages weigh over 1MB, 36% over 2MB, and 12% over 4MB. [Source: Think with Google]`,ls`Lighthouse only simulates mobile performance; to measure performance on a real device, try WebPageTest.org [Source: Lighthouse team]`];