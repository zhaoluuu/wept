{
  "App": {
    "prefix": "App",
    "body": [
      "App({",
      "",
      "  /**",
      "   * 当小程序初始化完成时，会触发 onLaunch（全局只触发一次）",
      "   */",
      "  onLaunch: function () {",
      "    $1",
      "  },",
      "",
      "  /**",
      "   * 当小程序启动，或从后台进入前台显示，会触发 onShow",
      "   */",
      "  onShow: function (options) {",
      "    $2",
      "  },",
      "",
      "  /**",
      "   * 当小程序从前台进入后台，会触发 onHide",
      "   */",
      "  onHide: function () {",
      "    $3",
      "  },",
      "",
      "  /**",
      "   * 当小程序发生脚本错误，或者 api 调用失败时，会触发 onError 并带上错误信息",
      "   */",
      "  onError: function (msg) {",
      "    $4",
      "  }",
      "})",
      ""
    ],
    "description": "Contruct an App instance. App() 函数用来注册一个小程序。接受一个 object 参数，其指定小程序的生命周期函数等。"
  },
  "Page": {
    "prefix": "Page",
    "body": [
      "Page({",
      "",
      "  /**",
      "   * 页面的初始数据",
      "   */",
      "  data: {",
      "    $1",
      "  },",
      "",
      "  /**",
      "   * 生命周期函数--监听页面加载",
      "   */",
      "  onLoad: function (options) {",
      "    $2",
      "  },",
      "",
      "  /**",
      "   * 生命周期函数--监听页面初次渲染完成",
      "   */",
      "  onReady: function () {",
      "    $3",
      "  },",
      "",
      "  /**",
      "   * 生命周期函数--监听页面显示",
      "   */",
      "  onShow: function () {",
      "    $4",
      "  },",
      "",
      "  /**",
      "   * 生命周期函数--监听页面隐藏",
      "   */",
      "  onHide: function () {",
      "    $5",
      "  },",
      "",
      "  /**",
      "   * 生命周期函数--监听页面卸载",
      "   */",
      "  onUnload: function () {",
      "    $6",
      "  },",
      "",
      "  /**",
      "   * 页面相关事件处理函数--监听用户下拉动作",
      "   */",
      "  onPullDownRefresh: function () {",
      "    $7",
      "  },",
      "",
      "  /**",
      "   * 页面上拉触底事件的处理函数",
      "   */",
      "  onReachBottom: function () {",
      "    $8",
      "  },",
      "",
      "  /**",
      "   * 用户点击右上角分享",
      "   */",
      "  onShareAppMessage: function () {",
      "    $9",
      "  }",
      "})"
    ],
    "description": "Contruct a Page instance. Page() 函数用来注册一个页面。接受一个 object 参数，其指定页面的初始数据、生命周期函数、事件处理函数等。"
  },
  "encode": {
    "prefix": "encode",
    "body": [
      "wx.encode({",
      "  data: '${1:data}',",
      "  format: ${2:format},",
      "})"
    ],
    "description": "/** [ArrayBuffer wx.encode(Object object)](https://developers.weixin.qq.com/minigame/dev/api/util/wx.encode.html)\n         *\n         * 将字符串按照指定的编码格式编码成 ArrayBuffer */",
    "detail": "function",
    "kind": 9
  },
  "setHandoffQuery": {
    "prefix": "setHandoffQuery",
    "body": [
      "wx.setHandoffQuery('${1:query}')"
    ],
    "description": "/** [Boolean wx.setHandoffQuery(String query)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.setHandoffQuery.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 设置接力参数，该接口需要在游戏域调用 */",
    "detail": "function",
    "kind": 9
  },
  "getAccountInfoSync": {
    "prefix": "getAccountInfoSync",
    "body": [
      "wx.getAccountInfoSync()"
    ],
    "description": "/** [Object wx.getAccountInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/open-api/account-info/wx.getAccountInfoSync.html)\n*\n* 需要基础库： `2.11.2`\n*\n* 获取当前帐号信息。线上小程序版本号仅支持在正式版小程序中获取，开发版和体验版中无法获取。\n*\n* **示例代码**\n*\n* ```js\nconst accountInfo = wx.getAccountInfoSync();\nconsole.log(accountInfo.miniProgram.appId) // 小程序 appId\nconsole.log(accountInfo.plugin.appId) // 插件 appId\nconsole.log(accountInfo.plugin.version) // 插件版本号， 'a.b.c' 这样的形式\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getAppAuthorizeSetting": {
    "prefix": "getAppAuthorizeSetting",
    "body": [
      "wx.getAppAuthorizeSetting()"
    ],
    "description": "/** [Object wx.getAppAuthorizeSetting()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getAppAuthorizeSetting.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取微信APP授权设置\n*\n* **示例代码**\n*\n* ```js\nconst appAuthorizeSetting = wx.getAppAuthorizeSetting()\n\nconsole.log(appAuthorizeSetting.albumAuthorized)\nconsole.log(appAuthorizeSetting.bluetoothAuthorized)\nconsole.log(appAuthorizeSetting.cameraAuthorized)\nconsole.log(appAuthorizeSetting.locationAuthorized)\nconsole.log(appAuthorizeSetting.locationReducedAccuracy)\nconsole.log(appAuthorizeSetting.microphoneAuthorized)\nconsole.log(appAuthorizeSetting.notificationAlertAuthorized)\nconsole.log(appAuthorizeSetting.notificationAuthorized)\nconsole.log(appAuthorizeSetting.notificationBadgeAuthorized)\nconsole.log(appAuthorizeSetting.notificationSoundAuthorized)\nconsole.log(appAuthorizeSetting.phoneCalendarAuthorized)\n```\n*\n* **返回值说明**\n*\n* `'authorized'` 表示已经获得授权，无需再次请求授权；\n* `'denied'` 表示请求授权被拒绝，无法再次请求授权；（此情况需要引导用户[打开系统设置](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.openAppAuthorizeSetting.html)，在设置页中打开权限）\n* `'non determined'` 表示尚未请求授权，会在微信下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） */",
    "detail": "function",
    "kind": 9
  },
  "getAppBaseInfo": {
    "prefix": "getAppBaseInfo",
    "body": [
      "wx.getAppBaseInfo()"
    ],
    "description": "/** [Object wx.getAppBaseInfo()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getAppBaseInfo.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取微信APP基础信息\n*\n* **示例代码**\n*\n* ```js\nconst appBaseInfo = wx.getAppBaseInfo()\n\nconsole.log(appBaseInfo.SDKVersion)\nconsole.log(appBaseInfo.enableDebug)\nconsole.log(appBaseInfo.host)\nconsole.log(appBaseInfo.language)\nconsole.log(appBaseInfo.version)\nconsole.log(appBaseInfo.theme)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getBatteryInfoSync": {
    "prefix": "getBatteryInfoSync",
    "body": [
      "wx.getBatteryInfoSync()"
    ],
    "description": "/** [Object wx.getBatteryInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/device/battery/wx.getBatteryInfoSync.html)\n         *\n         * [wx.getBatteryInfo](https://developers.weixin.qq.com/minigame/dev/api/device/battery/wx.getBatteryInfo.html) 的同步版本 */",
    "detail": "function",
    "kind": 9
  },
  "getDeviceInfo": {
    "prefix": "getDeviceInfo",
    "body": [
      "wx.getDeviceInfo()"
    ],
    "description": "/** [Object wx.getDeviceInfo()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getDeviceInfo.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取设备基础信息\n*\n* **示例代码**\n*\n* ```js\nconst deviceInfo = wx.getDeviceInfo()\n\nconsole.log(deviceInfo.abi)\nconsole.log(deviceInfo.benchmarkLevel)\nconsole.log(deviceInfo.brand)\nconsole.log(deviceInfo.model)\nconsole.log(deviceInfo.platform)\nconsole.log(deviceInfo.system)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getEnterOptionsSync": {
    "prefix": "getEnterOptionsSync",
    "body": [
      "wx.getEnterOptionsSync()"
    ],
    "description": "/** [Object wx.getEnterOptionsSync()](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getEnterOptionsSync.html)\n         *\n         * 需要基础库： `2.13.2`\n         *\n         * 获取小游戏打开的参数（包括冷启动和热启动）\n         *\n         * **返回有效 referrerInfo 的场景**\n         *\n         * | 场景值 | 场景                            | appId含义  |\n         * | ------ | ------------------------------- | ---------- |\n         * | 1020   | 公众号 profile 页相关小程序列表 | 来源公众号 |\n         * | 1035   | 公众号自定义菜单                | 来源公众号 |\n         * | 1036   | App 分享消息卡片                | 来源App    |\n         * | 1037   | 小程序打开小程序                | 来源小程序 |\n         * | 1038   | 从另一个小程序返回              | 来源小程序 |\n         * | 1043   | 公众号模板消息                  | 来源公众号 |\n         *\n         * **不同 apiCategory 场景下的 API 限制**\n         *\n         * `X` 表示 API 被限制无法使用；不在表格中的 API 不限制。\n         *\n         * |                                       | default | nativeFunctionalized | browseOnly | embedded |\n         * |-|-|-|-|-|\n         * |navigateToMiniProgram                  |         | `X`                  | `X`        |          |\n         * |openSetting                            |         |                      | `X`        |          |\n         * |&lt;button open-type=\"share\"&gt;       |         | `X`                  | `X`        | `X`      |\n         * |&lt;button open-type=\"feedback\"&gt;    |         |                      | `X`        |          |\n         * |&lt;button open-type=\"open-setting\"&gt;|         |                      | `X`        |          |\n         * |openEmbeddedMiniProgram                |         | `X`                  | `X`        | `X`      |\n         *\n         * **注意**\n         *\n         * 部分版本在无`referrerInfo`的时候会返回 `undefined`，建议使用 `options.referrerInfo && options.referrerInfo.appId` 进行判断。 */",
    "detail": "function",
    "kind": 9
  },
  "getExptInfoSync": {
    "prefix": "getExptInfoSync",
    "body": [
      "wx.getExptInfoSync([$1])"
    ],
    "description": "/** [Object wx.getExptInfoSync(Array.&lt;string&gt; keys)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.getExptInfoSync.html)\n         *\n         * 需要基础库： `2.17.0`\n         *\n         * 给定实验参数数组，获取对应的实验参数值\n         *\n         * **提示**\n         *\n         * 假设实验参数有 `color`, `size`\n         * 调用 wx.getExptInfoSync() 会返回 `{color:'#fff',size:20}` 类似的结果\n         * 而 wx.getExptInfoSync(['color']) 则只会返回 `{color:'#fff'}` */",
    "detail": "function",
    "kind": 9
  },
  "getExtConfigSync": {
    "prefix": "getExtConfigSync",
    "body": [
      "wx.getExtConfigSync()"
    ],
    "description": "/** [Object wx.getExtConfigSync()](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfigSync.html)\n*\n* 需要基础库： `2.8.3`\n*\n* [wx.getExtConfig](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfig.html) 的同步版本。\n*\n* **Tips**\n*\n* 1. 本接口暂时无法通过 [wx.canIUse](#) 判断是否兼容，开发者需要自行判断 [wx.getExtConfigSync](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfigSync.html) 是否存在来兼容\n*\n* ****\n*\n* ```js\nlet extConfig = wx.getExtConfigSync? wx.getExtConfigSync(): {}\nconsole.log(extConfig)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getLaunchOptionsSync": {
    "prefix": "getLaunchOptionsSync",
    "body": [
      "wx.getLaunchOptionsSync()"
    ],
    "description": "/** [Object wx.getLaunchOptionsSync()](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html)\n         *\n         * 获取小游戏冷启动时的参数。热启动参数通过 [wx.onShow](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.onShow.html) 接口获取。\n         *\n         * **返回有效 referrerInfo 的场景**\n         *\n         * | 场景值 | 场景                            | appId含义  |\n         * | ------ | ------------------------------- | ---------- |\n         * | 1020   | 公众号 profile 页相关小程序列表 | 来源公众号 |\n         * | 1035   | 公众号自定义菜单                | 来源公众号 |\n         * | 1036   | App 分享消息卡片                | 来源App    |\n         * | 1037   | 小程序打开小程序                | 来源小程序 |\n         * | 1038   | 从另一个小程序返回              | 来源小程序 |\n         * | 1043   | 公众号模板消息                  | 来源公众号 |\n         *\n         * **注意**\n         *\n         * 部分版本在无`referrerInfo`的时候会返回 `undefined`，\n         * 建议使用 `options.referrerInfo && options.referrerInfo.appId` 进行判断。 */",
    "detail": "function",
    "kind": 9
  },
  "getMenuButtonBoundingClientRect": {
    "prefix": "getMenuButtonBoundingClientRect",
    "body": [
      "wx.getMenuButtonBoundingClientRect()"
    ],
    "description": "/** [Object wx.getMenuButtonBoundingClientRect()](https://developers.weixin.qq.com/minigame/dev/api/ui/menu/wx.getMenuButtonBoundingClientRect.html)\n*\n* 需要基础库： `2.1.0`\n*\n* 获取菜单按钮（右上角胶囊按钮）的布局位置信息。坐标信息以屏幕左上角为原点。\n*\n* **示例代码**\n*\n* ```js\nconst res = wx.getMenuButtonBoundingClientRect()\n\nconsole.log(res.width)\nconsole.log(res.height)\nconsole.log(res.top)\nconsole.log(res.right)\nconsole.log(res.bottom)\nconsole.log(res.left)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getStorageInfoSync": {
    "prefix": "getStorageInfoSync",
    "body": [
      "wx.getStorageInfoSync()"
    ],
    "description": "/** [Object wx.getStorageInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorageInfoSync.html)\n*\n* [wx.getStorageInfo](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorageInfo.html) 的同步版本\n*\n* **示例代码**\n*\n* ```js\nwx.getStorageInfo({\n  success (res) {\n    console.log(res.keys)\n    console.log(res.currentSize)\n    console.log(res.limitSize)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getStorageInfoSync()\n  console.log(res.keys)\n  console.log(res.currentSize)\n  console.log(res.limitSize)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getSystemInfoSync": {
    "prefix": "getSystemInfoSync",
    "body": [
      "wx.getSystemInfoSync()"
    ],
    "description": "/** [Object wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html)\n*\n* [wx.getSystemInfo](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfo.html) 的同步版本\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/WkUCgXmS7mqO)\n*\n* ```js\nwx.getSystemInfo({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getSystemInfoSync()\n  console.log(res.model)\n  console.log(res.pixelRatio)\n  console.log(res.windowWidth)\n  console.log(res.windowHeight)\n  console.log(res.language)\n  console.log(res.version)\n  console.log(res.platform)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getSystemSetting": {
    "prefix": "getSystemSetting",
    "body": [
      "wx.getSystemSetting()"
    ],
    "description": "/** [Object wx.getSystemSetting()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemSetting.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取设备设置\n*\n* **示例代码**\n*\n* ```js\nconst systemSetting = wx.getSystemSetting()\n\nconsole.log(systemSetting.bluetoothEnabled)\nconsole.log(systemSetting.deviceOrientation)\nconsole.log(systemSetting.locationEnabled)\nconsole.log(systemSetting.wifiEnabled)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getWindowInfo": {
    "prefix": "getWindowInfo",
    "body": [
      "wx.getWindowInfo()"
    ],
    "description": "/** [Object wx.getWindowInfo()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getWindowInfo.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取窗口信息\n*\n* **示例代码**\n*\n* ```js\nconst windowInfo = wx.getWindowInfo()\n\nconsole.log(windowInfo.pixelRatio)\nconsole.log(windowInfo.screenWidth)\nconsole.log(windowInfo.screenHeight)\nconsole.log(windowInfo.windowWidth)\nconsole.log(windowInfo.windowHeight)\nconsole.log(windowInfo.statusBarHeight)\nconsole.log(windowInfo.safeArea)\nconsole.log(windowInfo.screenTop)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "createBannerAd": {
    "prefix": "createBannerAd",
    "body": [
      "wx.createBannerAd({",
      "  adUnitId: '${1:adUnitId}',",
      "  style: {",
      "    height: ${2:0},",
      "    left: ${3:0},",
      "    top: ${4:0},",
      "    width: ${5:0},",
      "  },",
      "  adIntervals: ${7:0},",
      "})"
    ],
    "description": "/** [[BannerAd](https://developers.weixin.qq.com/minigame/dev/api/ad/BannerAd.html) wx.createBannerAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createBannerAd.html)\n         *\n         * 需要基础库： `2.0.4`\n         *\n         * 创建 banner 广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.0.4 后再使用该 API。每次调用该方法创建 banner 广告都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "createCamera": {
    "prefix": "createCamera",
    "body": [
      "wx.createCamera({",
      "  devicePosition: '${1:devicePosition}',",
      "  flash: '${2:flash}',",
      "  height: ${3:0},",
      "  size: '${4:size}',",
      "  width: ${5:0},",
      "  x: ${6:0},",
      "  y: ${7:0},",
      "  success: (res) => {$8},",
      "  fail: (res) => {$9},",
      "  complete: (res) => {$10},",
      "})"
    ],
    "description": "/** [[Camera](https://developers.weixin.qq.com/minigame/dev/api/media/camera/Camera.html) wx.createCamera(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/camera/wx.createCamera.html)\n         *\n         * 需要基础库： `2.9.0`\n         *\n         * 创建相机 */",
    "detail": "function",
    "kind": 9
  },
  "createCanvas": {
    "prefix": "createCanvas",
    "body": [
      "wx.createCanvas()"
    ],
    "description": "/** [[Canvas](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/Canvas.html) wx.createCanvas()](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/wx.createCanvas.html)\n         *\n         * 创建一个画布对象。首次调用创建的是显示在屏幕上的画布，之后调用创建的都是离屏画布。 */",
    "detail": "function",
    "kind": 9
  },
  "getSharedCanvas": {
    "prefix": "getSharedCanvas",
    "body": [
      "wx.getSharedCanvas()"
    ],
    "description": "/** [[Canvas](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/Canvas.html) wx.getSharedCanvas()](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getSharedCanvas.html)\n         *\n         * 获取主域和开放数据域共享的 sharedCanvas。**只有开放数据域能调用。** */",
    "detail": "function",
    "kind": 9
  },
  "createCustomAd": {
    "prefix": "createCustomAd",
    "body": [
      "wx.createCustomAd({",
      "  adIntervals: ${1:0},",
      "  adUnitId: '${2:adUnitId}',",
      "  style: {",
      "    fixed: ${3:true},",
      "    left: ${4:0},",
      "    top: ${5:0},",
      "  },",
      "})"
    ],
    "description": "/** [[CustomAd](https://developers.weixin.qq.com/minigame/dev/api/ad/CustomAd.html) wx.createCustomAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createCustomAd.html)\n         *\n         * 需要基础库： `2.11.1`\n         *\n         * 创建原生模板广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.11.1 后再使用该 API。每次调用该方法创建原生模板广告都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "downloadFile": {
    "prefix": "downloadFile",
    "body": [
      "wx.downloadFile({",
      "  url: '${1:url}',",
      "  filePath: '${2:filePath}',",
      "  header: ${3:header},",
      "  timeout: ${4:0},",
      "  success: (result) => {$5},",
      "  fail: (res) => {$6},",
      "  complete: (res) => {$7},",
      "})"
    ],
    "description": "/** [[DownloadTask](https://developers.weixin.qq.com/minigame/dev/api/network/download/DownloadTask.html) wx.downloadFile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/download/wx.downloadFile.html)\n*\n* 下载文件资源到本地。客户端直接发起一个 HTTPS GET 请求，返回文件的本地临时路径 (本地路径)，单次下载允许的最大文件为 200MB。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。\n*\n* 注意：请在服务端响应的 header 中指定合理的 `Content-Type` 字段，以保证客户端正确处理文件类型。\n*\n* **示例代码**\n*\n* ```js\nwx.downloadFile({\n  url: 'https://example.com/audio/123', //仅为示例，并非真实的资源\n  success (res) {\n    // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容\n    if (res.statusCode === 200) {\n      wx.playVoice({\n        filePath: res.tempFilePath\n      })\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "createFeedbackButton": {
    "prefix": "createFeedbackButton",
    "body": [
      "wx.createFeedbackButton({",
      "  style: {",
      "    backgroundColor: '${1:backgroundColor}',",
      "    borderColor: '${2:borderColor}',",
      "    borderRadius: ${3:0},",
      "    borderWidth: ${4:0},",
      "    color: '${5:color}',",
      "    fontSize: ${6:0},",
      "    height: ${7:0},",
      "    left: ${8:0},",
      "    lineHeight: ${9:0},",
      "    textAlign: ${10:textAlign},",
      "    top: ${11:0},",
      "    width: ${12:0},",
      "  },",
      "  type: ${14:type},",
      "  image: '${15:image}',",
      "  text: '${16:text}',",
      "})"
    ],
    "description": "/** [[FeedbackButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/feedback/FeedbackButton.html) wx.createFeedbackButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/feedback/wx.createFeedbackButton.html)\n         *\n         * 需要基础库： `2.1.2`\n         *\n         * 创建打开意见反馈页面的按钮 */",
    "detail": "function",
    "kind": 9
  },
  "getFileSystemManager": {
    "prefix": "getFileSystemManager",
    "body": [
      "wx.getFileSystemManager()"
    ],
    "description": "/** [[FileSystemManager](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.html) wx.getFileSystemManager()](https://developers.weixin.qq.com/minigame/dev/api/file/wx.getFileSystemManager.html)\n         *\n         * 获取全局唯一的文件管理器 */",
    "detail": "function",
    "kind": 9
  },
  "createGameBanner": {
    "prefix": "createGameBanner",
    "body": [
      "wx.createGameBanner({",
      "  adUnitId: '${1:adUnitId}',",
      "  style: {",
      "    left: ${2:0},",
      "    top: ${3:0},",
      "  },",
      "})"
    ],
    "description": "/** [[GameBanner](https://developers.weixin.qq.com/minigame/dev/api/game-portal/GameBanner.html) wx.createGameBanner(Object object)](https://developers.weixin.qq.com/minigame/dev/api/game-portal/wx.createGameBanner.html)\n         *\n         * 需要基础库： `2.7.5`\n         * @deprecated 基础库版本 [2.18.1](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 创建小游戏推荐banner组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.7.5 后再使用该 API。每次调用该方法都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "createGameClubButton": {
    "prefix": "createGameClubButton",
    "body": [
      "wx.createGameClubButton({",
      "  icon: ${1:icon},",
      "  style: {",
      "    backgroundColor: '${2:backgroundColor}',",
      "    borderColor: '${3:borderColor}',",
      "    borderRadius: ${4:0},",
      "    borderWidth: ${5:0},",
      "    color: '${6:color}',",
      "    fontSize: ${7:0},",
      "    height: ${8:0},",
      "    left: ${9:0},",
      "    lineHeight: ${10:0},",
      "    textAlign: ${11:textAlign},",
      "    top: ${12:0},",
      "    width: ${13:0},",
      "  },",
      "  type: ${15:type},",
      "  image: '${16:image}',",
      "  hasRedDot: ${17:true},",
      "  openlink: '${18:openlink}',",
      "  text: '${19:text}',",
      "})"
    ],
    "description": "/** [[GameClubButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/game-club/GameClubButton.html) wx.createGameClubButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/game-club/wx.createGameClubButton.html)\n         *\n         * 需要基础库： `2.0.3`\n         *\n         * 创建游戏圈按钮。游戏圈按钮被点击后会跳转到小游戏的游戏圈。更多关于游戏圈的信息见 [游戏圈使用指南](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/game-club.html)。从基础库2.30.3开始，新增传递openlink的特性，支持打开单帖子、话题页、活动页。 */",
    "detail": "function",
    "kind": 9
  },
  "createGameIcon": {
    "prefix": "createGameIcon",
    "body": [
      "wx.createGameIcon({",
      "  adUnitId: '${1:adUnitId}',",
      "  count: ${2:0},",
      "  style: [$3],",
      "}, {",
      "  appNameHidden: ${5:true},",
      "  borderColor: '${6:borderColor}',",
      "  borderWidth: ${7:0},",
      "  color: '${8:color}',",
      "  left: ${9:0},",
      "  size: ${10:0},",
      "  top: ${11:0},",
      "})"
    ],
    "description": "/** [[GameIcon](https://developers.weixin.qq.com/minigame/dev/api/game-portal/GameIcon.html) wx.createGameIcon(Object object, Object styleItem)](https://developers.weixin.qq.com/minigame/dev/api/game-portal/wx.createGameIcon.html)\n         *\n         * 需要基础库： `2.8.3`\n         * @deprecated 基础库版本 [2.18.1](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 创建小游戏推荐icon组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.8.2 后再使用该 API。每次调用该方法都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "createGamePortal": {
    "prefix": "createGamePortal",
    "body": [
      "wx.createGamePortal({",
      "  adUnitId: '${1:adUnitId}',",
      "})"
    ],
    "description": "/** [[GamePortal](https://developers.weixin.qq.com/minigame/dev/api/game-portal/GamePortal.html) wx.createGamePortal(Object object)](https://developers.weixin.qq.com/minigame/dev/api/game-portal/wx.createGamePortal.html)\n         *\n         * 需要基础库： `2.7.5`\n         * @deprecated 基础库版本 [2.18.1](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 创建小游戏推荐弹窗组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.7.5 后再使用该 API。每次调用该方法都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "createGameRecorderShareButton": {
    "prefix": "createGameRecorderShareButton",
    "body": [
      "wx.createGameRecorderShareButton({",
      "  share: {",
      "    bgm: '${1:bgm}',",
      "    timeRange: [$2],",
      "    atempo: ${3:0},",
      "    audioMix: ${4:true},",
      "    path: '${5:path}',",
      "    query: '${6:query}',",
      "    volume: ${7:0},",
      "  },",
      "  style: {",
      "    color: '${9:color}',",
      "    fontSize: ${10:0},",
      "    height: ${11:0},",
      "    iconMarginRight: ${12:0},",
      "    left: ${13:0},",
      "    paddingLeft: ${14:0},",
      "    paddingRight: ${15:0},",
      "    top: ${16:0},",
      "  },",
      "  icon: '${18:icon}',",
      "  image: '${19:image}',",
      "  text: '${20:text}',",
      "})"
    ],
    "description": "/** [[GameRecorderShareButton](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/GameRecorderShareButton.html) wx.createGameRecorderShareButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/wx.createGameRecorderShareButton.html)\n         *\n         * 需要基础库： `2.8.0`\n         *\n         * 创建游戏对局回放分享按钮，返回一个单例对象。按钮在被用户点击后会发起对最近一次录制完成的游戏对局回放的分享。 */",
    "detail": "function",
    "kind": 9
  },
  "getGameRecorder": {
    "prefix": "getGameRecorder",
    "body": [
      "wx.getGameRecorder()"
    ],
    "description": "/** [[GameRecorder](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/GameRecorder.html) wx.getGameRecorder()](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/wx.getGameRecorder.html)\n         *\n         * 需要基础库： `2.8.0`\n         *\n         * 获取全局唯一的游戏画面录制对象 */",
    "detail": "function",
    "kind": 9
  },
  "getGameServerManager": {
    "prefix": "getGameServerManager",
    "body": [
      "wx.getGameServerManager()"
    ],
    "description": "/** [[GameServerManager](https://developers.weixin.qq.com/minigame/dev/api/game-server-manager/GameServerManager.html) wx.getGameServerManager()](https://developers.weixin.qq.com/minigame/dev/api/game-server-manager/wx.getGameServerManager.html)\n         *\n         * 需要基础库： `2.8.0`\n         *\n         * 获取 **全局唯一** 的游戏服务管理器。 */",
    "detail": "function",
    "kind": 9
  },
  "createGridAd": {
    "prefix": "createGridAd",
    "body": [
      "wx.createGridAd({",
      "  adTheme: '${1:adTheme}',",
      "  adUnitId: '${2:adUnitId}',",
      "  gridCount: ${3:0},",
      "  style: {",
      "    height: ${4:0},",
      "    left: ${5:0},",
      "    top: ${6:0},",
      "    width: ${7:0},",
      "  },",
      "  adIntervals: ${9:0},",
      "})"
    ],
    "description": "/** [[GridAd](https://developers.weixin.qq.com/minigame/dev/api/ad/GridAd.html) wx.createGridAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createGridAd.html)\n         *\n         * 需要基础库： `2.9.2`\n         * @deprecated 基础库版本 [2.30.2](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 创建 grid(格子) 。每次调用该方法创建 grid(格子) 广告都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "createImageData": {
    "prefix": "createImageData",
    "body": [
      "wx.createImageData()"
    ],
    "description": "/** [[ImageData](https://developers.weixin.qq.com/minigame/dev/api/render/image/ImageData.html) wx.createImageData()](https://developers.weixin.qq.com/minigame/dev/api/render/image/wx.createImageData.html)\n         *\n         * 需要基础库： `2.24.6`\n         *\n         * 创建一个 ImageData 图片数据对象 */",
    "detail": "function",
    "kind": 9
  },
  "createImage": {
    "prefix": "createImage",
    "body": [
      "wx.createImage()"
    ],
    "description": "/** [[Image](https://developers.weixin.qq.com/minigame/dev/api/render/image/Image.html) wx.createImage()](https://developers.weixin.qq.com/minigame/dev/api/render/image/wx.createImage.html)\n         *\n         * 创建一个图片对象 */",
    "detail": "function",
    "kind": 9
  },
  "createInferenceSession": {
    "prefix": "createInferenceSession",
    "body": [
      "wx.createInferenceSession({",
      "  model: '${1:model}',",
      "  allowNPU: ${2:true},",
      "  allowQuantize: ${3:true},",
      "  precesionLevel: ${4:precesionLevel},",
      "  typicalShape: ${5:typicalShape},",
      "})"
    ],
    "description": "/** [[InferenceSession](https://developers.weixin.qq.com/minigame/dev/api/ai/inference/InferenceSession.html) wx.createInferenceSession(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/inference/wx.createInferenceSession.html)\n*\n* 需要基础库： `2.30.0`\n*\n* 创建 AI 推理 Session。使用前可参考[AI指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/inference/tutorial.html)\n*\n* **示例代码**\n*\n* ```js\n// 创建会话，加载模型\nconst session = wx.createInferenceSession({\n  model: `${wx.env.USER_DATA_PATH}/MNIST.onnx`,\n  precisionLevel: 4,\n  typicalShape:{input1:[1, 3, 224, 224], input2:[1, 1, 224, 224]},  //除非使用动态轴，一般不用显式指定\n  allowNPU: false,\n  allowQuantize: false\n})\n\n// 监听error事件\nsession.onError(err => {\n  console.error(err)\n})\n\n// 监听模型加载完成事件\nsession.onLoad(() => {\n  // 运行推理\n  // 其中input1, input2, output0 必须与使用的onnx模型中实际的输入输出名字完全一致，不可随意填写。\n  // 模型输入输出信息可以通过Netron 打开onnx模型看到\n  session.run({\n    input1: {\n      type: 'float32',\n      data: new Float32Array(3 * 224 * 224).buffer,\n      shape: [1, 3, 224, 224] // NCHW 顺序\n    },\n    // 多个input的添加方法，假设第二个input需要数据类型为uint8\n    input2: {\n      type: 'uint8',\n      data: new Uint8Array(224 * 224).buffer,\n      shape: [1, 1, 224, 224]\n    },\n  }).then(res => {\n    console.log(res.output0)\n  })\n})\n\n// 销毁Session\n// session完成创建后可以多次调用run进行推理，直到调用`session.destroy()`释放相关内存。\n\n// 销毁会话\nsession.destroy()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "createInnerAudioContext": {
    "prefix": "createInnerAudioContext",
    "body": [
      "wx.createInnerAudioContext({",
      "  useWebAudioImplement: ${1:true},",
      "})"
    ],
    "description": "/** [[InnerAudioContext](https://developers.weixin.qq.com/minigame/dev/api/media/audio/InnerAudioContext.html) wx.createInnerAudioContext(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.createInnerAudioContext.html)\n*\n* 需要基础库： `1.6.0`\n*\n* 创建内部 [audio](#) 上下文 [InnerAudioContext](https://developers.weixin.qq.com/minigame/dev/api/media/audio/InnerAudioContext.html) 对象。\n*\n* **示例代码**\n*\n* ```js\nconst innerAudioContext = wx.createInnerAudioContext({\n  useWebAudioImplement: false // 是否使用 WebAudio 作为底层音频驱动，默认关闭。对于短音频、播放频繁的音频建议开启此选项，开启后将获得更优的性能表现。由于开启此选项后也会带来一定的内存增长，因此对于长音频建议关闭此选项\n})\ninnerAudioContext.src = 'http://ws.stream.qqmusic.qq.com/M500001VfvsJ21xFqb.mp3?guid=ffffffff82def4af4b12b3cd9337d5e7&uin=346897220&vkey=6292F51E1E384E061FF02C31F716658E5C81F5594D561F2E88B854E81CAAB7806D5E4F103E55D33C16F3FAC506D1AB172DE8600B37E43FAD&fromtag=46'\n\ninnerAudioContext.play() // 播放\n\ninnerAudioContext.pause() // 暂停\n\ninnerAudioContext.stop() // 停止\n``` */",
    "detail": "function",
    "kind": 9
  },
  "createInterstitialAd": {
    "prefix": "createInterstitialAd",
    "body": [
      "wx.createInterstitialAd({",
      "  adUnitId: '${1:adUnitId}',",
      "})"
    ],
    "description": "/** [[InterstitialAd](https://developers.weixin.qq.com/minigame/dev/api/ad/InterstitialAd.html) wx.createInterstitialAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createInterstitialAd.html)\n         *\n         * 需要基础库： `2.6.0`\n         *\n         * 创建插屏广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号后再使用该 API。每次调用该方法创建插屏广告都会返回一个全新的实例（小程序端的插屏广告实例不允许跨页面使用）。 */",
    "detail": "function",
    "kind": 9
  },
  "loadSubpackage": {
    "prefix": "loadSubpackage",
    "body": [
      "wx.loadSubpackage({",
      "  complete: ${1:complete},",
      "  fail: ${2:fail},",
      "  name: '${3:name}',",
      "  success: ${4:success},",
      "})"
    ],
    "description": "/** [[LoadSubpackageTask](https://developers.weixin.qq.com/minigame/dev/api/base/subpackage/LoadSubpackageTask.html) wx.loadSubpackage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/subpackage/wx.loadSubpackage.html)\n         *\n         * 需要基础库： `2.1.0`\n         *\n         * 触发分包加载，详见 [分包加载](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/subPackage/useSubPackage.html) */",
    "detail": "function",
    "kind": 9
  },
  "getLogManager": {
    "prefix": "getLogManager",
    "body": [
      "wx.getLogManager({",
      "  level: ${1:0},",
      "})"
    ],
    "description": "/** [[LogManager](https://developers.weixin.qq.com/minigame/dev/api/base/debug/LogManager.html) wx.getLogManager(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/debug/wx.getLogManager.html)\n*\n* 需要基础库： `2.1.0`\n*\n* 获取日志管理器对象。\n*\n* **示例代码**\n*\n* ```js\nconst logger = wx.getLogManager({level: 1})\nlogger.log({str: 'hello world'}, 'basic log', 100, [1, 2, 3])\nlogger.info({str: 'hello world'}, 'info log', 100, [1, 2, 3])\nlogger.debug({str: 'hello world'}, 'debug log', 100, [1, 2, 3])\nlogger.warn({str: 'hello world'}, 'warn log', 100, [1, 2, 3])\n``` */",
    "detail": "function",
    "kind": 9
  },
  "createMediaAudioPlayer": {
    "prefix": "createMediaAudioPlayer",
    "body": [
      "wx.createMediaAudioPlayer()"
    ],
    "description": "/** [[MediaAudioPlayer](https://developers.weixin.qq.com/minigame/dev/api/media/audio/MediaAudioPlayer.html) wx.createMediaAudioPlayer()](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.createMediaAudioPlayer.html)\n*\n* 需要基础库： `2.13.0`\n*\n* 创建媒体音频播放器对象 [MediaAudioPlayer](https://developers.weixin.qq.com/minigame/dev/api/media/audio/MediaAudioPlayer.html) 对象，可用于播放视频解码器 [VideoDecoder](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.html) 输出的音频。\n*\n* **示例代码**\n*\n* ```js\n  // 创建视频解码器，具体参数见 createVideoDecoder 文档\n  const videoDecoder = wx.createVideoDecoder()\n  // 创建媒体音频播放器\n  const mediaAudioPlayer = wx.createMediaAudioPlayer()\n  // 启动视频解码器\n  videoDecoder.start()\n  // 启动播放器\n  mediaAudioPlayer.start().then(() => {\n    // 添加播放器音频来源\n    mediaAudioPlayer.addAudioSource(videoDecoder).then(res => {\n      videoDecoder.getFrameData() // 建议在 requestAnimationFrame 里获取每一帧视频数据\n      console.log(res)\n    })\n\n    // 移除播放器音频来源\n    mediaAudioPlayer.removeAudioSource(videoDecoder).then()\n    // 停止播放器\n    mediaAudioPlayer.stop().then()\n    // 销毁播放器\n    mediaAudioPlayer.destroy().then()\n    // 设置播放器音量\n    mediaAudioPlayer.volume = 0.5\n  })\n```\n*\n* **完整demo（小游戏）**\n*\n* - https://developers.weixin.qq.com/s/SF2duHmb7MjI */",
    "detail": "function",
    "kind": 9
  },
  "getOpenDataContext": {
    "prefix": "getOpenDataContext",
    "body": [
      "wx.getOpenDataContext()"
    ],
    "description": "/** [[OpenDataContext](https://developers.weixin.qq.com/minigame/dev/api/open-api/context/OpenDataContext.html) wx.getOpenDataContext()](https://developers.weixin.qq.com/minigame/dev/api/open-api/context/wx.getOpenDataContext.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 获取开放数据域 */",
    "detail": "function",
    "kind": 9
  },
  "createOpenSettingButton": {
    "prefix": "createOpenSettingButton",
    "body": [
      "wx.createOpenSettingButton({",
      "  style: {",
      "    backgroundColor: '${1:backgroundColor}',",
      "    borderColor: '${2:borderColor}',",
      "    borderRadius: ${3:0},",
      "    borderWidth: ${4:0},",
      "    color: '${5:color}',",
      "    fontSize: ${6:0},",
      "    height: ${7:0},",
      "    left: ${8:0},",
      "    lineHeight: ${9:0},",
      "    textAlign: ${10:textAlign},",
      "    top: ${11:0},",
      "    width: ${12:0},",
      "  },",
      "  type: ${14:type},",
      "  image: '${15:image}',",
      "  text: '${16:text}',",
      "})"
    ],
    "description": "/** [[OpenSettingButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/OpenSettingButton.html) wx.createOpenSettingButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.createOpenSettingButton.html)\n         *\n         * 需要基础库： `2.0.7`\n         *\n         * 创建打开设置页面的按钮 */",
    "detail": "function",
    "kind": 9
  },
  "createPath2D": {
    "prefix": "createPath2D",
    "body": [
      "wx.createPath2D()"
    ],
    "description": "/** [[Path2D](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/Path2D.html) wx.createPath2D()](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/wx.createPath2D.html)\n         *\n         * 需要基础库： `2.24.6`\n         *\n         * 创建一个 Path2D 路径对象 */",
    "detail": "function",
    "kind": 9
  },
  "getPerformance": {
    "prefix": "getPerformance",
    "body": [
      "wx.getPerformance()"
    ],
    "description": "/** [[Performance](https://developers.weixin.qq.com/minigame/dev/api/base/performance/Performance.html) wx.getPerformance()](https://developers.weixin.qq.com/minigame/dev/api/base/performance/wx.getPerformance.html)\n         *\n         * 获取性能管理器 */",
    "detail": "function",
    "kind": 9
  },
  "preDownloadSubpackage": {
    "prefix": "preDownloadSubpackage",
    "body": [
      "wx.preDownloadSubpackage({",
      "  complete: ${1:complete},",
      "  fail: ${2:fail},",
      "  packageType: '${3:packageType}',",
      "  success: ${4:success},",
      "})"
    ],
    "description": "/** [[PreDownloadSubpackageTask](https://developers.weixin.qq.com/minigame/dev/api/base/subpackage/PreDownloadSubpackageTask.html) wx.preDownloadSubpackage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/subpackage/wx.preDownloadSubpackage.html)\n*\n* 需要基础库： `2.27.3`\n*\n* 触发分包预下载。\n*\n* **示例代码**\n*\n* ```js\n// 首先要在 app.json / game.json 中配置workers作为分包\n{\n  \"workers\": {\n    \"path\": \"myWorkersFolder\",\n    \"isSubpackage\": true  // true 表示把 worker 打包为分包。默认 false。填 false 时等同于 { \"workers\": \"workers\" }\n  }\n}\n```\n* ```js\n* // 然后调用 wx.preDownloadSubpackage 下载 worker 分包，下载成功后才可以创建 worker\n* var task = wx.preDownloadSubpackage({\n*   packageType: \"workers\",\n*   success(res) {\n*     console.log(\"load worker success\", res)\n*     wx.createWorker(\"myWorkersFolder/request/index.js\")   // 创建 worker。 如果 worker 分包没下载完就调 createWorker 的话将报错\n*   },\n*   fail(res) {\n*     console.log(\"load worker fail\", res)\n*   }\n* })\n*\n* task.onProgressUpdate(res => {\n*   console.log(res.progress) // 可通过 onProgressUpdate 接口监听下载进度\n*   console.log(res.totalBytesWritten)\n*   console.log(res.totalBytesExpectedToWrite)\n* }) */",
    "detail": "function",
    "kind": 9
  },
  "getRealtimeLogManager": {
    "prefix": "getRealtimeLogManager",
    "body": [
      "wx.getRealtimeLogManager()"
    ],
    "description": "/** [[RealtimeLogManager](https://developers.weixin.qq.com/minigame/dev/api/base/debug/RealtimeLogManager.html) wx.getRealtimeLogManager()](https://developers.weixin.qq.com/minigame/dev/api/base/debug/wx.getRealtimeLogManager.html)\n*\n* 需要基础库： `2.14.4`\n*\n* 获取实时日志管理器对象。\n*\n* **示例代码**\n*\n* ```js\n// 小程序端\nconst logger = wx.getRealtimeLogManager()\nlogger.info({str: 'hello world'}, 'info log', 100, [1, 2, 3])\nlogger.error({str: 'hello world'}, 'error log', 100, [1, 2, 3])\nlogger.warn({str: 'hello world'}, 'warn log', 100, [1, 2, 3])\n\n// 插件端，基础库 2.16.0 版本后支持，只允许采用 key-value 的新格式上报\nconst logManager = wx.getRealtimeLogManager()\nconst logger = logManager.tag('plugin-log1')\nlogger.info('key1', 'value1')\nlogger.error('key2', {str: 'value2'})\nlogger.warn('key3', 'value3')\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getRecorderManager": {
    "prefix": "getRecorderManager",
    "body": [
      "wx.getRecorderManager()"
    ],
    "description": "/** [[RecorderManager](https://developers.weixin.qq.com/minigame/dev/api/media/recorder/RecorderManager.html) wx.getRecorderManager()](https://developers.weixin.qq.com/minigame/dev/api/media/recorder/wx.getRecorderManager.html)\n         *\n         * 需要基础库： `1.6.0`\n         *\n         * 获取**全局唯一**的录音管理器 RecorderManager */",
    "detail": "function",
    "kind": 9
  },
  "request": {
    "prefix": "request",
    "body": [
      "wx.request({",
      "  url: '${1:url}',",
      "  data: ${2:data},",
      "  dataType: ${3:dataType},",
      "  enableCache: ${4:true},",
      "  enableChunked: ${5:true},",
      "  enableHttp2: ${6:true},",
      "  enableHttpDNS: ${7:true},",
      "  enableQuic: ${8:true},",
      "  forceCellularNetwork: ${9:true},",
      "  header: ${10:header},",
      "  httpDNSServiceId: '${11:httpDNSServiceId}',",
      "  method: ${12:method},",
      "  responseType: ${13:responseType},",
      "  timeout: ${14:0},",
      "  success: (result) => {$15},",
      "  fail: (err) => {$16},",
      "  complete: (res) => {$17},",
      "})"
    ],
    "description": "/** [[RequestTask](https://developers.weixin.qq.com/minigame/dev/api/network/request/RequestTask.html) wx.request(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/request/wx.request.html)\n*\n* 发起 HTTPS 网络请求。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。\n*\n* **data 参数说明**\n*\n* 最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String 。转换规则如下：\n* - 对于 `GET` 方法的数据，会将数据转换成 query string（`encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...`）\n* - 对于 `POST` 方法且 `header['content-type']` 为 `application/json` 的数据，会对数据进行 JSON 序列化\n* - 对于 `POST` 方法且 `header['content-type']` 为 `application/x-www-form-urlencoded` 的数据，会将数据转换成 query string `（encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...）`\n*\n* **示例代码**\n*\n* ```js\nwx.request({\n  url: 'example.php', //仅为示例，并非真实的接口地址\n  data: {\n    x: '',\n    y: ''\n  },\n  header: {\n    'content-type': 'application/json' // 默认值\n  },\n  success (res) {\n    console.log(res.data)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "createRewardedVideoAd": {
    "prefix": "createRewardedVideoAd",
    "body": [
      "wx.createRewardedVideoAd({",
      "  adUnitId: '${1:adUnitId}',",
      "  multiton: ${2:true},",
      "})"
    ],
    "description": "/** [[RewardedVideoAd](https://developers.weixin.qq.com/minigame/dev/api/ad/RewardedVideoAd.html) wx.createRewardedVideoAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createRewardedVideoAd.html)\n         *\n         * 需要基础库： `2.0.4`\n         *\n         * 创建激励视频广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号后再使用该 API（小游戏端要求 >= 2.0.4， 小程序端要求 >= 2.6.0）。调用该方法创建的激励视频广告是一个单例（小游戏端是全局单例，小程序端是页面内单例，在小程序端的单例对象不允许跨页面使用）。 */",
    "detail": "function",
    "kind": 9
  },
  "connectSocket": {
    "prefix": "connectSocket",
    "body": [
      "wx.connectSocket({",
      "  url: '${1:url}',",
      "  forceCellularNetwork: ${2:true},",
      "  header: ${3:header},",
      "  perMessageDeflate: ${4:true},",
      "  protocols: [$5],",
      "  tcpNoDelay: ${6:true},",
      "  timeout: ${7:0},",
      "  success: (res) => {$8},",
      "  fail: (res) => {$9},",
      "  complete: (res) => {$10},",
      "})"
    ],
    "description": "/** [[SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) wx.connectSocket(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.connectSocket.html)\n*\n* @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n*\n* 创建一个 WebSocket 连接。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。\n*\n* **并发数**\n*\n* - 1.7.0 及以上版本，最多可以同时存在 5 个 WebSocket 连接。\n* - 1.7.0 以下版本，一个小程序同时只能有一个 WebSocket 连接，如果当前已存在一个 WebSocket 连接，会自动关闭该连接，并重新创建一个 WebSocket 连接。\n*\n* **示例代码**\n*\n* ```js\nwx.connectSocket({\n  url: 'wss://example.qq.com',\n  header:{\n    'content-type': 'application/json'\n  },\n  protocols: ['protocol1']\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "createUDPSocket": {
    "prefix": "createUDPSocket",
    "body": [
      "wx.createUDPSocket()"
    ],
    "description": "/** [[UDPSocket](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.html) wx.createUDPSocket()](https://developers.weixin.qq.com/minigame/dev/api/network/udp/wx.createUDPSocket.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 创建一个 UDP Socket 实例。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。 */",
    "detail": "function",
    "kind": 9
  },
  "getUpdateManager": {
    "prefix": "getUpdateManager",
    "body": [
      "wx.getUpdateManager()"
    ],
    "description": "/** [[UpdateManager](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.html) wx.getUpdateManager()](https://developers.weixin.qq.com/minigame/dev/api/base/update/wx.getUpdateManager.html)\n         *\n         * 需要基础库： `1.9.90`\n         *\n         * 获取**全局唯一**的版本更新管理器，用于管理小程序更新。关于小程序的更新机制，可以查看[运行机制](https://developers.weixin.qq.com/minigame/dev/guide/runtime/operating-mechanism.html)文档。\n         *\n         * **示例代码**\n         *\n         * [示例代码](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.html#示例代码) */",
    "detail": "function",
    "kind": 9
  },
  "uploadFile": {
    "prefix": "uploadFile",
    "body": [
      "wx.uploadFile({",
      "  filePath: '${1:filePath}',",
      "  name: '${2:name}',",
      "  url: '${3:url}',",
      "  formData: ${4:formData},",
      "  header: ${5:header},",
      "  timeout: ${6:0},",
      "  success: (result) => {$7},",
      "  fail: (res) => {$8},",
      "  complete: (res) => {$9},",
      "})"
    ],
    "description": "/** [[UploadTask](https://developers.weixin.qq.com/minigame/dev/api/network/upload/UploadTask.html) wx.uploadFile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/upload/wx.uploadFile.html)\n*\n* 将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 `content-type` 为 `multipart/form-data`。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。\n*\n* **示例代码**\n*\n* ```js\nwx.chooseImage({\n  success (res) {\n    const tempFilePaths = res.tempFilePaths\n    wx.uploadFile({\n      url: 'https://example.weixin.qq.com/upload', //仅为示例，非真实的接口地址\n      filePath: tempFilePaths[0],\n      name: 'file',\n      formData: {\n        'user': 'test'\n      },\n      success (res){\n        const data = res.data\n        //do something\n      }\n    })\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getUserCryptoManager": {
    "prefix": "getUserCryptoManager",
    "body": [
      "wx.getUserCryptoManager()"
    ],
    "description": "/** [[UserCryptoManager](https://developers.weixin.qq.com/minigame/dev/api/base/crypto/UserCryptoManager.html) wx.getUserCryptoManager()](https://developers.weixin.qq.com/minigame/dev/api/base/crypto/wx.getUserCryptoManager.html)\n         *\n         * 需要基础库： `2.17.3`\n         *\n         * 获取用户加密模块 */",
    "detail": "function",
    "kind": 9
  },
  "createUserInfoButton": {
    "prefix": "createUserInfoButton",
    "body": [
      "wx.createUserInfoButton({",
      "  style: {",
      "    backgroundColor: '${1:backgroundColor}',",
      "    borderColor: '${2:borderColor}',",
      "    borderRadius: ${3:0},",
      "    borderWidth: ${4:0},",
      "    color: '${5:color}',",
      "    fontSize: ${6:0},",
      "    height: ${7:0},",
      "    left: ${8:0},",
      "    lineHeight: ${9:0},",
      "    textAlign: ${10:textAlign},",
      "    top: ${11:0},",
      "    width: ${12:0},",
      "  },",
      "  type: ${14:type},",
      "  image: '${15:image}',",
      "  lang: ${16:lang},",
      "  withCredentials: ${17:true},",
      "  text: '${18:text}',",
      "})"
    ],
    "description": "/** [[UserInfoButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/UserInfoButton.html) wx.createUserInfoButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/wx.createUserInfoButton.html)\n         *\n         * 需要基础库： `2.0.1`\n         *\n         * 创建用户信息按钮 */",
    "detail": "function",
    "kind": 9
  },
  "createVideoDecoder": {
    "prefix": "createVideoDecoder",
    "body": [
      "wx.createVideoDecoder()"
    ],
    "description": "/** [[VideoDecoder](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.html) wx.createVideoDecoder()](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/wx.createVideoDecoder.html)\n         *\n         * 需要基础库： `2.11.1`\n         *\n         * 创建视频解码器，可逐帧获取解码后的数据 */",
    "detail": "function",
    "kind": 9
  },
  "createVideo": {
    "prefix": "createVideo",
    "body": [
      "wx.createVideo({",
      "  src: '${1:src}',",
      "  autoPauseIfNavigate: ${2:true},",
      "  autoPauseIfOpenNative: ${3:true},",
      "  autoplay: ${4:true},",
      "  backgroundColor: '${5:backgroundColor}',",
      "  controls: ${6:true},",
      "  enablePlayGesture: ${7:true},",
      "  enableProgressGesture: ${8:true},",
      "  height: ${9:0},",
      "  initialTime: ${10:0},",
      "  live: ${11:true},",
      "  loop: ${12:true},",
      "  muted: ${13:true},",
      "  obeyMuteSwitch: ${14:true},",
      "  objectFit: ${15:objectFit},",
      "  playbackRate: ${16:0},",
      "  poster: '${17:poster}',",
      "  showCenterPlayBtn: ${18:true},",
      "  showProgress: ${19:true},",
      "  showProgressInControlMode: ${20:true},",
      "  underGameView: ${21:true},",
      "  width: ${22:0},",
      "  x: ${23:0},",
      "  y: ${24:0},",
      "})"
    ],
    "description": "/** [[Video](https://developers.weixin.qq.com/minigame/dev/api/media/video/Video.html) wx.createVideo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/video/wx.createVideo.html)\n         *\n         * 创建视频 */",
    "detail": "function",
    "kind": 9
  },
  "createWebAudioContext": {
    "prefix": "createWebAudioContext",
    "body": [
      "wx.createWebAudioContext()"
    ],
    "description": "/** [[WebAudioContext](https://developers.weixin.qq.com/minigame/dev/api/media/audio/WebAudioContext.html) wx.createWebAudioContext()](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.createWebAudioContext.html)\n         *\n         * 需要基础库： `2.19.0`\n         *\n         * 创建 WebAudio 上下文。 */",
    "detail": "function",
    "kind": 9
  },
  "createWorker": {
    "prefix": "createWorker",
    "body": [
      "wx.createWorker('${1:scriptPath}', {",
      "  useExperimentalWorker: ${2:true},",
      "})"
    ],
    "description": "/** [[Worker](https://developers.weixin.qq.com/minigame/dev/api/worker/Worker.html) wx.createWorker(string scriptPath, object options)](https://developers.weixin.qq.com/minigame/dev/api/worker/wx.createWorker.html)\n*\n* 需要基础库： `1.9.90`\n*\n* 创建一个 Worker 线程\n*\n* **示例代码**\n*\n* ```js\n// 创建普通worker\nwx.createWorker('workers/index.js')\n```\n* ```js\nfunction createNewWorker() {\n  const worker = wx.createWorker('workers/index.js', {\n    useExperimentalWorker: true\n  })\n  // 监听worker被系统回收事件\n  worker.onProcessKilled(() => {\n    // 重新创建一个worker\n    createNewWorker()\n  })\n}\n// 创建实验worker\ncreateNewWorker()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getStorageSync": {
    "prefix": "getStorageSync",
    "body": [
      "wx.getStorageSync('${1:key}')"
    ],
    "description": "/** [any wx.getStorageSync(string key)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorageSync.html)\n*\n* 从本地缓存中同步获取指定 key 的内容。\n*\n* **注意**\n*\n* storage 应只用来进行数据的持久化存储，不应用于运行时的数据传递或全局状态管理。启动过程中过多的同步读写存储，会显著影响启动耗时。\n*\n* **示例代码**\n*\n* ```js\ntry {\n  var value = wx.getStorageSync('key')\n  if (value) {\n    // Do something with return value\n  }\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "setCursor": {
    "prefix": "setCursor",
    "body": [
      "wx.setCursor('${1:path}', ${2:0}, ${3:0})"
    ],
    "description": "/** [boolean wx.setCursor(string path, number x, number y)](https://developers.weixin.qq.com/minigame/dev/api/render/cursor/wx.setCursor.html)\n         *\n         * 需要基础库： `2.10.1`\n         *\n         * 加载自定义光标，仅支持 PC 平台\n         *\n         * **注意**\n         *\n         * - 传入图片太大可能会导致设置无效，推荐图标大小 32x32\n         * - 基础库 v2.16.0 后，支持更多图片格式以及关键字种类（参考 CSS 标准） */",
    "detail": "function",
    "kind": 9
  },
  "setMessageToFriendQuery": {
    "prefix": "setMessageToFriendQuery",
    "body": [
      "wx.setMessageToFriendQuery({",
      "  query: '${1:query}',",
      "  shareMessageToFriendScene: ${2:0},",
      "})"
    ],
    "description": "/** [boolean wx.setMessageToFriendQuery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.setMessageToFriendQuery.html)\n         *\n         * 设置 wx.shareMessageToFriend 接口 query 字段的值 */",
    "detail": "function",
    "kind": 9
  },
  "getTextLineHeight": {
    "prefix": "getTextLineHeight",
    "body": [
      "wx.getTextLineHeight({",
      "  fontFamily: '${1:fontFamily}',",
      "  text: '${2:text}',",
      "  fontSize: ${3:0},",
      "  fontStyle: ${4:fontStyle},",
      "  fontWeight: ${5:fontWeight},",
      "  success: (res) => {$6},",
      "  fail: (res) => {$7},",
      "  complete: (res) => {$8},",
      "})"
    ],
    "description": "/** [number wx.getTextLineHeight(Object object)](https://developers.weixin.qq.com/minigame/dev/api/render/font/wx.getTextLineHeight.html)\n         *\n         * 获取一行文本的行高 */",
    "detail": "function",
    "kind": 9
  },
  "createBufferURL": {
    "prefix": "createBufferURL",
    "body": [
      "wx.createBufferURL(${1:buffer})"
    ],
    "description": "/** [string wx.createBufferURL(ArrayBuffer|TypedArray buffer)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.createBufferURL.html)\n         *\n         * 需要基础库： `2.14.0`\n         *\n         * 根据传入的 buffer 创建一个唯一的 URL 存在内存中 */",
    "detail": "function",
    "kind": 9
  },
  "decode": {
    "prefix": "decode",
    "body": [
      "wx.decode({",
      "  data: ${1:data},",
      "  format: ${2:format},",
      "})"
    ],
    "description": "/** [string wx.decode(Object object)](https://developers.weixin.qq.com/minigame/dev/api/util/wx.decode.html)\n         *\n         * 将 ArrayBuffer 按照指定的编码格式解码成字符串 */",
    "detail": "function",
    "kind": 9
  },
  "loadFont": {
    "prefix": "loadFont",
    "body": [
      "wx.loadFont('${1:path}')"
    ],
    "description": "/** [string wx.loadFont(string path)](https://developers.weixin.qq.com/minigame/dev/api/render/font/wx.loadFont.html)\n         *\n         * 加载自定义字体文件 */",
    "detail": "function",
    "kind": 9
  },
  "addCard": {
    "prefix": "addCard",
    "body": [
      "wx.addCard({",
      "  cardList: [$1],",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.addCard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/card/wx.addCard.html)\n*\n* 需要基础库： `2.5.0`\n*\n* 批量添加卡券。只有通过 [认证](https://developers.weixin.qq.com/miniprogram/product/renzheng.html) 的小程序或文化互动类目的小游戏才能使用。更多文档请参考 [微信卡券接口文档](https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&key=1490190158&version=1&lang=zh_CN&platform=2)。\n*\n* **cardExt 说明**\n*\n* cardExt 是卡券的扩展参数，其值是一个 JSON 字符串。\n*\n* **示例代码**\n*\n* ```js\nwx.addCard({\n  cardList: [\n    {\n      cardId: '',\n      cardExt: '{\"code\": \"\", \"openid\": \"\", \"timestamp\": \"\", \"signature\":\"\"}'\n    }, {\n      cardId: '',\n      cardExt: '{\"code\": \"\", \"openid\": \"\", \"timestamp\": \"\", \"signature\":\"\"}'\n    }\n  ],\n  success (res) {\n    console.log(res.cardList) // 卡券添加结果\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "authPrivateMessage": {
    "prefix": "authPrivateMessage",
    "body": [
      "wx.authPrivateMessage({",
      "  shareTicket: '${1:shareTicket}',",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.authPrivateMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.authPrivateMessage.html)\n*\n* 需要基础库： `2.13.0`\n*\n* 验证私密消息。用法详情见 [小程序私密消息使用指南](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/share/private-message.html)\n*\n* **示例代码**\n*\n* ```js\nwx.authPrivateMessage({\n  shareTicket: 'xxxxxx',\n  success(res) {\n    console.log('authPrivateMessage success', res)\n    // res\n    // {\n    //   errMsg: 'authPrivateMessage:ok'\n    //   valid: true\n    //   iv: 'xxxx',\n    //   encryptedData: 'xxxxxx'\n    // }\n  },\n  fail(res) {\n    console.log('authPrivateMessage fail', res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "authorize": {
    "prefix": "authorize",
    "body": [
      "wx.authorize({",
      "  scope: '${1:scope}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.authorize(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/authorize/wx.authorize.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 提前向用户发起授权请求。调用后会立刻弹窗询问用户是否同意授权小程序使用某项功能或获取用户的某些数据，但不会实际调用对应接口。如果用户之前已经同意授权，则不会出现弹窗，直接返回成功。更多用法详见 [用户授权](https://developers.weixin.qq.com/minigame/dev/guide/framework/authorize.html)。\n*\n* **注意事项**\n*\n* - 小游戏内使用 `wx.authorize({scope: \"scope.userInfo\"})`，不会弹出授权窗口，请使用 [wx.createUserInfoButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/wx.createUserInfoButton.html)\n* - 需要授权 `scope.userLocation` 时必须[配置地理位置用途说明](https://developers.weixin.qq.com/minigame/dev/reference/configuration/app.html#permission)。\n*\n* **示例代码**\n*\n* ```js\n// 可以通过 wx.getSetting 先查询一下用户是否授权了 \"scope.record\" 这个 scope\nwx.getSetting({\n  success(res) {\n    if (!res.authSetting['scope.record']) {\n      wx.authorize({\n        scope: 'scope.record',\n        success () {\n          // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问\n          wx.startRecord()\n        }\n      })\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "checkHandoffEnabled": {
    "prefix": "checkHandoffEnabled",
    "body": [
      "wx.checkHandoffEnabled({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.checkHandoffEnabled(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.checkHandoffEnabled.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 检查是否可以进行接力，该接口需要在开放数据域调用 */",
    "detail": "function",
    "kind": 9
  },
  "checkIsAddedToMyMiniProgram": {
    "prefix": "checkIsAddedToMyMiniProgram",
    "body": [
      "wx.checkIsAddedToMyMiniProgram({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.checkIsAddedToMyMiniProgram(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/my-miniprogram/wx.checkIsAddedToMyMiniProgram.html)\n         *\n         * 需要基础库： `2.30.3`\n         *\n         * 检查小程序是否被添加至 「我的小程序」 */",
    "detail": "function",
    "kind": 9
  },
  "checkSession": {
    "prefix": "checkSession",
    "body": [
      "wx.checkSession({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.checkSession(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/login/wx.checkSession.html)\n*\n* 检查登录态是否过期。\n* 通过 wx.login 接口获得的用户登录态拥有一定的时效性。用户越久未使用小程序，用户登录态越有可能失效。反之如果用户一直在使用小程序，则用户登录态一直保持有效。具体时效逻辑由微信维护，对开发者透明。开发者只需要调用 wx.checkSession 接口检测当前用户登录态是否有效。\n*\n* 登录态过期后开发者可以再调用 wx.login 获取新的用户登录态。调用成功说明当前 session_key 未过期，调用失败说明 session_key 已过期。\n*\n* **示例代码**\n*\n* ```js\nwx.checkSession({\n  success () {\n    //session_key 未过期，并且在本生命周期一直有效\n  },\n  fail () {\n    // session_key 已经失效，需要重新执行登录流程\n    wx.login() //重新登录\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "chooseImage": {
    "prefix": "chooseImage",
    "body": [
      "wx.chooseImage({",
      "  count: ${1:0},",
      "  sizeType: [$2],",
      "  sourceType: [$3],",
      "  success: (result) => {$4},",
      "  fail: (res) => {$5},",
      "  complete: (res) => {$6},",
      "})"
    ],
    "description": "/** [wx.chooseImage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.chooseImage.html)\n*\n* @deprecated 基础库版本 [2.21.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃，请使用 [wx.chooseMedia](https://developers.weixin.qq.com/minigame/dev/api/media/video/wx.chooseMedia.html) 替换\n*\n* 从本地相册选择图片或使用相机拍照。\n*\n* ****\n*\n* ```js\nwx.chooseImage({\n  count: 1,\n  sizeType: ['original', 'compressed'],\n  sourceType: ['album', 'camera'],\n  success (res) {\n    // tempFilePath可以作为img标签的src属性显示图片\n    const tempFilePaths = res.tempFilePaths\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "chooseMedia": {
    "prefix": "chooseMedia",
    "body": [
      "wx.chooseMedia({",
      "  camera: ${1:camera},",
      "  count: ${2:0},",
      "  maxDuration: ${3:0},",
      "  mediaType: [$4],",
      "  sizeType: [$5],",
      "  sourceType: [$6],",
      "  success: (result) => {$7},",
      "  fail: (res) => {$8},",
      "  complete: (res) => {$9},",
      "})"
    ],
    "description": "/** [wx.chooseMedia(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/video/wx.chooseMedia.html)\n*\n* 需要基础库： `2.23.0`\n*\n* 拍摄或从手机相册中选择图片或视频。\n*\n* **示例代码**\n*\n* ```js\nwx.chooseMedia({\n  count: 9,\n  mediaType: ['image','video'],\n  sourceType: ['album', 'camera'],\n  maxDuration: 30,\n  camera: 'back',\n  success(res) {\n    console.log(res.tempFiles.tempFilePath)\n    console.log(res.tempFiles.size)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "chooseMessageFile": {
    "prefix": "chooseMessageFile",
    "body": [
      "wx.chooseMessageFile({",
      "  count: ${1:0},",
      "  extension: [$2],",
      "  type: ${3:type},",
      "  success: (result) => {$4},",
      "  fail: (res) => {$5},",
      "  complete: (res) => {$6},",
      "})"
    ],
    "description": "/** [wx.chooseMessageFile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.chooseMessageFile.html)\n*\n* 需要基础库： `2.23.0`\n*\n* 从客户端会话选择文件。\n*\n* ****\n*\n* ```js\nwx.chooseMessageFile({\n  count: 10,\n  type: 'image',\n  success (res) {\n    // tempFilePath可以作为img标签的src属性显示图片\n    const tempFilePaths = res.tempFiles\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "clearStorage": {
    "prefix": "clearStorage",
    "body": [
      "wx.clearStorage({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.clearStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.clearStorage.html)\n*\n* 清理本地数据缓存。\n*\n* **示例代码**\n*\n* ```js\nwx.clearStorage()\n```\n*\n* ```js\ntry {\n  wx.clearStorageSync()\n} catch(e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "clearStorageSync": {
    "prefix": "clearStorageSync",
    "body": [
      "wx.clearStorageSync()"
    ],
    "description": "/** [wx.clearStorageSync()](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.clearStorageSync.html)\n*\n* [wx.clearStorage](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.clearStorage.html) 的同步版本\n*\n* **示例代码**\n*\n* ```js\nwx.clearStorage()\n```\n*\n* ```js\ntry {\n  wx.clearStorageSync()\n} catch(e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "closeBLEConnection": {
    "prefix": "closeBLEConnection",
    "body": [
      "wx.closeBLEConnection({",
      "  deviceId: '${1:deviceId}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.closeBLEConnection(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.closeBLEConnection.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 断开与蓝牙低功耗设备的连接。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.closeBLEConnection({\n  deviceId,\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "closeBluetoothAdapter": {
    "prefix": "closeBluetoothAdapter",
    "body": [
      "wx.closeBluetoothAdapter({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.closeBluetoothAdapter(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.closeBluetoothAdapter.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 关闭蓝牙模块。调用该方法将断开所有已建立的连接并释放系统资源。建议在使用蓝牙流程后，与 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 成对调用。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.closeBluetoothAdapter({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "closeSocket": {
    "prefix": "closeSocket",
    "body": [
      "wx.closeSocket({",
      "  code: ${1:0},",
      "  reason: '${2:reason}',",
      "  success: (res) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.closeSocket(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.closeSocket.html)\n*\n* @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n*\n* 关闭 WebSocket 连接。\n*\n* **示例代码**\n*\n* ```js\nwx.connectSocket({\n  url: 'test.php'\n})\n\n//注意这里有时序问题，\n//如果 wx.connectSocket 还没回调 wx.onSocketOpen，而先调用 wx.closeSocket，那么就做不到关闭 WebSocket 的目的。\n//必须在 WebSocket 打开期间调用 wx.closeSocket 才能关闭。\nwx.onSocketOpen(function() {\n  wx.closeSocket()\n})\n\nwx.onSocketClose(function(res) {\n  console.log('WebSocket 已关闭！')\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "createBLEConnection": {
    "prefix": "createBLEConnection",
    "body": [
      "wx.createBLEConnection({",
      "  deviceId: '${1:deviceId}',",
      "  timeout: ${2:0},",
      "  success: (res) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.createBLEConnection(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 连接蓝牙低功耗设备。\n*\n* 若小程序在之前已有搜索过某个蓝牙设备，并成功建立连接，可直接传入之前搜索获取的 deviceId 直接尝试连接该设备，无需再次进行搜索操作。\n*\n* **注意**\n*\n* - 请保证尽量成对的调用 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 和 [wx.closeBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.closeBLEConnection.html) 接口。安卓如果重复调用 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 创建连接，有可能导致系统持有同一设备多个连接的实例，导致调用 `closeBLEConnection` 的时候并不能真正的断开与设备的连接。\n* - 蓝牙连接随时可能断开，建议监听 [wx.onBLEConnectionStateChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLEConnectionStateChange.html) 回调事件，当蓝牙设备断开时按需执行重连操作\n* - 若对未连接的设备或已断开连接的设备调用数据读写操作的接口，会返回 10006 错误，建议进行重连操作。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.createBLEConnection({\n  deviceId,\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "createBLEPeripheralServer": {
    "prefix": "createBLEPeripheralServer",
    "body": [
      "wx.createBLEPeripheralServer({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.createBLEPeripheralServer(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/wx.createBLEPeripheralServer.html)\n         *\n         * 需要基础库： `2.10.3`\n         *\n         * 建立本地作为蓝牙低功耗外围设备的服务端，可创建多个。 */",
    "detail": "function",
    "kind": 9
  },
  "exitMiniProgram": {
    "prefix": "exitMiniProgram",
    "body": [
      "wx.exitMiniProgram({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.exitMiniProgram(Object object)](https://developers.weixin.qq.com/minigame/dev/api/navigate/wx.exitMiniProgram.html)\n         *\n         * 需要基础库： `2.17.3`\n         *\n         * 退出当前小程序。必须有点击行为才能调用成功。 */",
    "detail": "function",
    "kind": 9
  },
  "exitVoIPChat": {
    "prefix": "exitVoIPChat",
    "body": [
      "wx.exitVoIPChat({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.exitVoIPChat(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.exitVoIPChat.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 退出（销毁）实时语音通话 */",
    "detail": "function",
    "kind": 9
  },
  "faceDetect": {
    "prefix": "faceDetect",
    "body": [
      "wx.faceDetect({",
      "  frameBuffer: ${1:frameBuffer},",
      "  height: ${2:0},",
      "  width: ${3:0},",
      "  enableAngle: ${4:true},",
      "  enableConf: ${5:true},",
      "  enableMultiFace: ${6:true},",
      "  enablePoint: ${7:true},",
      "  success: (result) => {$8},",
      "  fail: (res) => {$9},",
      "  complete: (res) => {$10},",
      "})"
    ],
    "description": "/** [wx.faceDetect(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/face/wx.faceDetect.html)\n         *\n         * 需要基础库： `2.18.0`\n         *\n         * @warning **该接口已停止维护，推荐使用 [wx.createVKSession](#) 代替**\n         *\n         * 人脸检测，使用前需要通过 wx.initFaceDetect 进行一次初始化，推荐使用相机接口返回的帧数据。本接口不再维护，请使用 [wx.createVKSession](#) 接口代替。详情参考[人脸检测指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/visionkit/face.html)\n         *\n         * ****\n         *\n         * ### 特别说明\n         * 若小程序人脸识别功能涉及采集、存储用户生物特征（如人脸照片或视频、身份证和手持身份证、身份证照和免冠照等），此类型服务需使用[微信原生人脸识别接口](https://developers.weixin.qq.com/community/develop/doc/000442d352c1202bd498ecb105c00d?highline=%E4%BA%BA%E8%84%B8%E6%A0%B8%E8%BA%AB)。 */",
    "detail": "function",
    "kind": 9
  },
  "getAvailableAudioSources": {
    "prefix": "getAvailableAudioSources",
    "body": [
      "wx.getAvailableAudioSources({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getAvailableAudioSources(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.getAvailableAudioSources.html)\n         *\n         * 需要基础库： `2.1.0`\n         *\n         * 获取当前支持的音频输入源 */",
    "detail": "function",
    "kind": 9
  },
  "getBLEDeviceCharacteristics": {
    "prefix": "getBLEDeviceCharacteristics",
    "body": [
      "wx.getBLEDeviceCharacteristics({",
      "  deviceId: '${1:deviceId}',",
      "  serviceId: '${2:serviceId}',",
      "  success: (result) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.getBLEDeviceCharacteristics(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.getBLEDeviceCharacteristics.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 获取蓝牙低功耗设备某个服务中所有特征 (characteristic)。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEDeviceCharacteristics({\n  // 这里的 deviceId 需要已经通过 wx.createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 wx.getBLEDeviceServices 接口中获取\n  serviceId,\n  success (res) {\n    console.log('device getBLEDeviceCharacteristics:', res.characteristics)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getBLEDeviceRSSI": {
    "prefix": "getBLEDeviceRSSI",
    "body": [
      "wx.getBLEDeviceRSSI({",
      "  deviceId: '${1:deviceId}',",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getBLEDeviceRSSI(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.getBLEDeviceRSSI.html)\n         *\n         * 需要基础库： `2.11.0`\n         *\n         * 获取蓝牙低功耗设备的信号强度 (Received Signal Strength Indication, RSSI)。 */",
    "detail": "function",
    "kind": 9
  },
  "getBLEDeviceServices": {
    "prefix": "getBLEDeviceServices",
    "body": [
      "wx.getBLEDeviceServices({",
      "  deviceId: '${1:deviceId}',",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getBLEDeviceServices(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.getBLEDeviceServices.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 获取蓝牙低功耗设备所有服务 (service)。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEDeviceServices({\n  // 这里的 deviceId 需要已经通过 wx.createBLEConnection 与对应设备建立连接\n  deviceId,\n  success (res) {\n    console.log('device services:', res.services)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getBLEMTU": {
    "prefix": "getBLEMTU",
    "body": [
      "wx.getBLEMTU({",
      "  deviceId: '${1:deviceId}',",
      "  writeType: ${2:writeType},",
      "  success: (result) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.getBLEMTU(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.getBLEMTU.html)\n*\n* 需要基础库： `2.20.1`\n*\n* 获取蓝牙低功耗的最大传输单元。需在 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 调用成功后调用。\n*\n* **注意**\n*\n* - 小程序中 MTU 为 ATT_MTU，包含 Op-Code 和 Attribute Handle 的长度，实际可以传输的数据长度为 `ATT_MTU - 3`\n* - iOS 系统中 MTU 为固定值；安卓系统中，MTU 会在系统协商成功之后发生改变，建议使用 [wx.onBLEMTUChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLEMTUChange.html) 监听。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEMTU({\n  deviceId: '',\n  writeType: 'write',\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getBatteryInfo": {
    "prefix": "getBatteryInfo",
    "body": [
      "wx.getBatteryInfo({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getBatteryInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/battery/wx.getBatteryInfo.html)\n         *\n         * 获取设备电量。同步 API [wx.getBatteryInfoSync](https://developers.weixin.qq.com/minigame/dev/api/device/battery/wx.getBatteryInfoSync.html) 在 iOS 上不可用。 */",
    "detail": "function",
    "kind": 9
  },
  "getBeacons": {
    "prefix": "getBeacons",
    "body": [
      "wx.getBeacons({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getBeacons(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.getBeacons.html)\n         *\n         * 需要基础库： `2.9.2`\n         *\n         * 获取所有已搜索到的 Beacon 设备 */",
    "detail": "function",
    "kind": 9
  },
  "getBluetoothAdapterState": {
    "prefix": "getBluetoothAdapterState",
    "body": [
      "wx.getBluetoothAdapterState({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getBluetoothAdapterState(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.getBluetoothAdapterState.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 获取本机蓝牙适配器状态。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBluetoothAdapterState({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getBluetoothDevices": {
    "prefix": "getBluetoothDevices",
    "body": [
      "wx.getBluetoothDevices({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getBluetoothDevices(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.getBluetoothDevices.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 获取在蓝牙模块生效期间所有搜索到的蓝牙设备。包括已经和本机处于连接状态的设备。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进度字符串示例\nfunction ab2hex(buffer) {\n  var hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.getBluetoothDevices({\n  success: function (res) {\n    console.log(res)\n    if (res.devices[0]) {\n      console.log(ab2hex(res.devices[0].advertisData))\n    }\n  }\n})\n```\n*\n* **注意**\n*\n* - 该接口获取到的设备列表为**蓝牙模块生效期间所有搜索到的蓝牙设备**，若在蓝牙模块使用流程结束后未及时调用 [wx.closeBluetoothAdapter](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.closeBluetoothAdapter.html) 释放资源，会存在调用该接口会返回之前的蓝牙使用流程中搜索到的蓝牙设备，可能设备已经不在用户身边，无法连接。 */",
    "detail": "function",
    "kind": 9
  },
  "getChannelsLiveInfo": {
    "prefix": "getChannelsLiveInfo",
    "body": [
      "wx.getChannelsLiveInfo({",
      "  finderUserName: '${1:finderUserName}',",
      "  endTime: ${2:0},",
      "  startTime: ${3:0},",
      "  success: (result) => {$4},",
      "  fail: (res) => {$5},",
      "  complete: (res) => {$6},",
      "})"
    ],
    "description": "/** [wx.getChannelsLiveInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.getChannelsLiveInfo.html)\n         *\n         * 需要基础库： `2.15.0`\n         *\n         * 获取视频号直播信息 */",
    "detail": "function",
    "kind": 9
  },
  "getChannelsLiveNoticeInfo": {
    "prefix": "getChannelsLiveNoticeInfo",
    "body": [
      "wx.getChannelsLiveNoticeInfo({",
      "  finderUserName: '${1:finderUserName}',",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getChannelsLiveNoticeInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.getChannelsLiveNoticeInfo.html)\n         *\n         * 需要基础库： `2.19.0`\n         *\n         * 获取视频号直播预告信息 */",
    "detail": "function",
    "kind": 9
  },
  "getClipboardData": {
    "prefix": "getClipboardData",
    "body": [
      "wx.getClipboardData({",
      "  success: (option) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getClipboardData(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/clipboard/wx.getClipboardData.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 获取系统剪贴板的内容\n*\n* **示例代码**\n*\n* ```js\nwx.getClipboardData({\n  success (res){\n    console.log(res.data)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getConnectedBluetoothDevices": {
    "prefix": "getConnectedBluetoothDevices",
    "body": [
      "wx.getConnectedBluetoothDevices({",
      "  services: [$1],",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getConnectedBluetoothDevices(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.getConnectedBluetoothDevices.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 根据主服务 UUID 获取已连接的蓝牙设备。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getConnectedBluetoothDevices({\n  services: ['FEE7'],\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getExtConfig": {
    "prefix": "getExtConfig",
    "body": [
      "wx.getExtConfig({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getExtConfig(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfig.html)\n*\n* 需要基础库： `2.8.3`\n*\n* 获取[第三方平台](https://developers.weixin.qq.com/minigame/dev/devtools/ext.html)自定义的数据字段。\n*\n* **Tips**\n*\n* 1. 本接口暂时无法通过 [wx.canIUse](#) 判断是否兼容，开发者需要自行判断 [wx.getExtConfig](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfig.html) 是否存在来兼容\n*\n* ****\n*\n* ```js\nif (wx.getExtConfig) {\n  wx.getExtConfig({\n    success (res) {\n      console.log(res.extConfig)\n    }\n  })\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getFriendCloudStorage": {
    "prefix": "getFriendCloudStorage",
    "body": [
      "wx.getFriendCloudStorage({",
      "  keyList: [$1],",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getFriendCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getFriendCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 拉取当前用户所有同玩好友的托管数据。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "getFuzzyLocation": {
    "prefix": "getFuzzyLocation",
    "body": [
      "wx.getFuzzyLocation({",
      "  type: '${1:type}',",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getFuzzyLocation(Object object)](https://developers.weixin.qq.com/minigame/dev/api/location/wx.getFuzzyLocation.html)\n*\n* 需要基础库： `2.25.0`\n*\n* 获取当前的模糊地理位置。\n*  ## 使用方法\n*  自 2022 年 7 月 14 日后发布的小程序，若使用该接口，需要在 app.json 中进行声明，否则将无法正常使用该接口，2022年7月14日前发布的小程序不受影响。[具体规则见公告](https://developers.weixin.qq.com/community/develop/doc/000a02f2c5026891650e7f40351c01)\n*  ## 申请开通\n*  暂只针对具备与地理位置强相关的使用场景的小程序开放，在小程序管理后台，「开发」-「开发管理」-「接口设置」中自助开通该接口权限。 从2022年7月14日开始在代码审核环节将检测该接口是否已完成开通，如未开通，将在代码提审环节进行拦截。\n*\n* **示例代码**\n*\n*  ```js\n wx.getFuzzyLocation({\n  type: 'wgs84',\n  success (res) {\n    const latitude = res.latitude\n    const longitude = res.longitude\n  }\n})\n ``` */",
    "detail": "function",
    "kind": 9
  },
  "getGameClubData": {
    "prefix": "getGameClubData",
    "body": [
      "wx.getGameClubData({",
      "  dataTypeList: [$1],",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getGameClubData(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/game-club/wx.getGameClubData.html)\n         *\n         * 需要基础库： `2.25.4`\n         *\n         * 获取游戏圈数据。\n         *\n         * **type说明**\n         *\n         * | type取值 | 说明                                   | subKey  | GameClubDataByType.value |\n         * | ------- | -------------------------------------- | -------- | -------- |\n         * | 1   | 加入该游戏圈时间                            | 无需传入 | 秒级Unix时间戳 |\n         * | 3   | 用户禁言状态                                | 无需传入  | 0：正常 1：禁言  |\n         * | 4   | 当天(自然日)点赞贴子数                       | 无需传入  |  |\n         * | 5   | 当天(自然日)评论贴子数                        | 无需传入  |  |\n         * | 6   | 当天(自然日)发表贴子数                       | 无需传入  |  |\n         * | 7   | 当天(自然日)发表视频贴子数                    | 无需传入  |  |\n         * | 8   | 当天(自然日)赞官方贴子数                      | 无需传入  |  |\n         * | 9   | 当天(自然日)评论官方贴子数                     | 无需传入  |  |\n         * | 10   | 当天(自然日)发表到本圈子话题的贴子数           | 传入话题id，从mp-游戏圈话题管理处获取  |  |\n         *\n         * **encryptedData 解密后得到的 GameClubData 的结构**\n         *\n         * | 属性 | 类型 | 说明                                   |\n         * | ------- | ------- | -------------------------------------- |\n         * |  dataList   | Array<GameClubDataByType> | 游戏圈相关数据的对象数组           |\n         *\n         * **GameClubDataByType 的结构**\n         *\n         * | 属性 | 类型 | 说明                                   |\n         * | ------- |------- |  -------------------------------------- |\n         * |  dataType   | number | 与输入的 dataType 一致          |\n         * |  value   | number | 不同type返回的value含义不同，见type表格说明           | */",
    "detail": "function",
    "kind": 9
  },
  "getGroupCloudStorage": {
    "prefix": "getGroupCloudStorage",
    "body": [
      "wx.getGroupCloudStorage({",
      "  keyList: [$1],",
      "  shareTicket: '${2:shareTicket}',",
      "  success: (result) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.getGroupCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getGroupCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 获取群同玩成员的游戏数据。小游戏通过群分享卡片打开的情况下才可以调用。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "getGroupEnterInfo": {
    "prefix": "getGroupEnterInfo",
    "body": [
      "wx.getGroupEnterInfo({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getGroupEnterInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/group/wx.getGroupEnterInfo.html)\n*\n* 需要基础库： `2.10.4`\n*\n* 获取微信群聊场景下的小程序启动信息。群聊场景包括群聊小程序消息卡片、群待办、群工具。可用于获取当前群的 opengid。\n* ## 注意事项\n*  - 基础库 v2.10.4 开始支持获取群工具小程序启动信息\n*  - 基础库 v2.17.3 开始支持获取群聊小程序消息卡片、群待办小程序启动信息\n*\n* **示例代码**\n*\n* ```js\nwx.getGroupEnterInfo({\n  success(res) {\n    // res\n    {\n      errMsg: 'getGroupEnterInfo:ok',\n      encryptedData: '',\n      iv: ''\n    }\n  },\n  fail() {\n\n  }\n})\n```\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法) 。\n* 获取得到的开放数据为以下 json 结构（其中 opengid 为当前群的唯一标识）：\n*\n* ```json\n{\n \"opengid\": \"OPENGID\"\n}\n```\n*\n* **Tips**\n*\n* - 如需要展示群名称，小程序可以使用[开放数据组件](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/open-data.html)\n* - 小游戏可以通过 `wx.getGroupInfo` 接口获取群名称 */",
    "detail": "function",
    "kind": 9
  },
  "getGroupInfo": {
    "prefix": "getGroupInfo",
    "body": [
      "wx.getGroupInfo({",
      "  openGId: '${1:openGId}',",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getGroupInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getGroupInfo.html)\n         *\n         * 需要基础库： `2.10.1`\n         *\n         * 获取群信息。小游戏通过群分享卡片打开的情况下才可以调用。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "getInferenceEnvInfo": {
    "prefix": "getInferenceEnvInfo",
    "body": [
      "wx.getInferenceEnvInfo({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getInferenceEnvInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/inference/wx.getInferenceEnvInfo.html)\n*\n* 需要基础库： `2.30.1`\n*\n* 获取通用AI推理引擎版本。使用前可参考[AI指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/inference/tutorial.html)\n*\n* **示例代码**\n*\n* ```js\n// 获取通用AI推理引擎版本\nwx.getInferenceEnvInfo({\n      complete: (res) => {\n        console.log(res.ver)\n        console.log(res.errMsg)\n      },\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getLocalIPAddress": {
    "prefix": "getLocalIPAddress",
    "body": [
      "wx.getLocalIPAddress({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getLocalIPAddress(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.getLocalIPAddress.html)\n*\n* 需要基础库： `2.20.1`\n*\n* 获取局域网IP地址\n*\n* **示例代码**\n*\n* ```js\nwx.getLocalIPAddress({\n  success (res) {\n    const localip = res.localip\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getLocation": {
    "prefix": "getLocation",
    "body": [
      "wx.getLocation({",
      "  altitude: ${1:true},",
      "  highAccuracyExpireTime: ${2:0},",
      "  isHighAccuracy: ${3:true},",
      "  type: '${4:type}',",
      "  success: (result) => {$5},",
      "  fail: (res) => {$6},",
      "  complete: (res) => {$7},",
      "})"
    ],
    "description": "/** [wx.getLocation(Object object)](https://developers.weixin.qq.com/minigame/dev/api/location/wx.getLocation.html)\n*\n* 获取当前的地理位置、速度。当用户离开小程序后，此接口无法调用。开启高精度定位，接口耗时会增加，可指定 highAccuracyExpireTime 作为超时时间。地图相关使用的坐标格式应为 gcj02。\n*  高频率调用会导致耗电，如有需要可使用持续定位接口 `wx.onLocationChange`。\n*  基础库 `2.17.0` 版本起 `wx.getLocation` 增加调用频率限制，[相关公告](https://developers.weixin.qq.com/community/develop/doc/000aee91a98d206bc6dbe722b51801)。\n*\n* **示例代码**\n*\n*  ```js\n wx.getLocation({\n  type: 'wgs84',\n  success (res) {\n    const latitude = res.latitude\n    const longitude = res.longitude\n    const speed = res.speed\n    const accuracy = res.accuracy\n  }\n})\n ```\n*\n* **注意**\n*\n* - `2.17.0 起 `wx.getLocation` 增加调用频率限制，[相关公告](https://developers.weixin.qq.com/community/develop/doc/000aee91a98d206bc6dbe722b51801)\n* - 工具中定位模拟使用IP定位，可能会有一定误差。且工具目前仅支持 gcj02 坐标。\n* - 使用第三方服务进行逆地址解析时，请确认第三方服务默认的坐标系，正确进行坐标转换。 */",
    "detail": "function",
    "kind": 9
  },
  "getNetworkType": {
    "prefix": "getNetworkType",
    "body": [
      "wx.getNetworkType({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getNetworkType(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.getNetworkType.html)\n*\n* 获取网络类型\n*\n* **示例代码**\n*\n* ```js\nwx.getNetworkType({\n  success (res) {\n    const networkType = res.networkType\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getPotentialFriendList": {
    "prefix": "getPotentialFriendList",
    "body": [
      "wx.getPotentialFriendList({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getPotentialFriendList(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getPotentialFriendList.html)\n         *\n         * 需要基础库： `2.9.0`\n         *\n         * 获取可能对游戏感兴趣的未注册的好友名单。每次调用最多可获得 5 个好友。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "getScreenBrightness": {
    "prefix": "getScreenBrightness",
    "body": [
      "wx.getScreenBrightness({",
      "  success: (option) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getScreenBrightness(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/screen/wx.getScreenBrightness.html)\n         *\n         * 需要基础库： `1.2.0`\n         *\n         * 获取屏幕亮度\n         *\n         * **说明**\n         *\n         * - 若安卓系统设置中开启了自动调节亮度功能，则屏幕亮度会根据光线自动调整，该接口仅能获取自动调节亮度之前的值，而非实时的亮度值。 */",
    "detail": "function",
    "kind": 9
  },
  "getSetting": {
    "prefix": "getSetting",
    "body": [
      "wx.getSetting({",
      "  withSubscriptions: ${1:true},",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getSetting(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.getSetting.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 获取用户的当前设置。**返回值中只会出现小程序已经向用户请求过的[权限](https://developers.weixin.qq.com/minigame/dev/guide/framework/authorize.html)**。\n*\n* **示例代码**\n*\n* ```js\nwx.getSetting({\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n  }\n})\n```\n*\n* ```js\nwx.getSetting({\n  withSubscriptions: true,\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n    console.log(res.subscriptionsSetting)\n    // res.subscriptionsSetting = {\n    //   mainSwitch: true, // 订阅消息总开关\n    //   itemSettings: {   // 每一项开关\n    //     SYS_MSG_TYPE_INTERACTIVE: 'accept', // 小游戏系统订阅消息\n    //     SYS_MSG_TYPE_RANK: 'accept'\n    //     zun-LzcQyW-edafCVvzPkK4de2Rllr1fFpw2A_x0oXE: 'reject', // 普通一次性订阅消息\n    //     ke_OZC_66gZxALLcsuI7ilCJSP2OJ2vWo2ooUPpkWrw: 'ban',\n    //   }\n    // }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getShareInfo": {
    "prefix": "getShareInfo",
    "body": [
      "wx.getShareInfo({",
      "  shareTicket: '${1:shareTicket}',",
      "  timeout: ${2:0},",
      "  success: (result) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.getShareInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.getShareInfo.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 获取转发详细信息\n*\n* **示例代码**\n*\n* 敏感数据获取方式 [加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法) 。\n* 获取得到的开放数据为以下 json 结构（其中 openGId 为当前群的唯一标识）：\n*\n* ```json\n{\n \"openGId\": \"OPENGID\"\n}\n```\n*\n* **Tips**\n*\n* - 如需要展示群名称，小程序可以使用 [开放数据组件](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/open-data.html)\n* - 小游戏可以通过 [`wx.getGroupInfo`](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getGroupInfo.html) 接口获取群名称 */",
    "detail": "function",
    "kind": 9
  },
  "getStorage": {
    "prefix": "getStorage",
    "body": [
      "wx.getStorage(${1:option})"
    ],
    "description": "/** [wx.getStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorage.html)\n*\n* 从本地缓存中异步获取指定 key 的内容。\n*\n* **示例代码**\n*\n* ```js\nwx.getStorage({\n  key: 'key',\n  success (res) {\n    console.log(res.data)\n  }\n})\n```\n*\n* ```js\n// 开启加密存储\nwx.setStorage({\n  key: \"key\",\n  data: \"value\",\n  encrypt: true, // 若开启加密存储，setStorage 和 getStorage 需要同时声明 encrypt 的值为 true\n  success() {\n    wx.getStorage({\n      key: \"key\",\n      encrypt: true, // 若开启加密存储，setStorage 和 getStorage 需要同时声明 encrypt 的值为 true\n      success(res) {\n        console.log(res.data)\n      }\n    })\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getStorageInfo": {
    "prefix": "getStorageInfo",
    "body": [
      "wx.getStorageInfo({",
      "  success: (option) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getStorageInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorageInfo.html)\n*\n* 异步获取当前storage的相关信息。\n*\n* **示例代码**\n*\n* ```js\nwx.getStorageInfo({\n  success (res) {\n    console.log(res.keys)\n    console.log(res.currentSize)\n    console.log(res.limitSize)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getStorageInfoSync()\n  console.log(res.keys)\n  console.log(res.currentSize)\n  console.log(res.limitSize)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getSystemInfo": {
    "prefix": "getSystemInfo",
    "body": [
      "wx.getSystemInfo({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getSystemInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfo.html)\n*\n* 获取系统信息。**由于历史原因，wx.getSystemInfo 是异步的调用格式，但是是同步返回，需要异步获取系统信息请使用 [wx.getSystemInfoAsync](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoAsync.html)。**\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/WkUCgXmS7mqO)\n*\n* ```js\nwx.getSystemInfo({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getSystemInfoSync()\n  console.log(res.model)\n  console.log(res.pixelRatio)\n  console.log(res.windowWidth)\n  console.log(res.windowHeight)\n  console.log(res.language)\n  console.log(res.version)\n  console.log(res.platform)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getSystemInfoAsync": {
    "prefix": "getSystemInfoAsync",
    "body": [
      "wx.getSystemInfoAsync({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getSystemInfoAsync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoAsync.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 异步获取系统信息。需要一定的微信客户端版本支持，在不支持的客户端上，会使用同步实现来返回。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/WkUCgXmS7mqO)\n*\n* ```js\nwx.getSystemInfoAsync({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getUserCloudStorage": {
    "prefix": "getUserCloudStorage",
    "body": [
      "wx.getUserCloudStorage({",
      "  keyList: [$1],",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getUserCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getUserCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 获取当前用户托管数据当中对应 key 的数据。该接口只可在开放数据域下使用 */",
    "detail": "function",
    "kind": 9
  },
  "getUserCloudStorageKeys": {
    "prefix": "getUserCloudStorageKeys",
    "body": [
      "wx.getUserCloudStorageKeys({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getUserCloudStorageKeys(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getUserCloudStorageKeys.html)\n         *\n         * 需要基础库： `2.16.1`\n         *\n         * 获取当前用户托管数据当中所有的 key。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "getUserInfo": {
    "prefix": "getUserInfo",
    "body": [
      "wx.getUserInfo({",
      "  lang: ${1:lang},",
      "  withCredentials: ${2:true},",
      "  success: (result) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.getUserInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/wx.getUserInfo.html)\n*\n* 获取用户信息。详情参考 [用户信息获取](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/user-info.html)\n*\n* **示例代码**\n*\n* ```js\n// 必须是在用户已经授权的情况下调用\nwx.getUserInfo({\n  success: function(res) {\n    var userInfo = res.userInfo\n    var nickName = userInfo.nickName\n    var avatarUrl = userInfo.avatarUrl\n    var gender = userInfo.gender //性别 0：未知、1：男、2：女\n    var province = userInfo.province\n    var city = userInfo.city\n    var country = userInfo.country\n  }\n})\n```\n*\n* 敏感数据有两种获取方式：\n* 1. 使用 [加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法)\n* 2. 使用 [云调用直接获取开放数据](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#云调用直接获取开放数据)\n* 获取得到的开放数据为以下 json 结构：\n*\n* ```json\n{\n  \"openId\": \"OPENID\",\n  \"nickName\": \"NICKNAME\",\n  \"gender\": GENDER,\n  \"city\": \"CITY\",\n  \"province\": \"PROVINCE\",\n  \"country\": \"COUNTRY\",\n  \"avatarUrl\": \"AVATARURL\",\n  \"unionId\": \"UNIONID\",\n  \"watermark\": {\n    \"appid\":\"APPID\",\n    \"timestamp\":TIMESTAMP\n  }\n}\n```\n*\n* **最佳用法**\n*\n* ```js\n// 通过 wx.getSetting 查询用户是否已授权头像昵称信息\nwx.getSetting({\n  success (res){\n    if (res.authSetting['scope.userInfo']) {\n      // 已经授权，可以直接调用 getUserInfo 获取头像昵称\n      wx.getUserInfo({\n        success: function(res) {\n          console.log(res.userInfo)\n        }\n      })\n    } else {\n      // 否则，先通过 wx.createUserInfoButton 接口发起授权\n      let button = wx.createUserInfoButton({\n        type: 'text',\n        text: '获取用户信息',\n        style: {\n          left: 10,\n          top: 76,\n          width: 200,\n          height: 40,\n          lineHeight: 40,\n          backgroundColor: '#ff0000',\n          color: '#ffffff',\n          textAlign: 'center',\n          fontSize: 16,\n          borderRadius: 4\n        }\n      })\n      button.onTap((res) => {\n        // 用户同意授权后回调，通过回调可获取用户头像昵称信息\n        console.log(res)\n      })\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "getUserInteractiveStorage": {
    "prefix": "getUserInteractiveStorage",
    "body": [
      "wx.getUserInteractiveStorage({",
      "  keyList: [$1],",
      "  success: (result) => {$2},",
      "  fail: (result) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.getUserInteractiveStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getUserInteractiveStorage.html)\n         *\n         * 需要基础库： `2.7.7`\n         *\n         * 获取当前用户互动型托管数据对应 key 的数据。该接口需要用户授权。 */",
    "detail": "function",
    "kind": 9
  },
  "getWeRunData": {
    "prefix": "getWeRunData",
    "body": [
      "wx.getWeRunData({",
      "  success: (result) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.getWeRunData(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/werun/wx.getWeRunData.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 获取用户过去三十一天微信运动步数。需要先调用 [wx.login](https://developers.weixin.qq.com/minigame/dev/api/open-api/login/wx.login.html) 接口。步数信息会在用户主动进入小程序时更新。\n*\n* **示例代码**\n*\n* ```js\nwx.getWeRunData({\n  success (res) {\n    // 拿 encryptedData 到开发者后台解密开放数据\n    const encryptedData = res.encryptedData\n    // 或拿 cloudID 通过云调用直接获取开放数据\n    const cloudID = res.cloudID\n  }\n})\n```\n*\n* **开放数据 JSON 结构**\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法) 。\n* 获取得到的开放数据为以下 json 结构：\n*\n* ```json\n{\n  \"stepInfoList\": [\n    {\n      \"timestamp\": 1445866601,\n      \"step\": 100\n    },\n    {\n      \"timestamp\": 1445876601,\n      \"step\": 120\n    }\n  ]\n}\n```\n*\n* stepInfoList 中，每一项结构如下：\n*\n* | 属性 | 类型 | 说明 |\n* | --- | ---- | --- |\n* | timestamp | number | 时间戳，表示数据对应的时间 |\n* | step | number | 微信运动步数 | */",
    "detail": "function",
    "kind": 9
  },
  "hideKeyboard": {
    "prefix": "hideKeyboard",
    "body": [
      "wx.hideKeyboard({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.hideKeyboard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.hideKeyboard.html)\n         *\n         * 隐藏键盘 */",
    "detail": "function",
    "kind": 9
  },
  "hideLoading": {
    "prefix": "hideLoading",
    "body": [
      "wx.hideLoading({",
      "  noConflict: ${1:true},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.hideLoading(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.hideLoading.html)\n         *\n         * 需要基础库： `1.1.0`\n         *\n         * 隐藏 loading 提示框 */",
    "detail": "function",
    "kind": 9
  },
  "hideShareMenu": {
    "prefix": "hideShareMenu",
    "body": [
      "wx.hideShareMenu({",
      "  menus: [$1],",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.hideShareMenu(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.hideShareMenu.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 隐藏当前页面的转发按钮\n*\n* ****\n*\n* ## 注意事项\n*  - \"shareAppMessage\"表示“发送给朋友”按钮，\"shareTimeline\"表示“分享到朋友圈”按钮\n*  - 隐藏“发送给朋友”按钮时必须同时隐藏“分享到朋友圈”按钮，隐藏“分享到朋友圈”按钮时则允许不隐藏“发送给朋友”按钮\n*\n* **示例代码**\n*\n* ```js\nwx.hideShareMenu({\n  menus: ['shareAppMessage', 'shareTimeline']\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "hideToast": {
    "prefix": "hideToast",
    "body": [
      "wx.hideToast({",
      "  noConflict: ${1:true},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.hideToast(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.hideToast.html)\n         *\n         * 隐藏消息提示框 */",
    "detail": "function",
    "kind": 9
  },
  "initFaceDetect": {
    "prefix": "initFaceDetect",
    "body": [
      "wx.initFaceDetect({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.initFaceDetect(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/face/wx.initFaceDetect.html)\n         *\n         * 需要基础库： `2.18.0`\n         *\n         * @warning **该接口已停止维护，推荐使用 [wx.createVKSession](#) 代替**\n         *\n         * 初始化人脸检测。本接口不再维护，请使用 [wx.createVKSession](#) 接口代替。详情参考[人脸检测指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/visionkit/face.html)\n         *\n         * ****\n         *\n         * ### 特别说明\n         * 若小程序人脸识别功能涉及采集、存储用户生物特征（如人脸照片或视频、身份证和手持身份证、身份证照和免冠照等），此类型服务需使用[微信原生人脸识别接口](https://developers.weixin.qq.com/community/develop/doc/000442d352c1202bd498ecb105c00d?highline=%E4%BA%BA%E8%84%B8%E6%A0%B8%E8%BA%AB)。 */",
    "detail": "function",
    "kind": 9
  },
  "isBluetoothDevicePaired": {
    "prefix": "isBluetoothDevicePaired",
    "body": [
      "wx.isBluetoothDevicePaired({",
      "  deviceId: '${1:deviceId}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.isBluetoothDevicePaired(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.isBluetoothDevicePaired.html)\n         *\n         * 需要基础库： `2.20.1`\n         *\n         * 查询蓝牙设备是否配对，仅安卓支持。 */",
    "detail": "function",
    "kind": 9
  },
  "joinVoIPChat": {
    "prefix": "joinVoIPChat",
    "body": [
      "wx.joinVoIPChat({",
      "  groupId: '${1:groupId}',",
      "  nonceStr: '${2:nonceStr}',",
      "  signature: '${3:signature}',",
      "  timeStamp: ${4:0},",
      "  forceCellularNetwork: ${5:true},",
      "  muteConfig: {",
      "    muteEarphone: ${6:true},",
      "    muteMicrophone: ${7:true},",
      "  },",
      "  roomType: ${9:roomType},",
      "  success: (result) => {$10},",
      "  fail: (res) => {$11},",
      "  complete: (res) => {$12},",
      "})"
    ],
    "description": "/** [wx.joinVoIPChat(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.joinVoIPChat.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 加入 (创建) 实时语音通话，更多信息可见 [实时语音指南](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/voip-chat.html)。调用前需要用户授权 `scope.record`，若房间类型为视频房间需要用户授权 `scope.camera`。 */",
    "detail": "function",
    "kind": 9
  },
  "login": {
    "prefix": "login",
    "body": [
      "wx.login({",
      "  timeout: ${1:0},",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.login(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/login/wx.login.html)\n*\n* 调用接口获取登录凭证（code）。通过凭证进而换取用户登录态信息，包括用户在当前小程序的唯一标识（openid）、微信开放平台帐号下的唯一标识（unionid，若当前小程序已绑定到微信开放平台帐号）及本次登录的会话密钥（session_key）等。用户数据的加解密通讯需要依赖会话密钥完成。\n*\n* **示例代码**\n*\n* ```js\nwx.login({\n  success (res) {\n    if (res.code) {\n      //发起网络请求\n      wx.request({\n        url: 'https://example.com/onLogin',\n        data: {\n          code: res.code\n        }\n      })\n    } else {\n      console.log('登录失败！' + res.errMsg)\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "makeBluetoothPair": {
    "prefix": "makeBluetoothPair",
    "body": [
      "wx.makeBluetoothPair({",
      "  deviceId: '${1:deviceId}',",
      "  pin: '${2:pin}',",
      "  timeout: ${3:0},",
      "  success: (res) => {$4},",
      "  fail: (res) => {$5},",
      "  complete: (res) => {$6},",
      "})"
    ],
    "description": "/** [wx.makeBluetoothPair(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.makeBluetoothPair.html)\n         *\n         * 需要基础库： `2.12.0`\n         *\n         * 蓝牙配对接口，仅安卓支持。\n         *\n         * 通常情况下（需要指定 `pin` 码或者密码时）系统会接管配对流程，直接调用 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 即可。该接口只应当在开发者不想让用户手动输入 `pin` 码且真机验证确认可以正常生效情况下用。 */",
    "detail": "function",
    "kind": 9
  },
  "modifyFriendInteractiveStorage": {
    "prefix": "modifyFriendInteractiveStorage",
    "body": [
      "wx.modifyFriendInteractiveStorage({",
      "  key: '${1:key}',",
      "  opNum: ${2:0},",
      "  operation: ${3:operation},",
      "  imageUrl: '${4:imageUrl}',",
      "  imageUrlId: '${5:imageUrlId}',",
      "  quiet: ${6:true},",
      "  title: '${7:title}',",
      "  toUser: '${8:toUser}',",
      "  success: (res) => {$9},",
      "  fail: (result) => {$10},",
      "  complete: (res) => {$11},",
      "})"
    ],
    "description": "/** [wx.modifyFriendInteractiveStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.modifyFriendInteractiveStorage.html)\n*\n* 需要基础库： `2.7.7`\n*\n* 修改好友的互动型托管数据，该接口只可在开放数据域下使用。\n*\n* **赠送动作的校验**\n*\n* 调用该接口需要上传 JSServer 函数 \"checkInteractiveData\"，该函数可用于执行赠送动作的校验逻辑，校验通过后返回结果表示本次赠送是否合法。只有 checkInteractiveData 返回了 `{ret: true}`，此次修改才会成功。\n*\n* **使用模板规则进行交互**\n*\n* 每次调用该接口会弹窗询问用户是否确认执行该操作，2.9.0 之后版本，需要在 game.json 中设置 `modifyFriendInteractiveStorageTemplates` 来定制交互的文案。\n* `modifyFriendInteractiveStorageTemplates` 是一个模板数组，每一个模板需要有 key, action, object 参数，还有一个可选参数 ratio，详细说明见示例配置：\n* ```json\n{\n  \"modifyFriendInteractiveStorageTemplates\": [\n    {\n      \"key\": \"1\", // 这个 key 与接口中同名参数相对应，不同的 key 对应不同的模板\n      \"action\": \"赠送\", // 互动行为\n      \"object\": \"金币\", // 互动物品\n      \"ratio\": 10 // 物品比率，opNum * ratio 代表物品个数\n    }\n  ]\n}\n```\n* 最后生成的文案为 \"确认 ${action} ${nickname} ${object}？\"，或者 \"确认 ${action} ${nickname} ${object} x ${opNum * ratio}？\"\n*\n* **使用自定义文案进行交互**\n*\n* 2.7.7 之后，2.9.0 之前的版本，文案通过 game.json 的 `modifyFriendInteractiveStorageConfirmWording` 字段配置。\n* 配置内容可包含 nickname 变量，用 ${nickname} 表示，实际调用时会被替换成好友的昵称。示例配置：\n* ```json\n{\n  \"modifyFriendInteractiveStorageConfirmWording\": \"确认送给${nickname}一个体力？\"\n}\n```\n* 2.9.0 之后，在 `modifyFriendInteractiveStorageTemplates` 和 `modifyFriendInteractiveStorageConfirmWording` 都存在的情况下，会优先使用前者。 */",
    "detail": "function",
    "kind": 9
  },
  "navigateToMiniProgram": {
    "prefix": "navigateToMiniProgram",
    "body": [
      "wx.navigateToMiniProgram({",
      "  appId: '${1:appId}',",
      "  envVersion: ${2:envVersion},",
      "  extraData: ${3:extraData},",
      "  noRelaunchIfPathUnchanged: ${4:true},",
      "  path: '${5:path}',",
      "  shortLink: '${6:shortLink}',",
      "  success: (res) => {$7},",
      "  fail: (res) => {$8},",
      "  complete: (res) => {$9},",
      "})"
    ],
    "description": "/** [wx.navigateToMiniProgram(Object object)](https://developers.weixin.qq.com/minigame/dev/api/navigate/wx.navigateToMiniProgram.html)\n*\n* 需要基础库： `2.2.0`\n*\n* 打开另一个小程序\n*\n* **使用限制**\n*\n*  ##### 需要用户触发跳转\n*  从 2.3.0 版本开始，若用户未点击小程序页面任意位置，则开发者将无法调用此接口自动跳转至其他小程序。\n*  ##### 需要用户确认跳转\n*  从 2.3.0 版本开始，在跳转至其他小程序前，将统一增加弹窗，询问是否跳转，用户确认后才可以跳转其他小程序。如果用户点击取消，则回调 `fail cancel`。\n*  ##### 无需声明跳转名单，不限跳转数量（众测中）\n* 1. 从2020年4月24日起，使用跳转其他小程序功能将无需在全局配置中声明跳转名单，调用此接口时将不再校验所跳转的 AppID 是否在 navigateToMiniProgramAppIdList 中。\n* 2. 从2020年4月24日起，跳转其他小程序将不再受数量限制，使用此功能时请注意遵守运营规范。\n*\n* **运营规范**\n*\n* 平台将坚决打击小程序盒子等互推行为，使用此功能时请严格遵守[《微信小程序平台运营规范》](https://developers.weixin.qq.com/miniprogram/product/#_5-10-%E4%BA%92%E6%8E%A8%E8%A1%8C%E4%B8%BA)，若发现小程序违反运营规范将被下架处理。\n*\n* **关于调试**\n*\n* - 在开发者工具上调用此 API 并不会真实的跳转到另外的小程序，但是开发者工具会校验本次调用跳转是否成功。[详情](https://developers.weixin.qq.com/miniprogram/dev/devtools/different.html#跳转小程序调试支持)\n* - 开发者工具上支持被跳转的小程序处理接收参数的调试。[详情](https://developers.weixin.qq.com/miniprogram/dev/devtools/different.html#跳转小程序调试支持)\n*\n* **示例代码**\n*\n* ```js\nwx.navigateToMiniProgram({\n  appId: '',\n  path: 'page/index/index?id=123',\n  extraData: {\n    foo: 'bar'\n  },\n  envVersion: 'develop',\n  success(res) {\n    // 打开成功\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "notifyBLECharacteristicValueChange": {
    "prefix": "notifyBLECharacteristicValueChange",
    "body": [
      "wx.notifyBLECharacteristicValueChange({",
      "  characteristicId: '${1:characteristicId}',",
      "  deviceId: '${2:deviceId}',",
      "  serviceId: '${3:serviceId}',",
      "  state: ${4:true},",
      "  type: '${5:type}',",
      "  success: (res) => {$6},",
      "  fail: (res) => {$7},",
      "  complete: (res) => {$8},",
      "})"
    ],
    "description": "/** [wx.notifyBLECharacteristicValueChange(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 启用蓝牙低功耗设备特征值变化时的 notify 功能，订阅特征。注意：必须设备的特征支持 notify 或者 indicate 才可以成功调用。\n*\n* 另外，必须先启用 [wx.notifyBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html) 才能监听到设备 `characteristicValueChange` 事件\n*\n* **注意**\n*\n* - 订阅操作成功后需要设备主动更新特征的 value，才会触发 [wx.onBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html) 回调。\n* - 安卓平台上，在本接口调用成功后立即调用 [wx.writeBLECharacteristicValue](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.writeBLECharacteristicValue.html) 接口，在部分机型上会发生 10008 系统错误\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.notifyBLECharacteristicValueChange({\n  state: true, // 启用 notify 功能\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  success (res) {\n    console.log('notifyBLECharacteristicValueChange success', res.errMsg)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offAccelerometerChange": {
    "prefix": "offAccelerometerChange",
    "body": [
      "wx.offAccelerometerChange((res) => {$1})"
    ],
    "description": "/** [wx.offAccelerometerChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.offAccelerometerChange.html)\n*\n* 需要基础库： `2.9.3`\n*\n* 移除加速度数据事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onAccelerometerChange(listener)\nwx.offAccelerometerChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offAddToFavorites": {
    "prefix": "offAddToFavorites",
    "body": [
      "wx.offAddToFavorites((result) => {$1})"
    ],
    "description": "/** [wx.offAddToFavorites(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offAddToFavorites.html)\n*\n* 需要基础库： `2.10.3`\n*\n* 移除用户点击菜单「收藏」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onAddToFavorites(listener)\nwx.offAddToFavorites(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offAudioInterruptionBegin": {
    "prefix": "offAudioInterruptionBegin",
    "body": [
      "wx.offAudioInterruptionBegin((res) => {$1})"
    ],
    "description": "/** [wx.offAudioInterruptionBegin(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.offAudioInterruptionBegin.html)\n*\n* 需要基础库： `1.8.0`\n*\n* 移除音频因为受到系统占用而被中断开始事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onAudioInterruptionBegin(listener)\nwx.offAudioInterruptionBegin(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offAudioInterruptionEnd": {
    "prefix": "offAudioInterruptionEnd",
    "body": [
      "wx.offAudioInterruptionEnd((res) => {$1})"
    ],
    "description": "/** [wx.offAudioInterruptionEnd(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.offAudioInterruptionEnd.html)\n*\n* 需要基础库： `1.8.0`\n*\n* 移除音频中断结束事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onAudioInterruptionEnd(listener)\nwx.offAudioInterruptionEnd(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offBLECharacteristicValueChange": {
    "prefix": "offBLECharacteristicValueChange",
    "body": [
      "wx.offBLECharacteristicValueChange((result) => {$1})"
    ],
    "description": "/** [wx.offBLECharacteristicValueChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.offBLECharacteristicValueChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除蓝牙低功耗设备的特征值变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBLECharacteristicValueChange(listener)\nwx.offBLECharacteristicValueChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offBLEConnectionStateChange": {
    "prefix": "offBLEConnectionStateChange",
    "body": [
      "wx.offBLEConnectionStateChange((result) => {$1})"
    ],
    "description": "/** [wx.offBLEConnectionStateChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.offBLEConnectionStateChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除蓝牙低功耗连接状态改变事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBLEConnectionStateChange(listener)\nwx.offBLEConnectionStateChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offBLEMTUChange": {
    "prefix": "offBLEMTUChange",
    "body": [
      "wx.offBLEMTUChange((result) => {$1})"
    ],
    "description": "/** [wx.offBLEMTUChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.offBLEMTUChange.html)\n*\n* 需要基础库： `2.20.1`\n*\n* 移除蓝牙低功耗的最大传输单元变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBLEMTUChange(listener)\nwx.offBLEMTUChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offBLEPeripheralConnectionStateChanged": {
    "prefix": "offBLEPeripheralConnectionStateChanged",
    "body": [
      "wx.offBLEPeripheralConnectionStateChanged((result) => {$1})"
    ],
    "description": "/** [wx.offBLEPeripheralConnectionStateChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/wx.offBLEPeripheralConnectionStateChanged.html)\n*\n* 需要基础库： `2.10.3`\n*\n* 移除当前外围设备被连接或断开连接事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBLEPeripheralConnectionStateChanged(listener)\nwx.offBLEPeripheralConnectionStateChanged(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offBeaconServiceChange": {
    "prefix": "offBeaconServiceChange",
    "body": [
      "wx.offBeaconServiceChange((res) => {$1})"
    ],
    "description": "/** [wx.offBeaconServiceChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.offBeaconServiceChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除 Beacon 服务状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBeaconServiceChange(listener)\nwx.offBeaconServiceChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offBeaconUpdate": {
    "prefix": "offBeaconUpdate",
    "body": [
      "wx.offBeaconUpdate((res) => {$1})"
    ],
    "description": "/** [wx.offBeaconUpdate(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.offBeaconUpdate.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除 Beacon 设备更新事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBeaconUpdate(listener)\nwx.offBeaconUpdate(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offBluetoothAdapterStateChange": {
    "prefix": "offBluetoothAdapterStateChange",
    "body": [
      "wx.offBluetoothAdapterStateChange((result) => {$1})"
    ],
    "description": "/** [wx.offBluetoothAdapterStateChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.offBluetoothAdapterStateChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除蓝牙适配器状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBluetoothAdapterStateChange(listener)\nwx.offBluetoothAdapterStateChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offBluetoothDeviceFound": {
    "prefix": "offBluetoothDeviceFound",
    "body": [
      "wx.offBluetoothDeviceFound((res) => {$1})"
    ],
    "description": "/** [wx.offBluetoothDeviceFound(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.offBluetoothDeviceFound.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除搜索到新设备的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBluetoothDeviceFound(listener)\nwx.offBluetoothDeviceFound(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offCompassChange": {
    "prefix": "offCompassChange",
    "body": [
      "wx.offCompassChange((res) => {$1})"
    ],
    "description": "/** [wx.offCompassChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/compass/wx.offCompassChange.html)\n*\n* 需要基础库： `2.9.3`\n*\n* 移除罗盘数据变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onCompassChange(listener)\nwx.offCompassChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offCopyUrl": {
    "prefix": "offCopyUrl",
    "body": [
      "wx.offCopyUrl((result) => {$1})"
    ],
    "description": "/** [wx.offCopyUrl(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offCopyUrl.html)\n*\n* 需要基础库： `2.14.3`\n*\n* 移除用户点击右上角菜单的「复制链接」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onCopyUrl(listener)\nwx.offCopyUrl(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offDeviceMotionChange": {
    "prefix": "offDeviceMotionChange",
    "body": [
      "wx.offDeviceMotionChange((res) => {$1})"
    ],
    "description": "/** [wx.offDeviceMotionChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.offDeviceMotionChange.html)\n*\n* 需要基础库： `2.9.3`\n*\n* 移除设备方向变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onDeviceMotionChange(listener)\nwx.offDeviceMotionChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offDeviceOrientationChange": {
    "prefix": "offDeviceOrientationChange",
    "body": [
      "wx.offDeviceOrientationChange((result) => {$1})"
    ],
    "description": "/** [wx.offDeviceOrientationChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/orientation/wx.offDeviceOrientationChange.html)\n*\n* 需要基础库： `2.1.0`\n*\n* 移除屏幕转向切换事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onDeviceOrientationChange(listener)\nwx.offDeviceOrientationChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offError": {
    "prefix": "offError",
    "body": [
      "wx.offError((res) => {$1})"
    ],
    "description": "/** [wx.offError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.offError.html)\n*\n* 移除全局错误事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onError(listener)\nwx.offError(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offHandoff": {
    "prefix": "offHandoff",
    "body": [
      "wx.offHandoff((result) => {$1})"
    ],
    "description": "/** [wx.offHandoff(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offHandoff.html)\n*\n* 需要基础库： `2.14.4`\n*\n* 移除用户点击菜单「在电脑上打开」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onHandoff(listener)\nwx.offHandoff(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offHide": {
    "prefix": "offHide",
    "body": [
      "wx.offHide((res) => {$1})"
    ],
    "description": "/** [wx.offHide(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.offHide.html)\n*\n* 移除小游戏隐藏到后台事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onHide(listener)\nwx.offHide(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offInteractiveStorageModified": {
    "prefix": "offInteractiveStorageModified",
    "body": [
      "wx.offInteractiveStorageModified(${1:callback})"
    ],
    "description": "/** [wx.offInteractiveStorageModified(function callback)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.offInteractiveStorageModified.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 取消监听成功修改好友的互动型托管数据事件，该接口在游戏主域使用 */",
    "detail": "function",
    "kind": 9
  },
  "offKeyDown": {
    "prefix": "offKeyDown",
    "body": [
      "wx.offKeyDown((result) => {$1})"
    ],
    "description": "/** [wx.offKeyDown(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyDown.html)\n*\n* 需要基础库： `2.10.1`\n*\n* 移除键盘按键按下事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyDown(listener)\nwx.offKeyDown(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offKeyUp": {
    "prefix": "offKeyUp",
    "body": [
      "wx.offKeyUp((result) => {$1})"
    ],
    "description": "/** [wx.offKeyUp(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyUp.html)\n*\n* 需要基础库： `2.10.1`\n*\n* 移除键盘按键弹起事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyUp(listener)\nwx.offKeyUp(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offKeyboardComplete": {
    "prefix": "offKeyboardComplete",
    "body": [
      "wx.offKeyboardComplete((result) => {$1})"
    ],
    "description": "/** [wx.offKeyboardComplete(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyboardComplete.html)\n*\n* 移除监听键盘收起的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyboardComplete(listener)\nwx.offKeyboardComplete(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offKeyboardConfirm": {
    "prefix": "offKeyboardConfirm",
    "body": [
      "wx.offKeyboardConfirm((result) => {$1})"
    ],
    "description": "/** [wx.offKeyboardConfirm(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyboardConfirm.html)\n*\n* 移除用户点击键盘 Confirm 按钮时的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyboardConfirm(listener)\nwx.offKeyboardConfirm(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offKeyboardHeightChange": {
    "prefix": "offKeyboardHeightChange",
    "body": [
      "wx.offKeyboardHeightChange((result) => {$1})"
    ],
    "description": "/** [wx.offKeyboardHeightChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyboardHeightChange.html)\n*\n* 需要基础库： `2.21.3`\n*\n* 移除键盘高度变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyboardHeightChange(listener)\nwx.offKeyboardHeightChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offKeyboardInput": {
    "prefix": "offKeyboardInput",
    "body": [
      "wx.offKeyboardInput((result) => {$1})"
    ],
    "description": "/** [wx.offKeyboardInput(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyboardInput.html)\n*\n* 移除键盘输入事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyboardInput(listener)\nwx.offKeyboardInput(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offMemoryWarning": {
    "prefix": "offMemoryWarning",
    "body": [
      "wx.offMemoryWarning((result) => {$1})"
    ],
    "description": "/** [wx.offMemoryWarning(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/memory/wx.offMemoryWarning.html)\n*\n* 需要基础库： `2.9.0`\n*\n* 移除内存不足告警事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onMemoryWarning(listener)\nwx.offMemoryWarning(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offMouseDown": {
    "prefix": "offMouseDown",
    "body": [
      "wx.offMouseDown((result) => {$1})"
    ],
    "description": "/** [wx.offMouseDown(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.offMouseDown.html)\n*\n* 移除鼠标按键按下事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onMouseDown(listener)\nwx.offMouseDown(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offMouseMove": {
    "prefix": "offMouseMove",
    "body": [
      "wx.offMouseMove((result) => {$1})"
    ],
    "description": "/** [wx.offMouseMove(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.offMouseMove.html)\n*\n* 移除鼠标移动事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onMouseMove(listener)\nwx.offMouseMove(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offMouseUp": {
    "prefix": "offMouseUp",
    "body": [
      "wx.offMouseUp((result) => {$1})"
    ],
    "description": "/** [wx.offMouseUp(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.offMouseUp.html)\n*\n* 移除鼠标按键弹起事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onMouseUp(listener)\nwx.offMouseUp(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offNetworkStatusChange": {
    "prefix": "offNetworkStatusChange",
    "body": [
      "wx.offNetworkStatusChange((res) => {$1})"
    ],
    "description": "/** [wx.offNetworkStatusChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.offNetworkStatusChange.html)\n*\n* 需要基础库： `2.9.3`\n*\n* 移除网络状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onNetworkStatusChange(listener)\nwx.offNetworkStatusChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offNetworkWeakChange": {
    "prefix": "offNetworkWeakChange",
    "body": [
      "wx.offNetworkWeakChange((result) => {$1})"
    ],
    "description": "/** [wx.offNetworkWeakChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.offNetworkWeakChange.html)\n*\n* 需要基础库： `2.21.0`\n*\n* 移除弱网状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onNetworkWeakChange(listener)\nwx.offNetworkWeakChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offShareAppMessage": {
    "prefix": "offShareAppMessage",
    "body": [
      "wx.offShareAppMessage((result) => {$1})"
    ],
    "description": "/** [wx.offShareAppMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offShareAppMessage.html)\n*\n* 移除用户点击右上角菜单的「转发」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onShareAppMessage(listener)\nwx.offShareAppMessage(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offShareTimeline": {
    "prefix": "offShareTimeline",
    "body": [
      "wx.offShareTimeline((result) => {$1})"
    ],
    "description": "/** [wx.offShareTimeline(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offShareTimeline.html)\n*\n* 需要基础库： `2.11.3`\n*\n* 移除用户点击右上角菜单的「分享到朋友圈」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onShareTimeline(listener)\nwx.offShareTimeline(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offShow": {
    "prefix": "offShow",
    "body": [
      "wx.offShow((result) => {$1})"
    ],
    "description": "/** [wx.offShow(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.offShow.html)\n*\n* 移除小游戏回到前台的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onShow(listener)\nwx.offShow(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offTouchCancel": {
    "prefix": "offTouchCancel",
    "body": [
      "wx.offTouchCancel((result) => {$1})"
    ],
    "description": "/** [wx.offTouchCancel(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.offTouchCancel.html)\n*\n* 移除触点失效事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onTouchCancel(listener)\nwx.offTouchCancel(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offTouchEnd": {
    "prefix": "offTouchEnd",
    "body": [
      "wx.offTouchEnd((result) => {$1})"
    ],
    "description": "/** [wx.offTouchEnd(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.offTouchEnd.html)\n*\n* 移除触摸结束事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onTouchEnd(listener)\nwx.offTouchEnd(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offTouchMove": {
    "prefix": "offTouchMove",
    "body": [
      "wx.offTouchMove((result) => {$1})"
    ],
    "description": "/** [wx.offTouchMove(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.offTouchMove.html)\n*\n* 移除触点移动事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onTouchMove(listener)\nwx.offTouchMove(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offTouchStart": {
    "prefix": "offTouchStart",
    "body": [
      "wx.offTouchStart((result) => {$1})"
    ],
    "description": "/** [wx.offTouchStart(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.offTouchStart.html)\n*\n* 移除开始触摸事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onTouchStart(listener)\nwx.offTouchStart(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offUnhandledRejection": {
    "prefix": "offUnhandledRejection",
    "body": [
      "wx.offUnhandledRejection((result) => {$1})"
    ],
    "description": "/** [wx.offUnhandledRejection(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.offUnhandledRejection.html)\n*\n* 需要基础库： `2.10.0`\n*\n* 移除未处理的 Promise 拒绝事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onUnhandledRejection(listener)\nwx.offUnhandledRejection(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offVoIPChatInterrupted": {
    "prefix": "offVoIPChatInterrupted",
    "body": [
      "wx.offVoIPChatInterrupted((result) => {$1})"
    ],
    "description": "/** [wx.offVoIPChatInterrupted(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.offVoIPChatInterrupted.html)\n*\n* 需要基础库： `2.9.0`\n*\n* 移除被动断开实时语音通话事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onVoIPChatInterrupted(listener)\nwx.offVoIPChatInterrupted(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offVoIPChatMembersChanged": {
    "prefix": "offVoIPChatMembersChanged",
    "body": [
      "wx.offVoIPChatMembersChanged((result) => {$1})"
    ],
    "description": "/** [wx.offVoIPChatMembersChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.offVoIPChatMembersChanged.html)\n*\n* 需要基础库： `2.9.0`\n*\n* 移除实时语音通话成员在线状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onVoIPChatMembersChanged(listener)\nwx.offVoIPChatMembersChanged(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offVoIPChatSpeakersChanged": {
    "prefix": "offVoIPChatSpeakersChanged",
    "body": [
      "wx.offVoIPChatSpeakersChanged((result) => {$1})"
    ],
    "description": "/** [wx.offVoIPChatSpeakersChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.offVoIPChatSpeakersChanged.html)\n*\n* 需要基础库： `2.9.0`\n*\n* 移除实时语音通话成员通话状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onVoIPChatSpeakersChanged(listener)\nwx.offVoIPChatSpeakersChanged(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offVoIPChatStateChanged": {
    "prefix": "offVoIPChatStateChanged",
    "body": [
      "wx.offVoIPChatStateChanged((result) => {$1})"
    ],
    "description": "/** [wx.offVoIPChatStateChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.offVoIPChatStateChanged.html)\n*\n* 需要基础库： `2.16.0`\n*\n* 移除房间状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onVoIPChatStateChanged(listener)\nwx.offVoIPChatStateChanged(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offWheel": {
    "prefix": "offWheel",
    "body": [
      "wx.offWheel((result) => {$1})"
    ],
    "description": "/** [wx.offWheel(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/wheel-event/wx.offWheel.html)\n*\n* 移除鼠标滚轮事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onWheel(listener)\nwx.offWheel(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "offWindowResize": {
    "prefix": "offWindowResize",
    "body": [
      "wx.offWindowResize((result) => {$1})"
    ],
    "description": "/** [wx.offWindowResize(function listener)](https://developers.weixin.qq.com/minigame/dev/api/ui/window/wx.offWindowResize.html)\n*\n* 移除窗口尺寸变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onWindowResize(listener)\nwx.offWindowResize(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onAccelerometerChange": {
    "prefix": "onAccelerometerChange",
    "body": [
      "wx.onAccelerometerChange((result) => {$1})"
    ],
    "description": "/** [wx.onAccelerometerChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.onAccelerometerChange.html)\n*\n* 监听加速度数据事件。频率根据 [wx.startAccelerometer()](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.startAccelerometer.html) 的 interval 参数, 接口调用后会自动开始监听。\n*\n* **示例代码**\n*\n* ```js\nwx.onAccelerometerChange(callback)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onAddToFavorites": {
    "prefix": "onAddToFavorites",
    "body": [
      "wx.onAddToFavorites((result) => {$1})"
    ],
    "description": "/** [wx.onAddToFavorites(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onAddToFavorites.html)\n         *\n         * 需要基础库： `2.10.3`\n         *\n         * 监听用户点击菜单「收藏」按钮时触发的事件（安卓7.0.15起支持，iOS 暂不支持） */",
    "detail": "function",
    "kind": 9
  },
  "onAudioInterruptionBegin": {
    "prefix": "onAudioInterruptionBegin",
    "body": [
      "wx.onAudioInterruptionBegin((res) => {$1})"
    ],
    "description": "/** [wx.onAudioInterruptionBegin(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.onAudioInterruptionBegin.html)\n         *\n         * 需要基础库： `1.8.0`\n         *\n         * 监听音频因为受到系统占用而被中断开始事件。以下场景会触发此事件：闹钟、电话、FaceTime 通话、微信语音聊天、微信视频聊天、有声广告开始播放、实名认证页面弹出等。此事件触发后，小程序内所有音频会暂停。 */",
    "detail": "function",
    "kind": 9
  },
  "onAudioInterruptionEnd": {
    "prefix": "onAudioInterruptionEnd",
    "body": [
      "wx.onAudioInterruptionEnd((res) => {$1})"
    ],
    "description": "/** [wx.onAudioInterruptionEnd(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.onAudioInterruptionEnd.html)\n         *\n         * 需要基础库： `1.8.0`\n         *\n         * 监听音频中断结束事件。在收到 onAudioInterruptionBegin 事件之后，小程序内所有音频会暂停，收到此事件之后才可再次播放成功 */",
    "detail": "function",
    "kind": 9
  },
  "onBLECharacteristicValueChange": {
    "prefix": "onBLECharacteristicValueChange",
    "body": [
      "wx.onBLECharacteristicValueChange((result) => {$1})"
    ],
    "description": "/** [wx.onBLECharacteristicValueChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 监听蓝牙低功耗设备的特征值变化事件。必须先调用 [wx.notifyBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html) 接口才能接收到设备推送的 notification。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进制字符串示例\nfunction ab2hex(buffer) {\n  let hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.onBLECharacteristicValueChange(function(res) {\n  console.log(`characteristic ${res.characteristicId} has changed, now is ${res.value}`)\n  console.log(ab2hex(res.value))\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onBLEConnectionStateChange": {
    "prefix": "onBLEConnectionStateChange",
    "body": [
      "wx.onBLEConnectionStateChange((result) => {$1})"
    ],
    "description": "/** [wx.onBLEConnectionStateChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLEConnectionStateChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 监听蓝牙低功耗连接状态改变事件。包括开发者主动连接或断开连接，设备丢失，连接异常断开等等\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBLEConnectionStateChange(function(res) {\n  // 该方法回调中可以用于处理连接意外断开等异常情况\n  console.log(`device ${res.deviceId} state has changed, connected: ${res.connected}`)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onBLEMTUChange": {
    "prefix": "onBLEMTUChange",
    "body": [
      "wx.onBLEMTUChange((result) => {$1})"
    ],
    "description": "/** [wx.onBLEMTUChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLEMTUChange.html)\n*\n* 需要基础库： `2.20.1`\n*\n* 监听蓝牙低功耗的最大传输单元变化事件（仅安卓触发）。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBLEMTUChange(function (res) {\n  console.log('bluetooth mtu is', res.mtu)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onBLEPeripheralConnectionStateChanged": {
    "prefix": "onBLEPeripheralConnectionStateChanged",
    "body": [
      "wx.onBLEPeripheralConnectionStateChanged((result) => {$1})"
    ],
    "description": "/** [wx.onBLEPeripheralConnectionStateChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/wx.onBLEPeripheralConnectionStateChanged.html)\n         *\n         * 需要基础库： `2.10.3`\n         *\n         * 监听当前外围设备被连接或断开连接事件 */",
    "detail": "function",
    "kind": 9
  },
  "onBeaconServiceChange": {
    "prefix": "onBeaconServiceChange",
    "body": [
      "wx.onBeaconServiceChange((result) => {$1})"
    ],
    "description": "/** [wx.onBeaconServiceChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.onBeaconServiceChange.html)\n         *\n         * 需要基础库： `2.9.2`\n         *\n         * 监听 Beacon 服务状态变化事件，仅能注册一个监听 */",
    "detail": "function",
    "kind": 9
  },
  "onBeaconUpdate": {
    "prefix": "onBeaconUpdate",
    "body": [
      "wx.onBeaconUpdate((result) => {$1})"
    ],
    "description": "/** [wx.onBeaconUpdate(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.onBeaconUpdate.html)\n         *\n         * 需要基础库： `2.9.2`\n         *\n         * 监听 Beacon 设备更新事件，仅能注册一个监听 */",
    "detail": "function",
    "kind": 9
  },
  "onBluetoothAdapterStateChange": {
    "prefix": "onBluetoothAdapterStateChange",
    "body": [
      "wx.onBluetoothAdapterStateChange((result) => {$1})"
    ],
    "description": "/** [wx.onBluetoothAdapterStateChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.onBluetoothAdapterStateChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 监听蓝牙适配器状态变化事件\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBluetoothAdapterStateChange(function (res) {\n  console.log('adapterState changed, now is', res)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onBluetoothDeviceFound": {
    "prefix": "onBluetoothDeviceFound",
    "body": [
      "wx.onBluetoothDeviceFound((result) => {$1})"
    ],
    "description": "/** [wx.onBluetoothDeviceFound(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.onBluetoothDeviceFound.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 监听搜索到新设备的事件\n*\n* **注意**\n*\n* - 若在 [wx.onBluetoothDeviceFound](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.onBluetoothDeviceFound.html) 回调了某个设备，则此设备会添加到 [wx.getBluetoothDevices](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.getBluetoothDevices.html) 接口获取到的数组中。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进度字符串示例\nfunction ab2hex(buffer) {\n  var hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.onBluetoothDeviceFound(function(res) {\n  var devices = res.devices;\n  console.log('new device list has founded')\n  console.dir(devices)\n  console.log(ab2hex(devices[0].advertisData))\n})\n```\n*\n* **注意**\n*\n* - 蓝牙设备在被搜索到时，系统返回的 `name` 字段一般为广播包中的 `LocalName` 字段中的设备名称，而如果与蓝牙设备建立连接，系统返回的 `name` 字段会改为从蓝牙设备上获取到的 `GattName`。若需要动态改变设备名称并展示，建议使用 `localName` 字段。\n* - 安卓下部分机型需要有位置权限才能搜索到设备，需留意是否开启了位置权限 */",
    "detail": "function",
    "kind": 9
  },
  "onCompassChange": {
    "prefix": "onCompassChange",
    "body": [
      "wx.onCompassChange((result) => {$1})"
    ],
    "description": "/** [wx.onCompassChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/compass/wx.onCompassChange.html)\n         *\n         * 监听罗盘数据变化事件。频率：5 次/秒，接口调用后会自动开始监听，可使用 wx.stopCompass 停止监听。\n         *\n         * **accuracy 在 iOS/Android 的差异**\n         *\n         * 由于平台差异，accuracy 在 iOS/Android 的值不同。\n         *\n         * - iOS：accuracy 是一个 number 类型的值，表示相对于磁北极的偏差。0 表示设备指向磁北，90 表示指向东，180 表示指向南，依此类推。\n         * - Android：accuracy 是一个 string 类型的枚举值。\n         *\n         * | 值              | 说明                                                                                   |\n         * | --------------- | -------------------------------------------------------------------------------------- |\n         * | high            | 高精度                                                                                 |\n         * | medium          | 中等精度                                                                               |\n         * | low             | 低精度                                                                                 |\n         * | no-contact      | 不可信，传感器失去连接                                                                 |\n         * | unreliable      | 不可信，原因未知                                                                       |\n         * | unknow ${value} | 未知的精度枚举值，即该 Android 系统此时返回的表示精度的 value 不是一个标准的精度枚举值 | */",
    "detail": "function",
    "kind": 9
  },
  "onCopyUrl": {
    "prefix": "onCopyUrl",
    "body": [
      "wx.onCopyUrl((result) => {$1})"
    ],
    "description": "/** [wx.onCopyUrl(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onCopyUrl.html)\n         *\n         * 需要基础库： `2.14.3`\n         *\n         * 监听用户点击右上角菜单的「复制链接」按钮时触发的事件。本接口为 Beta 版本，暂只在 Android 平台支持。 */",
    "detail": "function",
    "kind": 9
  },
  "onDeviceMotionChange": {
    "prefix": "onDeviceMotionChange",
    "body": [
      "wx.onDeviceMotionChange((result) => {$1})"
    ],
    "description": "/** [wx.onDeviceMotionChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.onDeviceMotionChange.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 监听设备方向变化事件。频率根据 [wx.startDeviceMotionListening()](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.startDeviceMotionListening.html) 的 interval 参数。可以使用 [wx.stopDeviceMotionListening()](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.stopDeviceMotionListening.html) 停止监听。 */",
    "detail": "function",
    "kind": 9
  },
  "onDeviceOrientationChange": {
    "prefix": "onDeviceOrientationChange",
    "body": [
      "wx.onDeviceOrientationChange((result) => {$1})"
    ],
    "description": "/** [wx.onDeviceOrientationChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/orientation/wx.onDeviceOrientationChange.html)\n         *\n         * 需要基础库： `2.1.0`\n         *\n         * 监听屏幕转向切换事件\n         *\n         * ****\n         *\n         * ## 注意事项\n         * - 在基础库 v2.26.0 之前，wx.onDeviceOrientationChange 只监听左横屏和右横屏之间切换的事件，且仅在 game.json 中配置 deviceOrientation 的值为 landscape 时生效。\n         * - 从基础库 v2.26.0 开始，wx.onDeviceOrientationChange 会同时监听通过 wx.setDeviceOrientation 接口切换横竖屏的事件。 */",
    "detail": "function",
    "kind": 9
  },
  "onError": {
    "prefix": "onError",
    "body": [
      "wx.onError((message, stack) => {$1})"
    ],
    "description": "/** [wx.onError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.onError.html)\n         *\n         * 监听全局错误事件 */",
    "detail": "function",
    "kind": 9
  },
  "onGyroscopeChange": {
    "prefix": "onGyroscopeChange",
    "body": [
      "wx.onGyroscopeChange((result) => {$1})"
    ],
    "description": "/** [wx.onGyroscopeChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.onGyroscopeChange.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 监听陀螺仪数据变化事件。频率根据 [wx.startGyroscope()](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.startGyroscope.html) 的 interval 参数。可以使用 [wx.stopGyroscope()](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.stopGyroscope.html) 停止监听。 */",
    "detail": "function",
    "kind": 9
  },
  "onHandoff": {
    "prefix": "onHandoff",
    "body": [
      "wx.onHandoff((result) => {$1})"
    ],
    "description": "/** [wx.onHandoff(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onHandoff.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 监听用户点击菜单「在电脑上打开」按钮时触发的事件 */",
    "detail": "function",
    "kind": 9
  },
  "onHide": {
    "prefix": "onHide",
    "body": [
      "wx.onHide((res) => {$1})"
    ],
    "description": "/** [wx.onHide(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.onHide.html)\n         *\n         * 监听小游戏隐藏到后台事件。锁屏、按 HOME 键退到桌面、显示在聊天顶部等操作会触发此事件。 */",
    "detail": "function",
    "kind": 9
  },
  "onInteractiveStorageModified": {
    "prefix": "onInteractiveStorageModified",
    "body": [
      "wx.onInteractiveStorageModified(${1:callback})"
    ],
    "description": "/** [wx.onInteractiveStorageModified(function callback)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.onInteractiveStorageModified.html)\n         *\n         * 需要基础库： `2.9.0`\n         *\n         * 监听成功修改好友的互动型托管数据事件，该接口在游戏主域使用 */",
    "detail": "function",
    "kind": 9
  },
  "onKeyDown": {
    "prefix": "onKeyDown",
    "body": [
      "wx.onKeyDown((result) => {$1})"
    ],
    "description": "/** [wx.onKeyDown(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyDown.html)\n         *\n         * 需要基础库： `2.10.1`\n         *\n         * 监听键盘按键按下事件，仅适用于 PC 平台 */",
    "detail": "function",
    "kind": 9
  },
  "onKeyUp": {
    "prefix": "onKeyUp",
    "body": [
      "wx.onKeyUp((result) => {$1})"
    ],
    "description": "/** [wx.onKeyUp(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyUp.html)\n         *\n         * 需要基础库： `2.10.1`\n         *\n         * 监听键盘按键弹起事件，仅适用于 PC 平台 */",
    "detail": "function",
    "kind": 9
  },
  "onKeyboardComplete": {
    "prefix": "onKeyboardComplete",
    "body": [
      "wx.onKeyboardComplete((result) => {$1})"
    ],
    "description": "/** [wx.onKeyboardComplete(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyboardComplete.html)\n         *\n         * 监听监听键盘收起的事件 */",
    "detail": "function",
    "kind": 9
  },
  "onKeyboardConfirm": {
    "prefix": "onKeyboardConfirm",
    "body": [
      "wx.onKeyboardConfirm((result) => {$1})"
    ],
    "description": "/** [wx.onKeyboardConfirm(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyboardConfirm.html)\n         *\n         * 监听用户点击键盘 Confirm 按钮时的事件 */",
    "detail": "function",
    "kind": 9
  },
  "onKeyboardHeightChange": {
    "prefix": "onKeyboardHeightChange",
    "body": [
      "wx.onKeyboardHeightChange((result) => {$1})"
    ],
    "description": "/** [wx.onKeyboardHeightChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyboardHeightChange.html)\n*\n* 需要基础库： `2.21.3`\n*\n* 监听键盘高度变化事件\n*\n* **示例代码**\n*\n* ```js\nwx.onKeyboardHeightChange(res => {\n  console.log(res.height)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onKeyboardInput": {
    "prefix": "onKeyboardInput",
    "body": [
      "wx.onKeyboardInput((result) => {$1})"
    ],
    "description": "/** [wx.onKeyboardInput(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyboardInput.html)\n         *\n         * 监听键盘输入事件 */",
    "detail": "function",
    "kind": 9
  },
  "onMemoryWarning": {
    "prefix": "onMemoryWarning",
    "body": [
      "wx.onMemoryWarning((result) => {$1})"
    ],
    "description": "/** [wx.onMemoryWarning(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/memory/wx.onMemoryWarning.html)\n         *\n         * 需要基础库： `2.0.2`\n         *\n         * 监听内存不足告警事件。\n         *\n         * 当 iOS/Android 向小程序进程发出内存警告时，触发该事件。触发该事件不意味小程序被杀，大部分情况下仅仅是告警，开发者可在收到通知后回收一些不必要资源避免进一步加剧内存紧张。\n         *\n         * **示例代码**\n         *\n         * ```js\n         * wx.onMemoryWarning(function () {\n         *   console.log('onMemoryWarningReceive')\n         * })\n         * `` */",
    "detail": "function",
    "kind": 9
  },
  "onMessage": {
    "prefix": "onMessage",
    "body": [
      "wx.onMessage(${1:callback})"
    ],
    "description": "/** [wx.onMessage(function callback)](https://developers.weixin.qq.com/minigame/dev/api/open-api/context/wx.onMessage.html)\n         *\n         * 监听主域发送的消息 */",
    "detail": "function",
    "kind": 9
  },
  "onMouseDown": {
    "prefix": "onMouseDown",
    "body": [
      "wx.onMouseDown((result) => {$1})"
    ],
    "description": "/** [wx.onMouseDown(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.onMouseDown.html)\n         *\n         * 监听鼠标按键按下事件 */",
    "detail": "function",
    "kind": 9
  },
  "onMouseMove": {
    "prefix": "onMouseMove",
    "body": [
      "wx.onMouseMove((result) => {$1})"
    ],
    "description": "/** [wx.onMouseMove(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.onMouseMove.html)\n         *\n         * 监听鼠标移动事件 */",
    "detail": "function",
    "kind": 9
  },
  "onMouseUp": {
    "prefix": "onMouseUp",
    "body": [
      "wx.onMouseUp((result) => {$1})"
    ],
    "description": "/** [wx.onMouseUp(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.onMouseUp.html)\n         *\n         * 监听鼠标按键弹起事件 */",
    "detail": "function",
    "kind": 9
  },
  "onNetworkStatusChange": {
    "prefix": "onNetworkStatusChange",
    "body": [
      "wx.onNetworkStatusChange((result) => {$1})"
    ],
    "description": "/** [wx.onNetworkStatusChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.onNetworkStatusChange.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 监听网络状态变化事件\n*\n* **示例代码**\n*\n* ```js\nwx.onNetworkStatusChange(function (res) {\n  console.log(res.isConnected)\n  console.log(res.networkType)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onNetworkWeakChange": {
    "prefix": "onNetworkWeakChange",
    "body": [
      "wx.onNetworkWeakChange((result) => {$1})"
    ],
    "description": "/** [wx.onNetworkWeakChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.onNetworkWeakChange.html)\n*\n* 需要基础库： `2.21.0`\n*\n* 监听弱网状态变化事件\n*\n* **示例代码**\n*\n* ```js\nwx.onNetworkWeakChange(function (res) {\n  console.log(res.weakNet)\n  console.log(res.networkType)\n})\n// 取消监听\nwx.offNetworkWeakChange()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onShareAppMessage": {
    "prefix": "onShareAppMessage",
    "body": [
      "wx.onShareAppMessage((result) => {$1})"
    ],
    "description": "/** [wx.onShareAppMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onShareAppMessage.html)\n         *\n         * 监听用户点击右上角菜单的「转发」按钮时触发的事件 */",
    "detail": "function",
    "kind": 9
  },
  "onShareMessageToFriend": {
    "prefix": "onShareMessageToFriend",
    "body": [
      "wx.onShareMessageToFriend((result) => {$1})"
    ],
    "description": "/** [wx.onShareMessageToFriend(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onShareMessageToFriend.html)\n         *\n         * 需要基础库： `2.9.4`\n         *\n         * 监听主域接收 `wx.shareMessageToFriend` 接口的成功失败通知 */",
    "detail": "function",
    "kind": 9
  },
  "onShareTimeline": {
    "prefix": "onShareTimeline",
    "body": [
      "wx.onShareTimeline((result) => {$1})"
    ],
    "description": "/** [wx.onShareTimeline(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onShareTimeline.html)\n         *\n         * 需要基础库： `2.11.3`\n         *\n         * 监听用户点击右上角菜单的「分享到朋友圈」按钮时触发的事件。本接口为 Beta 版本，暂只在 Android 平台支持。 */",
    "detail": "function",
    "kind": 9
  },
  "onShow": {
    "prefix": "onShow",
    "body": [
      "wx.onShow((result) => {$1})"
    ],
    "description": "/** [wx.onShow(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.onShow.html)\n         *\n         * 监听小游戏回到前台的事件 */",
    "detail": "function",
    "kind": 9
  },
  "onSocketClose": {
    "prefix": "onSocketClose",
    "body": [
      "wx.onSocketClose((result) => {$1})"
    ],
    "description": "/** [wx.onSocketClose(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.onSocketClose.html)\n         *\n         * @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n         *\n         * 监听 WebSocket 连接关闭事件。 */",
    "detail": "function",
    "kind": 9
  },
  "onSocketError": {
    "prefix": "onSocketError",
    "body": [
      "wx.onSocketError((result) => {$1})"
    ],
    "description": "/** [wx.onSocketError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.onSocketError.html)\n         *\n         * @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n         *\n         * 监听 WebSocket 错误事件。 */",
    "detail": "function",
    "kind": 9
  },
  "onSocketMessage": {
    "prefix": "onSocketMessage",
    "body": [
      "wx.onSocketMessage((result) => {$1})"
    ],
    "description": "/** [wx.onSocketMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.onSocketMessage.html)\n         *\n         * @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n         *\n         * 监听 WebSocket 接收到服务器的消息事件。 */",
    "detail": "function",
    "kind": 9
  },
  "onSocketOpen": {
    "prefix": "onSocketOpen",
    "body": [
      "wx.onSocketOpen((result) => {$1})"
    ],
    "description": "/** [wx.onSocketOpen(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.onSocketOpen.html)\n         *\n         * @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n         *\n         * 监听 WebSocket 连接打开事件。 */",
    "detail": "function",
    "kind": 9
  },
  "onTouchCancel": {
    "prefix": "onTouchCancel",
    "body": [
      "wx.onTouchCancel((result) => {$1})"
    ],
    "description": "/** [wx.onTouchCancel(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.onTouchCancel.html)\n         *\n         * 监听触点失效事件 */",
    "detail": "function",
    "kind": 9
  },
  "onTouchEnd": {
    "prefix": "onTouchEnd",
    "body": [
      "wx.onTouchEnd((result) => {$1})"
    ],
    "description": "/** [wx.onTouchEnd(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.onTouchEnd.html)\n         *\n         * 监听触摸结束事件 */",
    "detail": "function",
    "kind": 9
  },
  "onTouchMove": {
    "prefix": "onTouchMove",
    "body": [
      "wx.onTouchMove((result) => {$1})"
    ],
    "description": "/** [wx.onTouchMove(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.onTouchMove.html)\n         *\n         * 监听触点移动事件 */",
    "detail": "function",
    "kind": 9
  },
  "onTouchStart": {
    "prefix": "onTouchStart",
    "body": [
      "wx.onTouchStart((result) => {$1})"
    ],
    "description": "/** [wx.onTouchStart(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.onTouchStart.html)\n         *\n         * 监听开始触摸事件 */",
    "detail": "function",
    "kind": 9
  },
  "onUnhandledRejection": {
    "prefix": "onUnhandledRejection",
    "body": [
      "wx.onUnhandledRejection((result) => {$1})"
    ],
    "description": "/** [wx.onUnhandledRejection(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.onUnhandledRejection.html)\n         *\n         * 需要基础库： `2.10.0`\n         *\n         * 监听未处理的 Promise 拒绝事件\n         *\n         * **注意**\n         *\n         * 安卓平台暂时不会派发该事件 */",
    "detail": "function",
    "kind": 9
  },
  "onUserCaptureScreen": {
    "prefix": "onUserCaptureScreen",
    "body": [
      "wx.onUserCaptureScreen((res) => {$1})"
    ],
    "description": "/** [wx.onUserCaptureScreen(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/screen/wx.onUserCaptureScreen.html)\n*\n* 需要基础库： `2.8.1`\n*\n* 监听用户主动截屏事件。用户使用系统截屏按键截屏时触发，只能注册一个监听\n*\n* **示例代码**\n*\n* ```js\nwx.onUserCaptureScreen(function (res) {\n  console.log('用户截屏了')\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "onVoIPChatInterrupted": {
    "prefix": "onVoIPChatInterrupted",
    "body": [
      "wx.onVoIPChatInterrupted((result) => {$1})"
    ],
    "description": "/** [wx.onVoIPChatInterrupted(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.onVoIPChatInterrupted.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 监听被动断开实时语音通话事件。包括小游戏切入后端时断开 */",
    "detail": "function",
    "kind": 9
  },
  "onVoIPChatMembersChanged": {
    "prefix": "onVoIPChatMembersChanged",
    "body": [
      "wx.onVoIPChatMembersChanged((result) => {$1})"
    ],
    "description": "/** [wx.onVoIPChatMembersChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.onVoIPChatMembersChanged.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 监听实时语音通话成员在线状态变化事件。有成员加入/退出通话时触发回调 */",
    "detail": "function",
    "kind": 9
  },
  "onVoIPChatSpeakersChanged": {
    "prefix": "onVoIPChatSpeakersChanged",
    "body": [
      "wx.onVoIPChatSpeakersChanged((result) => {$1})"
    ],
    "description": "/** [wx.onVoIPChatSpeakersChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.onVoIPChatSpeakersChanged.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 监听实时语音通话成员通话状态变化事件。有成员开始/停止说话时触发回调 */",
    "detail": "function",
    "kind": 9
  },
  "onVoIPChatStateChanged": {
    "prefix": "onVoIPChatStateChanged",
    "body": [
      "wx.onVoIPChatStateChanged((result) => {$1})"
    ],
    "description": "/** [wx.onVoIPChatStateChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.onVoIPChatStateChanged.html)\n         *\n         * 需要基础库： `2.16.0`\n         *\n         * 监听房间状态变化事件。 */",
    "detail": "function",
    "kind": 9
  },
  "onWheel": {
    "prefix": "onWheel",
    "body": [
      "wx.onWheel((result) => {$1})"
    ],
    "description": "/** [wx.onWheel(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/wheel-event/wx.onWheel.html)\n         *\n         * 监听鼠标滚轮事件 */",
    "detail": "function",
    "kind": 9
  },
  "onWindowResize": {
    "prefix": "onWindowResize",
    "body": [
      "wx.onWindowResize((result) => {$1})"
    ],
    "description": "/** [wx.onWindowResize(function listener)](https://developers.weixin.qq.com/minigame/dev/api/ui/window/wx.onWindowResize.html)\n         *\n         * 监听窗口尺寸变化事件 */",
    "detail": "function",
    "kind": 9
  },
  "openAppAuthorizeSetting": {
    "prefix": "openAppAuthorizeSetting",
    "body": [
      "wx.openAppAuthorizeSetting({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.openAppAuthorizeSetting(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.openAppAuthorizeSetting.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 跳转系统微信授权管理页\n*\n* **示例代码**\n*\n* ```js\nwx.openAppAuthorizeSetting({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "openBluetoothAdapter": {
    "prefix": "openBluetoothAdapter",
    "body": [
      "wx.openBluetoothAdapter({",
      "  mode: ${1:mode},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.openBluetoothAdapter(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.openBluetoothAdapter.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 初始化蓝牙模块。iOS 上开启主机/从机（外围设备）模式时需分别调用一次，并指定对应的 `mode`。\n*\n* **object.fail 回调函数返回的 state 参数（仅 iOS）**\n*\n* | 状态码 | 说明   |\n* | ------ | ------ |\n* | 0      | 未知   |\n* | 1      | 重置中 |\n* | 2      | 不支持 |\n* | 3      | 未授权 |\n* | 4      | 未开启 |\n*\n* **注意**\n*\n* - 其他蓝牙相关 API 必须在 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 调用之后使用。否则 API 会返回错误（errCode=10000）。\n* - 在用户蓝牙开关未开启或者手机不支持蓝牙功能的情况下，调用 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 会返回错误（errCode=10001），表示手机蓝牙功能不可用。此时小程序蓝牙模块已经初始化完成，可通过 [wx.onBluetoothAdapterStateChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.onBluetoothAdapterStateChange.html) 监听手机蓝牙状态的改变，也可以调用蓝牙模块的所有API。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.openBluetoothAdapter({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "openCard": {
    "prefix": "openCard",
    "body": [
      "wx.openCard({",
      "  cardList: [$1],",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.openCard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/card/wx.openCard.html)\n*\n* 需要基础库： `2.5.0`\n*\n* 查看微信卡包中的卡券。只有通过 [认证](https://developers.weixin.qq.com/miniprogram/product/renzheng.html) 的小程序或文化互动类目的小游戏才能使用。更多文档请参考 [微信卡券接口文档](https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&key=1490190158&version=1&lang=zh_CN&platform=2)。\n*\n* **示例代码**\n*\n* ```js\nwx.openCard({\n  cardList: [{\n    cardId: '',\n    code: ''\n  }, {\n    cardId: '',\n    code: ''\n  }],\n  success (res) { }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "openChannelsActivity": {
    "prefix": "openChannelsActivity",
    "body": [
      "wx.openChannelsActivity({",
      "  feedId: '${1:feedId}',",
      "  finderUserName: '${2:finderUserName}',",
      "  success: (res) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.openChannelsActivity(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.openChannelsActivity.html)\n         *\n         * 需要基础库： `2.19.2`\n         *\n         * 打开视频号视频 */",
    "detail": "function",
    "kind": 9
  },
  "openChannelsEvent": {
    "prefix": "openChannelsEvent",
    "body": [
      "wx.openChannelsEvent({",
      "  eventId: '${1:eventId}',",
      "  finderUserName: '${2:finderUserName}',",
      "  success: (res) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.openChannelsEvent(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.openChannelsEvent.html)\n         *\n         * 需要基础库： `2.21.0`\n         *\n         * 打开视频号活动页 */",
    "detail": "function",
    "kind": 9
  },
  "openChannelsLive": {
    "prefix": "openChannelsLive",
    "body": [
      "wx.openChannelsLive({",
      "  finderUserName: '${1:finderUserName}',",
      "  feedId: '${2:feedId}',",
      "  nonceId: '${3:nonceId}',",
      "  success: (res) => {$4},",
      "  fail: (res) => {$5},",
      "  complete: (res) => {$6},",
      "})"
    ],
    "description": "/** [wx.openChannelsLive(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.openChannelsLive.html)\n         *\n         * 需要基础库： `2.15.0`\n         *\n         * 打开视频号直播 */",
    "detail": "function",
    "kind": 9
  },
  "openChannelsUserProfile": {
    "prefix": "openChannelsUserProfile",
    "body": [
      "wx.openChannelsUserProfile({",
      "  finderUserName: '${1:finderUserName}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.openChannelsUserProfile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.openChannelsUserProfile.html)\n         *\n         * 需要基础库： `2.21.2`\n         *\n         * 打开视频号主页 */",
    "detail": "function",
    "kind": 9
  },
  "openCustomerServiceConversation": {
    "prefix": "openCustomerServiceConversation",
    "body": [
      "wx.openCustomerServiceConversation({",
      "  sendMessageImg: '${1:sendMessageImg}',",
      "  sendMessagePath: '${2:sendMessagePath}',",
      "  sendMessageTitle: '${3:sendMessageTitle}',",
      "  sessionFrom: '${4:sessionFrom}',",
      "  showMessageCard: ${5:true},",
      "  success: (result) => {$6},",
      "  fail: (res) => {$7},",
      "  complete: (res) => {$8},",
      "})"
    ],
    "description": "/** [wx.openCustomerServiceConversation(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/customer-message/wx.openCustomerServiceConversation.html)\n         *\n         * 需要基础库： `2.0.3`\n         *\n         * 进入客服会话。要求在用户发生过至少一次 touch 事件后才能调用。后台接入方式与小程序一致，详见 [客服消息接入](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/customer-message/customer-message.html)\n         *\n         * **注意事项**\n         *\n         * - 在客服会话内点击小程序消息卡片进入小程序时，不能通过 wx.onShow 或 wx.getEnterOptionsSync 等接口获取启动路径和参数，而是应该通过 wx.openCustomerServiceConversation 接口的 success 回调获取启动路径和参数 */",
    "detail": "function",
    "kind": 9
  },
  "openSetting": {
    "prefix": "openSetting",
    "body": [
      "wx.openSetting({",
      "  withSubscriptions: ${1:true},",
      "  success: (result) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.openSetting(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.openSetting.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 调起客户端小程序设置界面，返回用户设置的操作结果。**设置界面只会出现小程序已经向用户请求过的[权限](https://developers.weixin.qq.com/minigame/dev/guide/framework/authorize.html)**。\n*\n* ****\n*\n* - 注意：[2.3.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，用户发生点击行为后，才可以跳转打开设置页，管理授权信息。[详情](https://developers.weixin.qq.com/community/develop/doc/000cea2305cc5047af5733de751008)\n*\n* **示例代码**\n*\n* ```js\nwx.openSetting({\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "openSystemBluetoothSetting": {
    "prefix": "openSystemBluetoothSetting",
    "body": [
      "wx.openSystemBluetoothSetting({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.openSystemBluetoothSetting(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.openSystemBluetoothSetting.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 跳转系统蓝牙设置页。仅支持安卓。\n*\n* **示例代码**\n*\n* ```js\nwx.openSystemBluetoothSetting({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "operateGameRecorderVideo": {
    "prefix": "operateGameRecorderVideo",
    "body": [
      "wx.operateGameRecorderVideo({",
      "  atempo: ${1:0},",
      "  audioMix: ${2:true},",
      "  bgm: '${3:bgm}',",
      "  desc: '${4:desc}',",
      "  path: '${5:path}',",
      "  query: '${6:query}',",
      "  timeRange: [$7],",
      "  title: '${8:title}',",
      "  volume: ${9:0},",
      "})"
    ],
    "description": "/** [wx.operateGameRecorderVideo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/wx.operateGameRecorderVideo.html)\n         *\n         * 需要基础库： `2.26.1`\n         *\n         * 分享游戏对局回放。安卓微信8.0.28开始支持，iOS微信8.0.30开始支持。 */",
    "detail": "function",
    "kind": 9
  },
  "previewImage": {
    "prefix": "previewImage",
    "body": [
      "wx.previewImage({",
      "  urls: [$1],",
      "  current: '${2:current}',",
      "  referrerPolicy: '${3:referrerPolicy}',",
      "  showmenu: ${4:true},",
      "  success: (res) => {$5},",
      "  fail: (res) => {$6},",
      "  complete: (res) => {$7},",
      "})"
    ],
    "description": "/** [wx.previewImage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.previewImage.html)\n*\n* 在新页面中全屏预览图片。预览的过程中用户可以进行保存图片、发送给朋友等操作。\n*\n* **支持长按识别的码**\n*\n* | 类型 | 说明 | 最低版本 |\n* |------|------| -------|\n* | 小程序码 |    |\n* | 微信个人码 | 不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n* | 企业微信个人码 | 不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n* | 普通群码 | 指仅包含微信用户的群，不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n* | 互通群码 |  指既有微信用户也有企业微信用户的群，不支持小游戏  | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n* | 公众号二维码 | 不支持小游戏  | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n*\n* **示例代码**\n*\n* ```js\nwx.previewImage({\n  current: '', // 当前显示图片的http链接\n  urls: [] // 需要预览的图片http链接列表\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "previewMedia": {
    "prefix": "previewMedia",
    "body": [
      "wx.previewMedia({",
      "  sources: [$1],",
      "  current: ${2:0},",
      "  referrerPolicy: '${3:referrerPolicy}',",
      "  showmenu: ${4:true},",
      "  success: (res) => {$5},",
      "  fail: (res) => {$6},",
      "  complete: (res) => {$7},",
      "})"
    ],
    "description": "/** [wx.previewMedia(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.previewMedia.html)\n         *\n         * 需要基础库： `2.12.0`\n         *\n         * 预览图片和视频。\n         *\n         * **支持长按识别的码**\n         *\n         * | 类型 | 说明 | 最低版本 |\n         * |------|------| -------|\n         * | 小程序码 |    |\n         * | 微信个人码 | 不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n         * | 企业微信个人码 | 不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n         * | 普通群码 | 指仅包含微信用户的群，不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n         * | 互通群码 |  指既有微信用户也有企业微信用户的群，不支持小游戏  | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n         * | 公众号二维码 | 不支持小游戏  | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) | */",
    "detail": "function",
    "kind": 9
  },
  "readBLECharacteristicValue": {
    "prefix": "readBLECharacteristicValue",
    "body": [
      "wx.readBLECharacteristicValue({",
      "  characteristicId: '${1:characteristicId}',",
      "  deviceId: '${2:deviceId}',",
      "  serviceId: '${3:serviceId}',",
      "  success: (res) => {$4},",
      "  fail: (res) => {$5},",
      "  complete: (res) => {$6},",
      "})"
    ],
    "description": "/** [wx.readBLECharacteristicValue(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.readBLECharacteristicValue.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 读取蓝牙低功耗设备特征值的二进制数据。注意：必须设备的特征支持 read 才可以成功调用。\n*\n* **注意**\n*\n* - 并行调用多次会存在读失败的可能性。\n* - 接口读取到的信息需要在 [wx.onBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html) 方法注册的回调中获取。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\n// 必须在这里的回调才能获取\nwx.onBLECharacteristicValueChange(function(characteristic) {\n  console.log('characteristic value comed:', characteristic)\n})\n\nwx.readBLECharacteristicValue({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  success (res) {\n    console.log('readBLECharacteristicValue:', res.errCode)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "removeStorage": {
    "prefix": "removeStorage",
    "body": [
      "wx.removeStorage({",
      "  key: '${1:key}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.removeStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.removeStorage.html)\n*\n* 从本地缓存中移除指定 key。\n*\n* **示例代码**\n*\n* ```js\nwx.removeStorage({\n  key: 'key',\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* ```js\ntry {\n  wx.removeStorageSync('key')\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "removeStorageSync": {
    "prefix": "removeStorageSync",
    "body": [
      "wx.removeStorageSync('${1:key}')"
    ],
    "description": "/** [wx.removeStorageSync(string key)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.removeStorageSync.html)\n*\n* [wx.removeStorage](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.removeStorage.html) 的同步版本\n*\n* **示例代码**\n*\n* ```js\nwx.removeStorage({\n  key: 'key',\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* ```js\ntry {\n  wx.removeStorageSync('key')\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "removeUserCloudStorage": {
    "prefix": "removeUserCloudStorage",
    "body": [
      "wx.removeUserCloudStorage({",
      "  keyList: [$1],",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.removeUserCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.removeUserCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 删除用户托管数据当中对应 key 的数据。 */",
    "detail": "function",
    "kind": 9
  },
  "reportEvent": {
    "prefix": "reportEvent",
    "body": [
      "wx.reportEvent('${1:eventId}', ${2:data})"
    ],
    "description": "/** [wx.reportEvent(string eventId, object data)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.reportEvent.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 事件上报 */",
    "detail": "function",
    "kind": 9
  },
  "reportMonitor": {
    "prefix": "reportMonitor",
    "body": [
      "wx.reportMonitor('${1:name}', ${2:0})"
    ],
    "description": "/** [wx.reportMonitor(string name, number value)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.reportMonitor.html)\n*\n* 需要基础库： `2.1.2`\n*\n* 自定义业务数据监控上报接口。\n*\n* **使用说明**\n*\n* 使用前，需要在「小程序管理后台-运维中心-性能监控-业务数据监控」中新建监控事件，配置监控描述与告警类型。每一个监控事件对应唯一的监控ID，开发者最多可以创建128个监控事件。\n*\n* **示例代码**\n*\n* ```js\nwx.reportMonitor('1', 1)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "reportPerformance": {
    "prefix": "reportPerformance",
    "body": [
      "wx.reportPerformance(${1:0}, ${2:0}, ${3:dimensions})"
    ],
    "description": "/** [wx.reportPerformance(Number id, Number value, String|Array dimensions)](https://developers.weixin.qq.com/minigame/dev/api/base/performance/wx.reportPerformance.html)\n*\n* 需要基础库： `2.10.0`\n*\n* 小程序测速上报。使用前，需要在小程序管理后台配置。 详情参见[小程序测速](https://developers.weixin.qq.com/miniprogram/dev/framework/performanceReport/)指南。\n*\n* **示例代码**\n*\n* ```js\nwx.reportPerformance(1101, 680)\nwx.reportPerformance(1101, 680, 'custom')\n``` */",
    "detail": "function",
    "kind": 9
  },
  "reportScene": {
    "prefix": "reportScene",
    "body": [
      "wx.reportScene({",
      "  sceneId: ${1:0},",
      "  costTime: ${2:0},",
      "  dimension: ${3:dimension},",
      "  metric: ${4:metric},",
      "  success: (result) => {$5},",
      "  fail: (err) => {$6},",
      "  complete: (res) => {$7},",
      "})"
    ],
    "description": "/** [wx.reportScene(Object object)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.reportScene.html)\n*\n* 需要基础库： `2.26.2`\n*\n* 用于游戏启动阶段的自定义场景上报。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/performance/perf-action-start-reportScene.html)。\n*\n* **示例代码**\n*\n* ```js\nwx.reportScene({\n  sceneId: 1000,\n  costTime: 350,\n  dimension: {\n    d1: '2.1.0', // value仅支持传入String类型。若value表示Boolean，请将值处理为'0'、'1'进行上报；若value为Number，请转换为String进行上报\n  },\n  metric: {\n    m1: '546', // value仅支持传入数值且需要转换为String类型进行上报\n  },\n  success (res) {\n    // 上报接口执行完成后的回调，用于检查上报数据是否符合预期\n    console.log(res)\n  },\n  fail (res) {\n    // 上报报错时的回调，用于查看上报错误的原因：如参数类型错误等\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "reportUserBehaviorBranchAnalytics": {
    "prefix": "reportUserBehaviorBranchAnalytics",
    "body": [
      "wx.reportUserBehaviorBranchAnalytics({",
      "  branchId: '${1:branchId}',",
      "  eventType: ${2:0},",
      "  branchDim: '${3:branchDim}',",
      "})"
    ],
    "description": "/** [wx.reportUserBehaviorBranchAnalytics(Object object)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.reportUserBehaviorBranchAnalytics.html)\n         *\n         * 需要基础库： `2.12.0`\n         *\n         * 用于分支相关的UI组件（一般是按钮）相关事件的上报，事件目前有曝光、点击两种 */",
    "detail": "function",
    "kind": 9
  },
  "requestMidasFriendPayment": {
    "prefix": "requestMidasFriendPayment",
    "body": [
      "wx.requestMidasFriendPayment({",
      "  buyQuantity: ${1:0},",
      "  currencyType: ${2:currencyType},",
      "  env: ${3:env},",
      "  mode: ${4:mode},",
      "  nonceStr: '${5:nonceStr}',",
      "  offerId: '${6:offerId}',",
      "  outTradeNo: '${7:outTradeNo}',",
      "  platform: ${8:platform},",
      "  signature: '${9:signature}',",
      "  timeStamp: ${10:0},",
      "  zoneId: '${11:zoneId}',",
      "  success: (result) => {$12},",
      "  fail: (res) => {$13},",
      "  complete: (res) => {$14},",
      "})"
    ],
    "description": "/** [wx.requestMidasFriendPayment(Object object)](https://developers.weixin.qq.com/minigame/dev/api/midas-payment/wx.requestMidasFriendPayment.html)\n*\n* 需要基础库： `2.11.0`\n*\n* 发起米大师朋友礼物索要。接口用法详见 [小游戏礼物索要接入指南](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/friend-payment.html)\n*\n* **示例代码**\n*\n* ```js\nwx.requestMidasFriendPayment({\n  success(res) {\n    // res\n    {\n      errMsg: 'requestMidasFriendPayment:ok',\n      encryptedData: 'xxxx',\n      iv: 'xxx'\n    }\n  },\n  fail() {\n\n  }\n})\n```\n*\n* encryptedData 解密后数据结构如下：\n*\n* ```json\n{\n  \"outTradeNo\": \"xxxxxxxx\",\n  \"orderNo\": \"PBgAAHMjeOhixxxx\",\n  \"watermark\": {\n    \"timestamp\": 1585537091,\n    \"appid\": \"wx7a727ff7d940xxxx\"\n  }\n}\n```\n*\n* **buyQuantity限制说明**\n*\n* 购买游戏币的时候，buyQuantity 不可任意填写。需满足 buyQuantity * 游戏币单价 = 限定的价格等级。如：游戏币单价为 0.1 元，一次购买最少数量是 10。\n*\n* 有效价格等级如下：\n*\n* | 价格等级（单位：人民币） |\n* |----------------------|\n* | 1 |\n* | 3 |\n* | 6 |\n* | 8 |\n* | 12 |\n* | 18 |\n* | 25 |\n* | 30 |\n* | 40 |\n* | 45 |\n* | 50 |\n* | 60 |\n* | 68 |\n* | 73 |\n* | 78 |\n* | 88 |\n* | 98 |\n* | 108 |\n* | 118 |\n* | 128 |\n* | 148 |\n* | 168 |\n* | 188 |\n* | 198 |\n* | 328 |\n* | 648 |\n* | 998 |\n* | 1998 |\n* | 2998 | */",
    "detail": "function",
    "kind": 9
  },
  "requestMidasPayment": {
    "prefix": "requestMidasPayment",
    "body": [
      "wx.requestMidasPayment({",
      "  currencyType: ${1:currencyType},",
      "  mode: ${2:mode},",
      "  offerId: '${3:offerId}',",
      "  buyQuantity: ${4:0},",
      "  env: ${5:env},",
      "  platform: ${6:platform},",
      "  zoneId: '${7:zoneId}',",
      "  success: (result) => {$8},",
      "  fail: (res) => {$9},",
      "  complete: (res) => {$10},",
      "})"
    ],
    "description": "/** [wx.requestMidasPayment(Object object)](https://developers.weixin.qq.com/minigame/dev/api/midas-payment/wx.requestMidasPayment.html)\n         *\n         * 发起米大师支付\n         *\n         * **buyQuantity 限制说明**\n         *\n         * 购买游戏币的时候，buyQuantity 不可任意填写。需满足 buyQuantity * 游戏币单价 = 限定的价格等级。如：游戏币单价为 0.1 元，一次购买最少数量是 10。\n         *\n         * 有效价格等级如下：\n         *\n         * | 价格等级（单位：人民币） |\n         * |----------------------|\n         * | 1 |\n         * | 3 |\n         * | 6 |\n         * | 8 |\n         * | 12 |\n         * | 18 |\n         * | 25 |\n         * | 30 |\n         * | 40 |\n         * | 45 |\n         * | 50 |\n         * | 60 |\n         * | 68 |\n         * | 73 |\n         * | 78 |\n         * | 88 |\n         * | 98 |\n         * | 108 |\n         * | 118 |\n         * | 128 |\n         * | 148 |\n         * | 168 |\n         * | 188 |\n         * | 198 |\n         * | 328 |\n         * | 648 |\n         * | 998 |\n         * | 1998 |\n         * | 2998 | */",
    "detail": "function",
    "kind": 9
  },
  "requestSubscribeMessage": {
    "prefix": "requestSubscribeMessage",
    "body": [
      "wx.requestSubscribeMessage({",
      "  tmplIds: [$1],",
      "  success: (result) => {$2},",
      "  fail: (result) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.requestSubscribeMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/subscribe-message/wx.requestSubscribeMessage.html)\n*\n* 需要基础库： `2.4.4`\n*\n* 调起客户端小游戏订阅消息界面，返回用户订阅消息的操作结果。当用户勾选了订阅面板中的“总是保持以上选择，不再询问”时，模板消息会被添加到用户的小游戏设置页，通过 [wx.getSetting](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.getSetting.html) 接口可获取用户对相关模板消息的订阅状态。\n*\n* ## 注意事项\n*  - 一次性模板 id 和永久模板 id 不可同时使用。\n*  - 低版本基础库2.4.4~2.8.3 已支持订阅消息接口调用，仅支持传入一个一次性 tmplId / 永久 tmplId。\n*  - [2.8.2](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，用户发生点击行为或者发起支付回调后，才可以调起订阅消息界面。\n*  - [2.10.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，开发版和体验版小游戏将禁止使用模板消息 fomrId。\n*  - 使用前建议阅读 [小游戏订阅消息使用指引](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/subscribe-message.html)。\n*  - 一次授权调用里，每个tmplId对应的模板标题不能存在相同的，若出现相同的，只保留一个。\n*\n* **错误码**\n*\n* | errCode | errMsg                                                 | 说明                                                           |\n* | ------- | ------------------------------------------------------ | -------------------------------------------------------------- |\n* | 10001   | TmplIds can't be empty                                 | 参数传空了                                                     |\n* | 10002   | Request list fail                                       | 网络问题，请求消息列表失败                                     |\n* | 10003   | Request subscribe fail                                 | 网络问题，订阅请求发送失败                                     |\n* | 10004   | Invalid template id                                    | 参数类型错误                                                   |\n* | 10005   | Cannot show subscribe message UI                       | 无法展示 UI，一般是小游戏这个时候退后台了导致的                |\n* | 20001   | No template data return, verify the template id exist  | 没有模板数据，一般是模板 ID 不存在 或者和模板类型不对应 导致的 |\n* | 20002   | Templates type must be same                            | 模板消息类型 既有一次性的又有永久的                            |\n* | 20003   | Templates count out of max bounds                      | 模板消息数量超过上限                                           |\n* | 20004   | The main switch is switched off                        | 用户关闭了主开关，无法进行订阅                                 |\n* | 20005   | This mini program was banned from subscribing messages | 小游戏被禁封                                                   |\n*\n* **示例代码**\n*\n* ```js\nwx.requestSubscribeMessage({\n  tmplIds: [''],\n  success (res) {\n    console.log(res)\n    res === {\n       errMsg: \"requestSubscribeMessage:ok\",\n       \"zun-LzcQyW-edafCVvzPkK4de2Rllr1fFpw2A_x0oXE\": \"accept\"\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "requestSubscribeSystemMessage": {
    "prefix": "requestSubscribeSystemMessage",
    "body": [
      "wx.requestSubscribeSystemMessage({",
      "  msgTypeList: [$1],",
      "  success: (result) => {$2},",
      "  fail: (result) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.requestSubscribeSystemMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/subscribe-message/wx.requestSubscribeSystemMessage.html)\n*\n* 需要基础库： `2.9.4`\n*\n* 调起小游戏系统订阅消息界面，返回用户订阅消息的操作结果。当用户勾选了订阅面板中的“总是保持以上选择，不再询问”时，模板消息会被添加到用户的小游戏设置页，通过 [wx.getSetting](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.getSetting.html) 接口可获取用户对相关模板消息的订阅状态。\n*\n* ## 注意事项\n*  - 需要在 touchend 事件的回调中调用。\n*  - 使用前建议阅读 [小游戏系统订阅消息使用指引](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/subscribe-system-message.html)。\n*  - 系统订阅消息只需要订阅一次，永久有效。\n*\n* **错误码**\n*\n* | errCode | errMsg                                                 | 说明                                                           |\n* | ------- | ------------------------------------------------------ | -------------------------------------------------------------- |\n* | 10001   | TmplIds can't be empty                                 | 参数传空了                                                     |\n* | 10002   | Request list fail                                       | 网络问题，请求消息列表失败                                     |\n* | 10003   | Request subscribe fail                                 | 网络问题，订阅请求发送失败                                     |\n* | 10004   | Invalid template id                                    | 参数类型错误                                                   |\n* | 10005   | Cannot show subscribe message UI                       | 无法展示 UI，一般是小游戏这个时候退后台了导致的                |\n* | 20004   | The main switch is switched off                        | 用户关闭了主开关，无法进行订阅                                 |\n* | 20005   | This mini program was banned from subscribing messages | 小游戏被禁封                                                   |\n*\n* **示例代码**\n*\n* ```js\nwx.requestSubscribeSystemMessage({\n  msgTypeList: ['SYS_MSG_TYPE_INTERACTIVE', 'SYS_MSG_TYPE_RANK'],\n  success (res) {\n    console.log(res)\n    // res === {\n    //   errMsg: \"requestSubscribeSystemMessage:ok\",\n    //   SYS_MSG_TYPE_INTERACTIVE: \"accept\",\n    //   SYS_MSG_TYPE_RANK: 'reject'\n    // }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "reserveChannelsLive": {
    "prefix": "reserveChannelsLive",
    "body": [
      "wx.reserveChannelsLive({",
      "  noticeId: '${1:noticeId}',",
      "})"
    ],
    "description": "/** [wx.reserveChannelsLive(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.reserveChannelsLive.html)\n         *\n         * 需要基础库： `2.19.0`\n         *\n         * 预约视频号直播 */",
    "detail": "function",
    "kind": 9
  },
  "restartMiniProgram": {
    "prefix": "restartMiniProgram",
    "body": [
      "wx.restartMiniProgram({",
      "  path: '${1:path}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.restartMiniProgram(Object object)](https://developers.weixin.qq.com/minigame/dev/api/navigate/wx.restartMiniProgram.html)\n         *\n         * 需要基础库： `2.22.1`\n         *\n         * 重启当前小程序 */",
    "detail": "function",
    "kind": 9
  },
  "revokeBufferURL": {
    "prefix": "revokeBufferURL",
    "body": [
      "wx.revokeBufferURL('${1:url}')"
    ],
    "description": "/** [wx.revokeBufferURL(string url)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.revokeBufferURL.html)\n         *\n         * 需要基础库： `2.14.0`\n         *\n         * 根据 URL 销毁存在内存中的数据 */",
    "detail": "function",
    "kind": 9
  },
  "saveFileToDisk": {
    "prefix": "saveFileToDisk",
    "body": [
      "wx.saveFileToDisk({",
      "  filePath: '${1:filePath}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.saveFileToDisk(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/wx.saveFileToDisk.html)\n*\n* 需要基础库： `2.11.0`\n*\n* 保存文件系统的文件到用户磁盘，仅在 PC 端支持\n*\n* **示例代码**\n*\n* ```js\nwx.saveFileToDisk({\n  filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,\n  success(res) {\n    console.log(res)\n  },\n  fail(res) {\n    console.error(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "saveImageToPhotosAlbum": {
    "prefix": "saveImageToPhotosAlbum",
    "body": [
      "wx.saveImageToPhotosAlbum({",
      "  filePath: '${1:filePath}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.saveImageToPhotosAlbum(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.saveImageToPhotosAlbum.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 保存图片到系统相册。\n*\n* **示例代码**\n*\n* ```js\nwx.saveImageToPhotosAlbum({\n  success(res) { }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "scanCode": {
    "prefix": "scanCode",
    "body": [
      "wx.scanCode({",
      "  onlyFromCamera: ${1:true},",
      "  scanType: [$2],",
      "  success: (result) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.scanCode(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/scan/wx.scanCode.html)\n*\n* 需要基础库： `2.16.1`\n*\n* 调起客户端扫码界面进行扫码\n*\n* **示例代码**\n*\n* ```js\n// 允许从相机和相册扫码\nwx.scanCode({\n  success (res) {\n    console.log(res)\n  }\n})\n\n// 只允许从相机扫码\nwx.scanCode({\n  onlyFromCamera: true,\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "sendSocketMessage": {
    "prefix": "sendSocketMessage",
    "body": [
      "wx.sendSocketMessage({",
      "  data: ${1:data},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.sendSocketMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.sendSocketMessage.html)\n*\n* @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n*\n* 通过 WebSocket 连接发送数据。需要先 wx.connectSocket，并在 wx.onSocketOpen 回调之后才能发送。\n*\n* **示例代码**\n*\n* ```js\nlet socketOpen = false\nlet socketMsgQueue = []\nwx.connectSocket({\n  url: 'test.php'\n})\n\nwx.onSocketOpen(function(res) {\n  socketOpen = true\n  for (let i = 0; i < socketMsgQueue.length; i++){\n    sendSocketMessage(socketMsgQueue[i])\n  }\n  socketMsgQueue = []\n})\n\nfunction sendSocketMessage(msg) {\n  if (socketOpen) {\n    wx.sendSocketMessage({\n      data:msg\n    })\n  } else {\n    socketMsgQueue.push(msg)\n  }\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "setBLEMTU": {
    "prefix": "setBLEMTU",
    "body": [
      "wx.setBLEMTU({",
      "  deviceId: '${1:deviceId}',",
      "  mtu: ${2:0},",
      "  success: (result) => {$3},",
      "  fail: (result) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.setBLEMTU(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.setBLEMTU.html)\n         *\n         * 需要基础库： `2.11.0`\n         *\n         * 协商设置蓝牙低功耗的最大传输单元 (Maximum Transmission Unit, MTU)。需在 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 调用成功后调用。仅安卓系统 5.1 以上版本有效，iOS 因系统限制不支持。 */",
    "detail": "function",
    "kind": 9
  },
  "setClipboardData": {
    "prefix": "setClipboardData",
    "body": [
      "wx.setClipboardData({",
      "  data: '${1:data}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.setClipboardData(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/clipboard/wx.setClipboardData.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 设置系统剪贴板的内容。调用成功后，会弹出 toast 提示\"内容已复制\"，持续 1.5s\n*\n* **示例代码**\n*\n* ```js\nwx.setClipboardData({\n  data: 'data',\n  success (res) {\n    wx.getClipboardData({\n      success (res) {\n        console.log(res.data) // data\n      }\n    })\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "setDeviceOrientation": {
    "prefix": "setDeviceOrientation",
    "body": [
      "wx.setDeviceOrientation({",
      "  value: ${1:value},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.setDeviceOrientation(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/orientation/wx.setDeviceOrientation.html)\n         *\n         * 需要基础库： `2.26.0`\n         *\n         * 切换横竖屏。接口调用成功后会触发 wx.onDeviceOrientationChange 事件 */",
    "detail": "function",
    "kind": 9
  },
  "setEnableDebug": {
    "prefix": "setEnableDebug",
    "body": [
      "wx.setEnableDebug({",
      "  enableDebug: ${1:true},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.setEnableDebug(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/debug/wx.setEnableDebug.html)\n*\n* 需要基础库： `1.4.0`\n*\n* 设置是否打开调试开关。此开关对正式版也能生效。\n*\n* **示例代码**\n*\n* ```javascript\n// 打开调试\nwx.setEnableDebug({\n  enableDebug: true\n})\n\n// 关闭调试\nwx.setEnableDebug({\n  enableDebug: false\n})\n```\n*\n* **Tips**\n*\n* - 在正式版打开调试还有一种方法，就是先在开发版或体验版打开调试，再切到正式版就能看到vConsole。 */",
    "detail": "function",
    "kind": 9
  },
  "setInnerAudioOption": {
    "prefix": "setInnerAudioOption",
    "body": [
      "wx.setInnerAudioOption({",
      "  mixWithOther: ${1:true},",
      "  obeyMuteSwitch: ${2:true},",
      "  speakerOn: ${3:true},",
      "  success: (res) => {$4},",
      "  fail: (res) => {$5},",
      "  complete: (res) => {$6},",
      "})"
    ],
    "description": "/** [wx.setInnerAudioOption(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.setInnerAudioOption.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 设置 [InnerAudioContext](https://developers.weixin.qq.com/minigame/dev/api/media/audio/InnerAudioContext.html) 的播放选项。设置之后对当前小程序全局生效。\n         *\n         * ****\n         *\n         * ## 注意事项\n         * - 为保证微信整体体验，speakerOn 为 true 时，客户端会忽略 mixWithOthers 参数的内容，强制与其它音频互斥\n         * - 不支持在播放音频的过程中切换为扬声器播放，开发者如需切换可以先暂停当前播放的音频并记录下当前暂停的时间点，然后切换后重新从原来暂停的时间点开始播放音频\n         * - 目前 wx.setInnerAudioOption 接口不兼容 wx.createWebAudioContext 接口，也不兼容 wx.createInnerAudioContext 开启 useWebAudioImplement 的情况，将在后续版本中支持 */",
    "detail": "function",
    "kind": 9
  },
  "setKeepScreenOn": {
    "prefix": "setKeepScreenOn",
    "body": [
      "wx.setKeepScreenOn({",
      "  keepScreenOn: ${1:true},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.setKeepScreenOn(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/screen/wx.setKeepScreenOn.html)\n*\n* 需要基础库： `1.4.0`\n*\n* 设置是否保持常亮状态。仅在当前小程序生效，离开小程序后设置失效。\n*\n* **示例代码**\n*\n* ```js\nwx.setKeepScreenOn({\n  keepScreenOn: true\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "setMenuStyle": {
    "prefix": "setMenuStyle",
    "body": [
      "wx.setMenuStyle({",
      "  style: ${1:style},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.setMenuStyle(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/menu/wx.setMenuStyle.html)\n         *\n         * 动态设置通过右上角按钮拉起的菜单的样式。 */",
    "detail": "function",
    "kind": 9
  },
  "setPreferredFramesPerSecond": {
    "prefix": "setPreferredFramesPerSecond",
    "body": [
      "wx.setPreferredFramesPerSecond(${1:0})"
    ],
    "description": "/** [wx.setPreferredFramesPerSecond(number fps)](https://developers.weixin.qq.com/minigame/dev/api/render/frame/wx.setPreferredFramesPerSecond.html)\n         *\n         * 可以修改渲染帧率。默认渲染帧率为 60 帧每秒。修改后，requestAnimationFrame 的回调频率会发生改变。 */",
    "detail": "function",
    "kind": 9
  },
  "setScreenBrightness": {
    "prefix": "setScreenBrightness",
    "body": [
      "wx.setScreenBrightness({",
      "  value: ${1:0},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.setScreenBrightness(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/screen/wx.setScreenBrightness.html)\n         *\n         * 需要基础库： `1.2.0`\n         *\n         * 设置屏幕亮度 */",
    "detail": "function",
    "kind": 9
  },
  "setStatusBarStyle": {
    "prefix": "setStatusBarStyle",
    "body": [
      "wx.setStatusBarStyle({",
      "  style: ${1:style},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.setStatusBarStyle(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/statusbar/wx.setStatusBarStyle.html)\n         *\n         * 当在配置中设置 showStatusBarStyle 时，屏幕顶部会显示状态栏。此接口可以修改状态栏的样式。 */",
    "detail": "function",
    "kind": 9
  },
  "setStorage": {
    "prefix": "setStorage",
    "body": [
      "wx.setStorage(${1:option})"
    ],
    "description": "/** [wx.setStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.setStorage.html)\n*\n* 将数据存储在本地缓存中指定的 key 中。会覆盖掉原来该 key 对应的内容。除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。\n*\n* **示例代码**\n*\n* ```js\nwx.setStorage({\n  key:\"key\",\n  data:\"value\"\n})\n```\n*\n* ```js\n// 开启加密存储\nwx.setStorage({\n  key: \"key\",\n  data: \"value\",\n  encrypt: true, // 若开启加密存储，setStorage 和 getStorage 需要同时声明 encrypt 的值为 true\n  success() {\n    wx.getStorage({\n      key: \"key\",\n      encrypt: true, // 若开启加密存储，setStorage 和 getStorage 需要同时声明 encrypt 的值为 true\n      success(res) {\n        console.log(res.data)\n      }\n    })\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "setStorageSync": {
    "prefix": "setStorageSync",
    "body": [
      "wx.setStorageSync('${1:key}', ${2:data})"
    ],
    "description": "/** [wx.setStorageSync(string key, any data)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.setStorageSync.html)\n*\n* 将数据存储在本地缓存中指定的 key 中。会覆盖掉原来该 key 对应的内容。除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。\n*\n* **注意**\n*\n* storage 应只用来进行数据的持久化存储，不应用于运行时的数据传递或全局状态管理。启动过程中过多的同步读写存储，会显著影响启动耗时。\n*\n* **示例代码**\n*\n* ```js\ntry {\n  wx.setStorageSync('key', 'value')\n} catch (e) { }\n``` */",
    "detail": "function",
    "kind": 9
  },
  "setUserCloudStorage": {
    "prefix": "setUserCloudStorage",
    "body": [
      "wx.setUserCloudStorage({",
      "  KVDataList: [$1],",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.setUserCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.setUserCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 对用户托管数据进行写数据操作。允许同时写多组 KV 数据。\n         *\n         * **托管数据的限制**\n         *\n         * 1. 每个openid所标识的微信用户在每个游戏上托管的数据不能超过128个key-value对。\n         * 2. 上报的key-value列表当中每一项的key+value长度都不能超过1K(1024)字节。\n         * 3. 上报的key-value列表当中每一个key长度都不能超过128字节。 */",
    "detail": "function",
    "kind": 9
  },
  "setWindowSize": {
    "prefix": "setWindowSize",
    "body": [
      "wx.setWindowSize({",
      "  height: ${1:0},",
      "  width: ${2:0},",
      "  success: (res) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.setWindowSize(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/window/wx.setWindowSize.html)\n         *\n         * 需要基础库： `2.10.1`\n         * @deprecated 基础库版本 [2.11.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 设置窗口大小，该接口仅适用于 PC 平台，使用细则请参见指南 */",
    "detail": "function",
    "kind": 9
  },
  "shareAppMessage": {
    "prefix": "shareAppMessage",
    "body": [
      "wx.shareAppMessage({",
      "  imageUrl: '${1:imageUrl}',",
      "  imageUrlId: '${2:imageUrlId}',",
      "  path: '${3:path}',",
      "  query: '${4:query}',",
      "  title: '${5:title}',",
      "  toCurrentGroup: ${6:true},",
      "})"
    ],
    "description": "/** [wx.shareAppMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.shareAppMessage.html)\n         *\n         * 主动拉起转发，进入选择通讯录界面。 */",
    "detail": "function",
    "kind": 9
  },
  "shareMessageToFriend": {
    "prefix": "shareMessageToFriend",
    "body": [
      "wx.shareMessageToFriend({",
      "  openId: '${1:openId}',",
      "  imageUrl: '${2:imageUrl}',",
      "  imageUrlId: '${3:imageUrlId}',",
      "  title: '${4:title}',",
      "  success: (res) => {$5},",
      "  fail: (res) => {$6},",
      "  complete: (res) => {$7},",
      "})"
    ],
    "description": "/** [wx.shareMessageToFriend(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.shareMessageToFriend.html)\n         *\n         * 需要基础库： `2.9.0`\n         *\n         * 给指定的好友分享游戏信息，该接口只可在开放数据域下使用。接收者打开之后，可以用 `wx.modifyFriendInteractiveStorage` 传入参数 quiet=true 发起一次无需弹框确认的好友互动。\n         *\n         * ****\n         *\n         * 定向分享不允许直接在开放数据域设置 query 参数\n         * 需要设置请参见游戏域 `wx.setMessageToFriendQuery` 接口 */",
    "detail": "function",
    "kind": 9
  },
  "showActionSheet": {
    "prefix": "showActionSheet",
    "body": [
      "wx.showActionSheet({",
      "  itemList: [$1],",
      "  alertText: '${2:alertText}',",
      "  itemColor: '${3:itemColor}',",
      "  success: (result) => {$4},",
      "  fail: (res) => {$5},",
      "  complete: (res) => {$6},",
      "})"
    ],
    "description": "/** [wx.showActionSheet(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showActionSheet.html)\n*\n* 显示操作菜单\n*\n* **示例代码**\n*\n* ```js\nwx.showActionSheet({\n  itemList: ['A', 'B', 'C'],\n  success (res) {\n    console.log(res.tapIndex)\n  },\n  fail (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* **注意**\n*\n* - Android 6.7.2 以下版本，点击取消或蒙层时，回调 fail, errMsg 为 \"fail cancel\"；\n* - Android 6.7.2 及以上版本 和 iOS 点击蒙层不会关闭模态弹窗，所以尽量避免使用「取消」分支中实现业务逻辑 */",
    "detail": "function",
    "kind": 9
  },
  "showKeyboard": {
    "prefix": "showKeyboard",
    "body": [
      "wx.showKeyboard({",
      "  confirmHold: ${1:true},",
      "  confirmType: ${2:confirmType},",
      "  defaultValue: '${3:defaultValue}',",
      "  maxLength: ${4:0},",
      "  multiple: ${5:true},",
      "  success: (res) => {$6},",
      "  fail: (res) => {$7},",
      "  complete: (res) => {$8},",
      "})"
    ],
    "description": "/** [wx.showKeyboard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.showKeyboard.html)\n         *\n         * 显示键盘 */",
    "detail": "function",
    "kind": 9
  },
  "showLoading": {
    "prefix": "showLoading",
    "body": [
      "wx.showLoading({",
      "  title: '${1:title}',",
      "  mask: ${2:true},",
      "  success: (res) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.showLoading(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showLoading.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 显示 loading 提示框。需主动调用 wx.hideLoading 才能关闭提示框\n*\n* **示例代码**\n*\n* ```js\nwx.showLoading({\n  title: '加载中',\n})\n\nsetTimeout(function () {\n  wx.hideLoading()\n}, 2000)\n```\n*\n* **注意**\n*\n* - [wx.showLoading](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showLoading.html) 和 [wx.showToast](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showToast.html) 同时只能显示一个\n* - [wx.showLoading](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showLoading.html) 应与 [wx.hideLoading](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.hideLoading.html) 配对使用 */",
    "detail": "function",
    "kind": 9
  },
  "showModal": {
    "prefix": "showModal",
    "body": [
      "wx.showModal({",
      "  cancelColor: '${1:cancelColor}',",
      "  cancelText: '${2:cancelText}',",
      "  confirmColor: '${3:confirmColor}',",
      "  confirmText: '${4:confirmText}',",
      "  content: '${5:content}',",
      "  editable: ${6:true},",
      "  placeholderText: '${7:placeholderText}',",
      "  showCancel: ${8:true},",
      "  title: '${9:title}',",
      "  success: (result) => {$10},",
      "  fail: (res) => {$11},",
      "  complete: (res) => {$12},",
      "})"
    ],
    "description": "/** [wx.showModal(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showModal.html)\n*\n* 显示模态对话框\n*\n* **示例代码**\n*\n* ```js\nwx.showModal({\n  title: '提示',\n  content: '这是一个模态弹窗',\n  success (res) {\n    if (res.confirm) {\n      console.log('用户点击确定')\n    } else if (res.cancel) {\n      console.log('用户点击取消')\n    }\n  }\n})\n```\n*\n* **注意**\n*\n* - Android 6.7.2 以下版本，点击取消或蒙层时，回调 fail, errMsg 为 \"fail cancel\"；\n* - Android 6.7.2 及以上版本 和 iOS 点击蒙层不会关闭模态弹窗，所以尽量避免使用「取消」分支中实现业务逻辑\n* - 自基础库 2.17.1 版本起，支持传入 editable 参数，显示带输入框的弹窗 */",
    "detail": "function",
    "kind": 9
  },
  "showShareImageMenu": {
    "prefix": "showShareImageMenu",
    "body": [
      "wx.showShareImageMenu({",
      "  path: '${1:path}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.showShareImageMenu(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.showShareImageMenu.html)\n         *\n         * 需要基础库： `2.14.3`\n         *\n         * 打开分享图片弹窗，可以将图片发送给朋友、收藏或下载 */",
    "detail": "function",
    "kind": 9
  },
  "showShareMenu": {
    "prefix": "showShareMenu",
    "body": [
      "wx.showShareMenu({",
      "  menus: [$1],",
      "  withShareTicket: ${2:true},",
      "  success: (res) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.showShareMenu(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.showShareMenu.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 显示当前页面的转发按钮\n*\n* ****\n*\n* ## 注意事项\n*  - \"shareAppMessage\"表示“发送给朋友”按钮，\"shareTimeline\"表示“分享到朋友圈”按钮\n*  - 显示“分享到朋友圈”按钮时必须同时显示“发送给朋友”按钮，显示“发送给朋友”按钮时则允许不显示“分享到朋友圈”按钮\n*\n* **示例代码**\n*\n* ```js\nwx.showShareMenu({\n  withShareTicket: true,\n  menus: ['shareAppMessage', 'shareTimeline']\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "showToast": {
    "prefix": "showToast",
    "body": [
      "wx.showToast({",
      "  title: '${1:title}',",
      "  duration: ${2:0},",
      "  icon: ${3:icon},",
      "  image: '${4:image}',",
      "  mask: ${5:true},",
      "  success: (res) => {$6},",
      "  fail: (res) => {$7},",
      "  complete: (res) => {$8},",
      "})"
    ],
    "description": "/** [wx.showToast(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showToast.html)\n*\n* 显示消息提示框\n*\n* **示例代码**\n*\n* ```js\nwx.showToast({\n  title: '成功',\n  icon: 'success',\n  duration: 2000\n})\n```\n*\n* **注意**\n*\n* - [wx.showLoading](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showLoading.html) 和 [wx.showToast](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showToast.html) 同时只能显示一个\n* - [wx.showToast](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showToast.html) 应与 [wx.hideToast](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.hideToast.html) 配对使用 */",
    "detail": "function",
    "kind": 9
  },
  "startAccelerometer": {
    "prefix": "startAccelerometer",
    "body": [
      "wx.startAccelerometer({",
      "  interval: ${1:interval},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.startAccelerometer(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.startAccelerometer.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 开始监听加速度数据。\n*\n* **示例代码**\n*\n* ```js\nwx.startAccelerometer({\n  interval: 'game'\n})\n```\n*\n* **注意**\n*\n* - 根据机型性能、当前 CPU 与内存的占用情况，`interval` 的设置与实际 `wx.onAccelerometerChange()` 回调函数的执行频率会有一些出入。 */",
    "detail": "function",
    "kind": 9
  },
  "startBeaconDiscovery": {
    "prefix": "startBeaconDiscovery",
    "body": [
      "wx.startBeaconDiscovery({",
      "  uuids: [$1],",
      "  ignoreBluetoothAvailable: ${2:true},",
      "  success: (res) => {$3},",
      "  fail: (res) => {$4},",
      "  complete: (res) => {$5},",
      "})"
    ],
    "description": "/** [wx.startBeaconDiscovery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.startBeaconDiscovery.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 开始搜索附近的 Beacon 设备\n*\n* **示例代码**\n*\n* ```js\nwx.startBeaconDiscovery({\n  success(res) { }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "startBluetoothDevicesDiscovery": {
    "prefix": "startBluetoothDevicesDiscovery",
    "body": [
      "wx.startBluetoothDevicesDiscovery({",
      "  allowDuplicatesKey: ${1:true},",
      "  interval: ${2:0},",
      "  powerLevel: ${3:powerLevel},",
      "  services: [$4],",
      "  success: (res) => {$5},",
      "  fail: (res) => {$6},",
      "  complete: (res) => {$7},",
      "})"
    ],
    "description": "/** [wx.startBluetoothDevicesDiscovery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.startBluetoothDevicesDiscovery.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 开始搜寻附近的蓝牙外围设备。\n*\n* **此操作比较耗费系统资源，请在搜索到需要的设备后及时调用 [wx.stopBluetoothDevicesDiscovery](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.stopBluetoothDevicesDiscovery.html) 停止搜索。**\n*\n* **注意**\n*\n* - 考虑到蓝牙功能可以间接进行定位，安卓 6.0 及以上版本，无定位权限或定位开关未打开时，无法进行设备搜索。这种情况下，安卓 8.0.16 前，接口调用成功但无法扫描设备；8.0.16 及以上版本，会返回错误。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/m7klFDmZ72i1)\n*\n* ```js\n// 以微信硬件平台的蓝牙智能灯为例，主服务的 UUID 是 FEE7。传入这个参数，只搜索主服务 UUID 为 FEE7 的设备\nwx.startBluetoothDevicesDiscovery({\n  services: ['FEE7'],\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "startCompass": {
    "prefix": "startCompass",
    "body": [
      "wx.startCompass({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.startCompass(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/compass/wx.startCompass.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 开始监听罗盘数据\n*\n* **示例代码**\n*\n* ```js\nwx.startCompass()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "startDeviceMotionListening": {
    "prefix": "startDeviceMotionListening",
    "body": [
      "wx.startDeviceMotionListening({",
      "  interval: ${1:interval},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.startDeviceMotionListening(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.startDeviceMotionListening.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 开始监听设备方向的变化。 */",
    "detail": "function",
    "kind": 9
  },
  "startGyroscope": {
    "prefix": "startGyroscope",
    "body": [
      "wx.startGyroscope({",
      "  interval: ${1:interval},",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.startGyroscope(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.startGyroscope.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 开始监听陀螺仪数据。 */",
    "detail": "function",
    "kind": 9
  },
  "startHandoff": {
    "prefix": "startHandoff",
    "body": [
      "wx.startHandoff({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.startHandoff(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.startHandoff.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 开始进行接力，该接口需要在开放数据域调用 */",
    "detail": "function",
    "kind": 9
  },
  "stopAccelerometer": {
    "prefix": "stopAccelerometer",
    "body": [
      "wx.stopAccelerometer({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.stopAccelerometer(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.stopAccelerometer.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 停止监听加速度数据。\n*\n* **示例代码**\n*\n* ```js\nwx.stopAccelerometer()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "stopBeaconDiscovery": {
    "prefix": "stopBeaconDiscovery",
    "body": [
      "wx.stopBeaconDiscovery({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.stopBeaconDiscovery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.stopBeaconDiscovery.html)\n         *\n         * 需要基础库： `2.9.2`\n         *\n         * 停止搜索附近的 Beacon 设备 */",
    "detail": "function",
    "kind": 9
  },
  "stopBluetoothDevicesDiscovery": {
    "prefix": "stopBluetoothDevicesDiscovery",
    "body": [
      "wx.stopBluetoothDevicesDiscovery({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.stopBluetoothDevicesDiscovery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.stopBluetoothDevicesDiscovery.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 停止搜寻附近的蓝牙外围设备。若已经找到需要的蓝牙设备并不需要继续搜索时，建议调用该接口停止蓝牙搜索。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.stopBluetoothDevicesDiscovery({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "stopCompass": {
    "prefix": "stopCompass",
    "body": [
      "wx.stopCompass({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.stopCompass(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/compass/wx.stopCompass.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 停止监听罗盘数据\n*\n* **示例代码**\n*\n* ```js\nwx.stopCompass()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "stopDeviceMotionListening": {
    "prefix": "stopDeviceMotionListening",
    "body": [
      "wx.stopDeviceMotionListening({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.stopDeviceMotionListening(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.stopDeviceMotionListening.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 停止监听设备方向的变化。 */",
    "detail": "function",
    "kind": 9
  },
  "stopFaceDetect": {
    "prefix": "stopFaceDetect",
    "body": [
      "wx.stopFaceDetect({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.stopFaceDetect(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/face/wx.stopFaceDetect.html)\n         *\n         * 需要基础库： `2.18.0`\n         *\n         * @warning **该接口已停止维护，推荐使用 [wx.createVKSession](#) 代替**\n         *\n         * 停止人脸检测。本接口不再维护，请使用 [wx.createVKSession](#) 接口代替。详情参考[人脸检测指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/visionkit/face.html) */",
    "detail": "function",
    "kind": 9
  },
  "stopGyroscope": {
    "prefix": "stopGyroscope",
    "body": [
      "wx.stopGyroscope({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.stopGyroscope(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.stopGyroscope.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 停止监听陀螺仪数据。 */",
    "detail": "function",
    "kind": 9
  },
  "triggerGC": {
    "prefix": "triggerGC",
    "body": [
      "wx.triggerGC()"
    ],
    "description": "/** [wx.triggerGC()](https://developers.weixin.qq.com/minigame/dev/api/base/performance/wx.triggerGC.html)\n         *\n         * 加快触发 JavaScriptCore 垃圾回收（Garbage Collection）。GC 时机是由 JavaScriptCore 来控制的，并不能保证调用后马上触发 GC。 */",
    "detail": "function",
    "kind": 9
  },
  "updateKeyboard": {
    "prefix": "updateKeyboard",
    "body": [
      "wx.updateKeyboard({",
      "  value: '${1:value}',",
      "  success: (res) => {$2},",
      "  fail: (res) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.updateKeyboard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.updateKeyboard.html)\n         *\n         * 需要基础库： `2.1.0`\n         *\n         * 更新键盘输入框内容。只有当键盘处于拉起状态时才会产生效果 */",
    "detail": "function",
    "kind": 9
  },
  "updateShareMenu": {
    "prefix": "updateShareMenu",
    "body": [
      "wx.updateShareMenu({",
      "  activityId: '${1:activityId}',",
      "  isPrivateMessage: ${2:true},",
      "  isUpdatableMessage: ${3:true},",
      "  templateInfo: {",
      "    parameterList: [$4],",
      "  },",
      "  toDoActivityId: '${6:toDoActivityId}',",
      "  withShareTicket: ${7:true},",
      "  success: (res) => {$8},",
      "  fail: (res) => {$9},",
      "  complete: (res) => {$10},",
      "})"
    ],
    "description": "/** [wx.updateShareMenu(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.updateShareMenu.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 更新转发属性\n*\n* **示例代码**\n*\n* ```js\nwx.updateShareMenu({\n  withShareTicket: true,\n  success () { }\n})\n```\n* ```js\n// 转发私密消息\nwx.updateShareMenu({\n  isPrivateMessage: true,\n  activityId: 'xxx',\n  templateInfo: {},\n  success () { },\n  fail () {}\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "updateVoIPChatMuteConfig": {
    "prefix": "updateVoIPChatMuteConfig",
    "body": [
      "wx.updateVoIPChatMuteConfig({",
      "  muteConfig: {",
      "    muteEarphone: ${1:true},",
      "    muteMicrophone: ${2:true},",
      "  },",
      "  success: (res) => {$4},",
      "  fail: (res) => {$5},",
      "  complete: (res) => {$6},",
      "})"
    ],
    "description": "/** [wx.updateVoIPChatMuteConfig(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.updateVoIPChatMuteConfig.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 更新实时语音静音设置 */",
    "detail": "function",
    "kind": 9
  },
  "updateWeChatApp": {
    "prefix": "updateWeChatApp",
    "body": [
      "wx.updateWeChatApp({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.updateWeChatApp(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/update/wx.updateWeChatApp.html)\n         *\n         * 需要基础库： `2.12.0`\n         *\n         * 更新客户端版本。当判断用户小程序所在客户端版本过低时，可使用该接口跳转到更新微信页面。 */",
    "detail": "function",
    "kind": 9
  },
  "vibrateLong": {
    "prefix": "vibrateLong",
    "body": [
      "wx.vibrateLong({",
      "  success: (res) => {$1},",
      "  fail: (res) => {$2},",
      "  complete: (res) => {$3},",
      "})"
    ],
    "description": "/** [wx.vibrateLong(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/vibrate/wx.vibrateLong.html)\n         *\n         * 需要基础库： `1.2.0`\n         *\n         * 使手机发生较长时间的振动（400 ms) */",
    "detail": "function",
    "kind": 9
  },
  "vibrateShort": {
    "prefix": "vibrateShort",
    "body": [
      "wx.vibrateShort({",
      "  type: '${1:type}',",
      "  success: (res) => {$2},",
      "  fail: (result) => {$3},",
      "  complete: (res) => {$4},",
      "})"
    ],
    "description": "/** [wx.vibrateShort(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/vibrate/wx.vibrateShort.html)\n         *\n         * 需要基础库： `1.2.0`\n         *\n         * 使手机发生较短时间的振动（15 ms）。仅在 iPhone `7 / 7 Plus` 以上及 Android 机型生效 */",
    "detail": "function",
    "kind": 9
  },
  "writeBLECharacteristicValue": {
    "prefix": "writeBLECharacteristicValue",
    "body": [
      "wx.writeBLECharacteristicValue({",
      "  characteristicId: '${1:characteristicId}',",
      "  deviceId: '${2:deviceId}',",
      "  serviceId: '${3:serviceId}',",
      "  value: ${4:value},",
      "  writeType: ${5:writeType},",
      "  success: (res) => {$6},",
      "  fail: (res) => {$7},",
      "  complete: (res) => {$8},",
      "})"
    ],
    "description": "/** [wx.writeBLECharacteristicValue(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.writeBLECharacteristicValue.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 向蓝牙低功耗设备特征值中写入二进制数据。注意：必须设备的特征支持 write 才可以成功调用。\n*\n* **注意**\n*\n* - 并行调用多次会存在写失败的可能性。\n* - 小程序不会对写入数据包大小做限制，但系统与蓝牙设备会限制蓝牙 4.0 单次传输的数据大小，超过最大字节数后会发生写入错误，建议每次写入不超过 20 字节。\n* - 若单次写入数据过长，iOS 上存在系统不会有任何回调的情况（包括错误回调）。\n* - 安卓平台上，在调用 [wx.notifyBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html) 成功后立即调用本接口，在部分机型上会发生 10008 系统错误\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\n// 向蓝牙设备发送一个0x00的16进制数据\nlet buffer = new ArrayBuffer(1)\nlet dataView = new DataView(buffer)\ndataView.setUint8(0, 0)\n\nwx.writeBLECharacteristicValue({\n  // 这里的 deviceId 需要在 getBluetoothDevices 或 onBluetoothDeviceFound 接口中获取\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  // 这里的value是ArrayBuffer类型\n  value: buffer,\n  success (res) {\n    console.log('writeBLECharacteristicValue success', res.errMsg)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.encode": {
    "prefix": "wx.encode",
    "body": [
      "wx.encode({",
      "  data: '${1:data}',",
      "})"
    ],
    "description": "/** [ArrayBuffer wx.encode(Object object)](https://developers.weixin.qq.com/minigame/dev/api/util/wx.encode.html)\n         *\n         * 将字符串按照指定的编码格式编码成 ArrayBuffer */",
    "detail": "function",
    "kind": 9
  },
  "wx.setHandoffQuery": {
    "prefix": "wx.setHandoffQuery",
    "body": [
      "wx.setHandoffQuery('${1:query}')"
    ],
    "description": "/** [Boolean wx.setHandoffQuery(String query)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.setHandoffQuery.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 设置接力参数，该接口需要在游戏域调用 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getAccountInfoSync": {
    "prefix": "wx.getAccountInfoSync",
    "body": [
      "wx.getAccountInfoSync()"
    ],
    "description": "/** [Object wx.getAccountInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/open-api/account-info/wx.getAccountInfoSync.html)\n*\n* 需要基础库： `2.11.2`\n*\n* 获取当前帐号信息。线上小程序版本号仅支持在正式版小程序中获取，开发版和体验版中无法获取。\n*\n* **示例代码**\n*\n* ```js\nconst accountInfo = wx.getAccountInfoSync();\nconsole.log(accountInfo.miniProgram.appId) // 小程序 appId\nconsole.log(accountInfo.plugin.appId) // 插件 appId\nconsole.log(accountInfo.plugin.version) // 插件版本号， 'a.b.c' 这样的形式\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getAppAuthorizeSetting": {
    "prefix": "wx.getAppAuthorizeSetting",
    "body": [
      "wx.getAppAuthorizeSetting()"
    ],
    "description": "/** [Object wx.getAppAuthorizeSetting()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getAppAuthorizeSetting.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取微信APP授权设置\n*\n* **示例代码**\n*\n* ```js\nconst appAuthorizeSetting = wx.getAppAuthorizeSetting()\n\nconsole.log(appAuthorizeSetting.albumAuthorized)\nconsole.log(appAuthorizeSetting.bluetoothAuthorized)\nconsole.log(appAuthorizeSetting.cameraAuthorized)\nconsole.log(appAuthorizeSetting.locationAuthorized)\nconsole.log(appAuthorizeSetting.locationReducedAccuracy)\nconsole.log(appAuthorizeSetting.microphoneAuthorized)\nconsole.log(appAuthorizeSetting.notificationAlertAuthorized)\nconsole.log(appAuthorizeSetting.notificationAuthorized)\nconsole.log(appAuthorizeSetting.notificationBadgeAuthorized)\nconsole.log(appAuthorizeSetting.notificationSoundAuthorized)\nconsole.log(appAuthorizeSetting.phoneCalendarAuthorized)\n```\n*\n* **返回值说明**\n*\n* `'authorized'` 表示已经获得授权，无需再次请求授权；\n* `'denied'` 表示请求授权被拒绝，无法再次请求授权；（此情况需要引导用户[打开系统设置](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.openAppAuthorizeSetting.html)，在设置页中打开权限）\n* `'non determined'` 表示尚未请求授权，会在微信下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） */",
    "detail": "function",
    "kind": 9
  },
  "wx.getAppBaseInfo": {
    "prefix": "wx.getAppBaseInfo",
    "body": [
      "wx.getAppBaseInfo()"
    ],
    "description": "/** [Object wx.getAppBaseInfo()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getAppBaseInfo.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取微信APP基础信息\n*\n* **示例代码**\n*\n* ```js\nconst appBaseInfo = wx.getAppBaseInfo()\n\nconsole.log(appBaseInfo.SDKVersion)\nconsole.log(appBaseInfo.enableDebug)\nconsole.log(appBaseInfo.host)\nconsole.log(appBaseInfo.language)\nconsole.log(appBaseInfo.version)\nconsole.log(appBaseInfo.theme)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getBatteryInfoSync": {
    "prefix": "wx.getBatteryInfoSync",
    "body": [
      "wx.getBatteryInfoSync()"
    ],
    "description": "/** [Object wx.getBatteryInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/device/battery/wx.getBatteryInfoSync.html)\n         *\n         * [wx.getBatteryInfo](https://developers.weixin.qq.com/minigame/dev/api/device/battery/wx.getBatteryInfo.html) 的同步版本 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getDeviceInfo": {
    "prefix": "wx.getDeviceInfo",
    "body": [
      "wx.getDeviceInfo()"
    ],
    "description": "/** [Object wx.getDeviceInfo()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getDeviceInfo.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取设备基础信息\n*\n* **示例代码**\n*\n* ```js\nconst deviceInfo = wx.getDeviceInfo()\n\nconsole.log(deviceInfo.abi)\nconsole.log(deviceInfo.benchmarkLevel)\nconsole.log(deviceInfo.brand)\nconsole.log(deviceInfo.model)\nconsole.log(deviceInfo.platform)\nconsole.log(deviceInfo.system)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getEnterOptionsSync": {
    "prefix": "wx.getEnterOptionsSync",
    "body": [
      "wx.getEnterOptionsSync()"
    ],
    "description": "/** [Object wx.getEnterOptionsSync()](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getEnterOptionsSync.html)\n         *\n         * 需要基础库： `2.13.2`\n         *\n         * 获取小游戏打开的参数（包括冷启动和热启动）\n         *\n         * **返回有效 referrerInfo 的场景**\n         *\n         * | 场景值 | 场景                            | appId含义  |\n         * | ------ | ------------------------------- | ---------- |\n         * | 1020   | 公众号 profile 页相关小程序列表 | 来源公众号 |\n         * | 1035   | 公众号自定义菜单                | 来源公众号 |\n         * | 1036   | App 分享消息卡片                | 来源App    |\n         * | 1037   | 小程序打开小程序                | 来源小程序 |\n         * | 1038   | 从另一个小程序返回              | 来源小程序 |\n         * | 1043   | 公众号模板消息                  | 来源公众号 |\n         *\n         * **不同 apiCategory 场景下的 API 限制**\n         *\n         * `X` 表示 API 被限制无法使用；不在表格中的 API 不限制。\n         *\n         * |                                       | default | nativeFunctionalized | browseOnly | embedded |\n         * |-|-|-|-|-|\n         * |navigateToMiniProgram                  |         | `X`                  | `X`        |          |\n         * |openSetting                            |         |                      | `X`        |          |\n         * |&lt;button open-type=\"share\"&gt;       |         | `X`                  | `X`        | `X`      |\n         * |&lt;button open-type=\"feedback\"&gt;    |         |                      | `X`        |          |\n         * |&lt;button open-type=\"open-setting\"&gt;|         |                      | `X`        |          |\n         * |openEmbeddedMiniProgram                |         | `X`                  | `X`        | `X`      |\n         *\n         * **注意**\n         *\n         * 部分版本在无`referrerInfo`的时候会返回 `undefined`，建议使用 `options.referrerInfo && options.referrerInfo.appId` 进行判断。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getExptInfoSync": {
    "prefix": "wx.getExptInfoSync",
    "body": [
      "wx.getExptInfoSync([$1])"
    ],
    "description": "/** [Object wx.getExptInfoSync(Array.&lt;string&gt; keys)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.getExptInfoSync.html)\n         *\n         * 需要基础库： `2.17.0`\n         *\n         * 给定实验参数数组，获取对应的实验参数值\n         *\n         * **提示**\n         *\n         * 假设实验参数有 `color`, `size`\n         * 调用 wx.getExptInfoSync() 会返回 `{color:'#fff',size:20}` 类似的结果\n         * 而 wx.getExptInfoSync(['color']) 则只会返回 `{color:'#fff'}` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getExtConfigSync": {
    "prefix": "wx.getExtConfigSync",
    "body": [
      "wx.getExtConfigSync()"
    ],
    "description": "/** [Object wx.getExtConfigSync()](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfigSync.html)\n*\n* 需要基础库： `2.8.3`\n*\n* [wx.getExtConfig](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfig.html) 的同步版本。\n*\n* **Tips**\n*\n* 1. 本接口暂时无法通过 [wx.canIUse](#) 判断是否兼容，开发者需要自行判断 [wx.getExtConfigSync](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfigSync.html) 是否存在来兼容\n*\n* ****\n*\n* ```js\nlet extConfig = wx.getExtConfigSync? wx.getExtConfigSync(): {}\nconsole.log(extConfig)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getLaunchOptionsSync": {
    "prefix": "wx.getLaunchOptionsSync",
    "body": [
      "wx.getLaunchOptionsSync()"
    ],
    "description": "/** [Object wx.getLaunchOptionsSync()](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html)\n         *\n         * 获取小游戏冷启动时的参数。热启动参数通过 [wx.onShow](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.onShow.html) 接口获取。\n         *\n         * **返回有效 referrerInfo 的场景**\n         *\n         * | 场景值 | 场景                            | appId含义  |\n         * | ------ | ------------------------------- | ---------- |\n         * | 1020   | 公众号 profile 页相关小程序列表 | 来源公众号 |\n         * | 1035   | 公众号自定义菜单                | 来源公众号 |\n         * | 1036   | App 分享消息卡片                | 来源App    |\n         * | 1037   | 小程序打开小程序                | 来源小程序 |\n         * | 1038   | 从另一个小程序返回              | 来源小程序 |\n         * | 1043   | 公众号模板消息                  | 来源公众号 |\n         *\n         * **注意**\n         *\n         * 部分版本在无`referrerInfo`的时候会返回 `undefined`，\n         * 建议使用 `options.referrerInfo && options.referrerInfo.appId` 进行判断。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getMenuButtonBoundingClientRect": {
    "prefix": "wx.getMenuButtonBoundingClientRect",
    "body": [
      "wx.getMenuButtonBoundingClientRect()"
    ],
    "description": "/** [Object wx.getMenuButtonBoundingClientRect()](https://developers.weixin.qq.com/minigame/dev/api/ui/menu/wx.getMenuButtonBoundingClientRect.html)\n*\n* 需要基础库： `2.1.0`\n*\n* 获取菜单按钮（右上角胶囊按钮）的布局位置信息。坐标信息以屏幕左上角为原点。\n*\n* **示例代码**\n*\n* ```js\nconst res = wx.getMenuButtonBoundingClientRect()\n\nconsole.log(res.width)\nconsole.log(res.height)\nconsole.log(res.top)\nconsole.log(res.right)\nconsole.log(res.bottom)\nconsole.log(res.left)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getStorageInfoSync": {
    "prefix": "wx.getStorageInfoSync",
    "body": [
      "wx.getStorageInfoSync()"
    ],
    "description": "/** [Object wx.getStorageInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorageInfoSync.html)\n*\n* [wx.getStorageInfo](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorageInfo.html) 的同步版本\n*\n* **示例代码**\n*\n* ```js\nwx.getStorageInfo({\n  success (res) {\n    console.log(res.keys)\n    console.log(res.currentSize)\n    console.log(res.limitSize)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getStorageInfoSync()\n  console.log(res.keys)\n  console.log(res.currentSize)\n  console.log(res.limitSize)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getSystemInfoSync": {
    "prefix": "wx.getSystemInfoSync",
    "body": [
      "wx.getSystemInfoSync()"
    ],
    "description": "/** [Object wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html)\n*\n* [wx.getSystemInfo](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfo.html) 的同步版本\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/WkUCgXmS7mqO)\n*\n* ```js\nwx.getSystemInfo({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getSystemInfoSync()\n  console.log(res.model)\n  console.log(res.pixelRatio)\n  console.log(res.windowWidth)\n  console.log(res.windowHeight)\n  console.log(res.language)\n  console.log(res.version)\n  console.log(res.platform)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getSystemSetting": {
    "prefix": "wx.getSystemSetting",
    "body": [
      "wx.getSystemSetting()"
    ],
    "description": "/** [Object wx.getSystemSetting()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemSetting.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取设备设置\n*\n* **示例代码**\n*\n* ```js\nconst systemSetting = wx.getSystemSetting()\n\nconsole.log(systemSetting.bluetoothEnabled)\nconsole.log(systemSetting.deviceOrientation)\nconsole.log(systemSetting.locationEnabled)\nconsole.log(systemSetting.wifiEnabled)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getWindowInfo": {
    "prefix": "wx.getWindowInfo",
    "body": [
      "wx.getWindowInfo()"
    ],
    "description": "/** [Object wx.getWindowInfo()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getWindowInfo.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 获取窗口信息\n*\n* **示例代码**\n*\n* ```js\nconst windowInfo = wx.getWindowInfo()\n\nconsole.log(windowInfo.pixelRatio)\nconsole.log(windowInfo.screenWidth)\nconsole.log(windowInfo.screenHeight)\nconsole.log(windowInfo.windowWidth)\nconsole.log(windowInfo.windowHeight)\nconsole.log(windowInfo.statusBarHeight)\nconsole.log(windowInfo.safeArea)\nconsole.log(windowInfo.screenTop)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.createBannerAd": {
    "prefix": "wx.createBannerAd",
    "body": [
      "wx.createBannerAd({",
      "  adUnitId: '${1:adUnitId}',",
      "  style: {",
      "    height: ${2:0},",
      "    left: ${3:0},",
      "    top: ${4:0},",
      "    width: ${5:0},",
      "  },",
      "})"
    ],
    "description": "/** [[BannerAd](https://developers.weixin.qq.com/minigame/dev/api/ad/BannerAd.html) wx.createBannerAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createBannerAd.html)\n         *\n         * 需要基础库： `2.0.4`\n         *\n         * 创建 banner 广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.0.4 后再使用该 API。每次调用该方法创建 banner 广告都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createCamera": {
    "prefix": "wx.createCamera",
    "body": [
      "wx.createCamera()"
    ],
    "description": "/** [[Camera](https://developers.weixin.qq.com/minigame/dev/api/media/camera/Camera.html) wx.createCamera(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/camera/wx.createCamera.html)\n         *\n         * 需要基础库： `2.9.0`\n         *\n         * 创建相机 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createCanvas": {
    "prefix": "wx.createCanvas",
    "body": [
      "wx.createCanvas()"
    ],
    "description": "/** [[Canvas](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/Canvas.html) wx.createCanvas()](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/wx.createCanvas.html)\n         *\n         * 创建一个画布对象。首次调用创建的是显示在屏幕上的画布，之后调用创建的都是离屏画布。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getSharedCanvas": {
    "prefix": "wx.getSharedCanvas",
    "body": [
      "wx.getSharedCanvas()"
    ],
    "description": "/** [[Canvas](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/Canvas.html) wx.getSharedCanvas()](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getSharedCanvas.html)\n         *\n         * 获取主域和开放数据域共享的 sharedCanvas。**只有开放数据域能调用。** */",
    "detail": "function",
    "kind": 9
  },
  "wx.createCustomAd": {
    "prefix": "wx.createCustomAd",
    "body": [
      "wx.createCustomAd({",
      "  adIntervals: ${1:0},",
      "  adUnitId: '${2:adUnitId}',",
      "  style: {",
      "    fixed: ${3:true},",
      "    left: ${4:0},",
      "    top: ${5:0},",
      "  },",
      "})"
    ],
    "description": "/** [[CustomAd](https://developers.weixin.qq.com/minigame/dev/api/ad/CustomAd.html) wx.createCustomAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createCustomAd.html)\n         *\n         * 需要基础库： `2.11.1`\n         *\n         * 创建原生模板广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.11.1 后再使用该 API。每次调用该方法创建原生模板广告都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.downloadFile": {
    "prefix": "wx.downloadFile",
    "body": [
      "wx.downloadFile({",
      "  url: '${1:url}',",
      "})"
    ],
    "description": "/** [[DownloadTask](https://developers.weixin.qq.com/minigame/dev/api/network/download/DownloadTask.html) wx.downloadFile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/download/wx.downloadFile.html)\n*\n* 下载文件资源到本地。客户端直接发起一个 HTTPS GET 请求，返回文件的本地临时路径 (本地路径)，单次下载允许的最大文件为 200MB。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。\n*\n* 注意：请在服务端响应的 header 中指定合理的 `Content-Type` 字段，以保证客户端正确处理文件类型。\n*\n* **示例代码**\n*\n* ```js\nwx.downloadFile({\n  url: 'https://example.com/audio/123', //仅为示例，并非真实的资源\n  success (res) {\n    // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容\n    if (res.statusCode === 200) {\n      wx.playVoice({\n        filePath: res.tempFilePath\n      })\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.createFeedbackButton": {
    "prefix": "wx.createFeedbackButton",
    "body": [
      "wx.createFeedbackButton({",
      "  style: {",
      "    backgroundColor: '${1:backgroundColor}',",
      "    borderColor: '${2:borderColor}',",
      "    borderRadius: ${3:0},",
      "    borderWidth: ${4:0},",
      "    color: '${5:color}',",
      "    fontSize: ${6:0},",
      "    height: ${7:0},",
      "    left: ${8:0},",
      "    lineHeight: ${9:0},",
      "    textAlign: ${10:textAlign},",
      "    top: ${11:0},",
      "    width: ${12:0},",
      "  },",
      "  type: ${14:type},",
      "})"
    ],
    "description": "/** [[FeedbackButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/feedback/FeedbackButton.html) wx.createFeedbackButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/feedback/wx.createFeedbackButton.html)\n         *\n         * 需要基础库： `2.1.2`\n         *\n         * 创建打开意见反馈页面的按钮 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getFileSystemManager": {
    "prefix": "wx.getFileSystemManager",
    "body": [
      "wx.getFileSystemManager()"
    ],
    "description": "/** [[FileSystemManager](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.html) wx.getFileSystemManager()](https://developers.weixin.qq.com/minigame/dev/api/file/wx.getFileSystemManager.html)\n         *\n         * 获取全局唯一的文件管理器 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createGameBanner": {
    "prefix": "wx.createGameBanner",
    "body": [
      "wx.createGameBanner({",
      "  adUnitId: '${1:adUnitId}',",
      "  style: {",
      "    left: ${2:0},",
      "    top: ${3:0},",
      "  },",
      "})"
    ],
    "description": "/** [[GameBanner](https://developers.weixin.qq.com/minigame/dev/api/game-portal/GameBanner.html) wx.createGameBanner(Object object)](https://developers.weixin.qq.com/minigame/dev/api/game-portal/wx.createGameBanner.html)\n         *\n         * 需要基础库： `2.7.5`\n         * @deprecated 基础库版本 [2.18.1](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 创建小游戏推荐banner组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.7.5 后再使用该 API。每次调用该方法都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createGameClubButton": {
    "prefix": "wx.createGameClubButton",
    "body": [
      "wx.createGameClubButton({",
      "  icon: ${1:icon},",
      "  style: {",
      "    backgroundColor: '${2:backgroundColor}',",
      "    borderColor: '${3:borderColor}',",
      "    borderRadius: ${4:0},",
      "    borderWidth: ${5:0},",
      "    color: '${6:color}',",
      "    fontSize: ${7:0},",
      "    height: ${8:0},",
      "    left: ${9:0},",
      "    lineHeight: ${10:0},",
      "    textAlign: ${11:textAlign},",
      "    top: ${12:0},",
      "    width: ${13:0},",
      "  },",
      "  type: ${15:type},",
      "})"
    ],
    "description": "/** [[GameClubButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/game-club/GameClubButton.html) wx.createGameClubButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/game-club/wx.createGameClubButton.html)\n         *\n         * 需要基础库： `2.0.3`\n         *\n         * 创建游戏圈按钮。游戏圈按钮被点击后会跳转到小游戏的游戏圈。更多关于游戏圈的信息见 [游戏圈使用指南](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/game-club.html)。从基础库2.30.3开始，新增传递openlink的特性，支持打开单帖子、话题页、活动页。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createGameIcon": {
    "prefix": "wx.createGameIcon",
    "body": [
      "wx.createGameIcon({",
      "  adUnitId: '${1:adUnitId}',",
      "  count: ${2:0},",
      "  style: [$3],",
      "}, {",
      "  appNameHidden: ${5:true},",
      "  borderColor: '${6:borderColor}',",
      "  borderWidth: ${7:0},",
      "  color: '${8:color}',",
      "  left: ${9:0},",
      "  size: ${10:0},",
      "  top: ${11:0},",
      "})"
    ],
    "description": "/** [[GameIcon](https://developers.weixin.qq.com/minigame/dev/api/game-portal/GameIcon.html) wx.createGameIcon(Object object, Object styleItem)](https://developers.weixin.qq.com/minigame/dev/api/game-portal/wx.createGameIcon.html)\n         *\n         * 需要基础库： `2.8.3`\n         * @deprecated 基础库版本 [2.18.1](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 创建小游戏推荐icon组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.8.2 后再使用该 API。每次调用该方法都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createGamePortal": {
    "prefix": "wx.createGamePortal",
    "body": [
      "wx.createGamePortal({",
      "  adUnitId: '${1:adUnitId}',",
      "})"
    ],
    "description": "/** [[GamePortal](https://developers.weixin.qq.com/minigame/dev/api/game-portal/GamePortal.html) wx.createGamePortal(Object object)](https://developers.weixin.qq.com/minigame/dev/api/game-portal/wx.createGamePortal.html)\n         *\n         * 需要基础库： `2.7.5`\n         * @deprecated 基础库版本 [2.18.1](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 创建小游戏推荐弹窗组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号 >= 2.7.5 后再使用该 API。每次调用该方法都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createGameRecorderShareButton": {
    "prefix": "wx.createGameRecorderShareButton",
    "body": [
      "wx.createGameRecorderShareButton({",
      "  share: {",
      "    bgm: '${1:bgm}',",
      "    timeRange: [$2],",
      "  },",
      "  style: {$4},",
      "})"
    ],
    "description": "/** [[GameRecorderShareButton](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/GameRecorderShareButton.html) wx.createGameRecorderShareButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/wx.createGameRecorderShareButton.html)\n         *\n         * 需要基础库： `2.8.0`\n         *\n         * 创建游戏对局回放分享按钮，返回一个单例对象。按钮在被用户点击后会发起对最近一次录制完成的游戏对局回放的分享。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getGameRecorder": {
    "prefix": "wx.getGameRecorder",
    "body": [
      "wx.getGameRecorder()"
    ],
    "description": "/** [[GameRecorder](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/GameRecorder.html) wx.getGameRecorder()](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/wx.getGameRecorder.html)\n         *\n         * 需要基础库： `2.8.0`\n         *\n         * 获取全局唯一的游戏画面录制对象 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getGameServerManager": {
    "prefix": "wx.getGameServerManager",
    "body": [
      "wx.getGameServerManager()"
    ],
    "description": "/** [[GameServerManager](https://developers.weixin.qq.com/minigame/dev/api/game-server-manager/GameServerManager.html) wx.getGameServerManager()](https://developers.weixin.qq.com/minigame/dev/api/game-server-manager/wx.getGameServerManager.html)\n         *\n         * 需要基础库： `2.8.0`\n         *\n         * 获取 **全局唯一** 的游戏服务管理器。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createGridAd": {
    "prefix": "wx.createGridAd",
    "body": [
      "wx.createGridAd({",
      "  adTheme: '${1:adTheme}',",
      "  adUnitId: '${2:adUnitId}',",
      "  gridCount: ${3:0},",
      "  style: {",
      "    height: ${4:0},",
      "    left: ${5:0},",
      "    top: ${6:0},",
      "    width: ${7:0},",
      "  },",
      "})"
    ],
    "description": "/** [[GridAd](https://developers.weixin.qq.com/minigame/dev/api/ad/GridAd.html) wx.createGridAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createGridAd.html)\n         *\n         * 需要基础库： `2.9.2`\n         * @deprecated 基础库版本 [2.30.2](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 创建 grid(格子) 。每次调用该方法创建 grid(格子) 广告都会返回一个全新的实例。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createImageData": {
    "prefix": "wx.createImageData",
    "body": [
      "wx.createImageData()"
    ],
    "description": "/** [[ImageData](https://developers.weixin.qq.com/minigame/dev/api/render/image/ImageData.html) wx.createImageData()](https://developers.weixin.qq.com/minigame/dev/api/render/image/wx.createImageData.html)\n         *\n         * 需要基础库： `2.24.6`\n         *\n         * 创建一个 ImageData 图片数据对象 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createImage": {
    "prefix": "wx.createImage",
    "body": [
      "wx.createImage()"
    ],
    "description": "/** [[Image](https://developers.weixin.qq.com/minigame/dev/api/render/image/Image.html) wx.createImage()](https://developers.weixin.qq.com/minigame/dev/api/render/image/wx.createImage.html)\n         *\n         * 创建一个图片对象 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createInferenceSession": {
    "prefix": "wx.createInferenceSession",
    "body": [
      "wx.createInferenceSession({",
      "  model: '${1:model}',",
      "})"
    ],
    "description": "/** [[InferenceSession](https://developers.weixin.qq.com/minigame/dev/api/ai/inference/InferenceSession.html) wx.createInferenceSession(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/inference/wx.createInferenceSession.html)\n*\n* 需要基础库： `2.30.0`\n*\n* 创建 AI 推理 Session。使用前可参考[AI指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/inference/tutorial.html)\n*\n* **示例代码**\n*\n* ```js\n// 创建会话，加载模型\nconst session = wx.createInferenceSession({\n  model: `${wx.env.USER_DATA_PATH}/MNIST.onnx`,\n  precisionLevel: 4,\n  typicalShape:{input1:[1, 3, 224, 224], input2:[1, 1, 224, 224]},  //除非使用动态轴，一般不用显式指定\n  allowNPU: false,\n  allowQuantize: false\n})\n\n// 监听error事件\nsession.onError(err => {\n  console.error(err)\n})\n\n// 监听模型加载完成事件\nsession.onLoad(() => {\n  // 运行推理\n  // 其中input1, input2, output0 必须与使用的onnx模型中实际的输入输出名字完全一致，不可随意填写。\n  // 模型输入输出信息可以通过Netron 打开onnx模型看到\n  session.run({\n    input1: {\n      type: 'float32',\n      data: new Float32Array(3 * 224 * 224).buffer,\n      shape: [1, 3, 224, 224] // NCHW 顺序\n    },\n    // 多个input的添加方法，假设第二个input需要数据类型为uint8\n    input2: {\n      type: 'uint8',\n      data: new Uint8Array(224 * 224).buffer,\n      shape: [1, 1, 224, 224]\n    },\n  }).then(res => {\n    console.log(res.output0)\n  })\n})\n\n// 销毁Session\n// session完成创建后可以多次调用run进行推理，直到调用`session.destroy()`释放相关内存。\n\n// 销毁会话\nsession.destroy()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.createInnerAudioContext": {
    "prefix": "wx.createInnerAudioContext",
    "body": [
      "wx.createInnerAudioContext()"
    ],
    "description": "/** [[InnerAudioContext](https://developers.weixin.qq.com/minigame/dev/api/media/audio/InnerAudioContext.html) wx.createInnerAudioContext(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.createInnerAudioContext.html)\n*\n* 需要基础库： `1.6.0`\n*\n* 创建内部 [audio](#) 上下文 [InnerAudioContext](https://developers.weixin.qq.com/minigame/dev/api/media/audio/InnerAudioContext.html) 对象。\n*\n* **示例代码**\n*\n* ```js\nconst innerAudioContext = wx.createInnerAudioContext({\n  useWebAudioImplement: false // 是否使用 WebAudio 作为底层音频驱动，默认关闭。对于短音频、播放频繁的音频建议开启此选项，开启后将获得更优的性能表现。由于开启此选项后也会带来一定的内存增长，因此对于长音频建议关闭此选项\n})\ninnerAudioContext.src = 'http://ws.stream.qqmusic.qq.com/M500001VfvsJ21xFqb.mp3?guid=ffffffff82def4af4b12b3cd9337d5e7&uin=346897220&vkey=6292F51E1E384E061FF02C31F716658E5C81F5594D561F2E88B854E81CAAB7806D5E4F103E55D33C16F3FAC506D1AB172DE8600B37E43FAD&fromtag=46'\n\ninnerAudioContext.play() // 播放\n\ninnerAudioContext.pause() // 暂停\n\ninnerAudioContext.stop() // 停止\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.createInterstitialAd": {
    "prefix": "wx.createInterstitialAd",
    "body": [
      "wx.createInterstitialAd({",
      "  adUnitId: '${1:adUnitId}',",
      "})"
    ],
    "description": "/** [[InterstitialAd](https://developers.weixin.qq.com/minigame/dev/api/ad/InterstitialAd.html) wx.createInterstitialAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createInterstitialAd.html)\n         *\n         * 需要基础库： `2.6.0`\n         *\n         * 创建插屏广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号后再使用该 API。每次调用该方法创建插屏广告都会返回一个全新的实例（小程序端的插屏广告实例不允许跨页面使用）。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.loadSubpackage": {
    "prefix": "wx.loadSubpackage",
    "body": [
      "wx.loadSubpackage({",
      "  complete: ${1:complete},",
      "  fail: ${2:fail},",
      "  name: '${3:name}',",
      "  success: ${4:success},",
      "})"
    ],
    "description": "/** [[LoadSubpackageTask](https://developers.weixin.qq.com/minigame/dev/api/base/subpackage/LoadSubpackageTask.html) wx.loadSubpackage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/subpackage/wx.loadSubpackage.html)\n         *\n         * 需要基础库： `2.1.0`\n         *\n         * 触发分包加载，详见 [分包加载](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/subPackage/useSubPackage.html) */",
    "detail": "function",
    "kind": 9
  },
  "wx.getLogManager": {
    "prefix": "wx.getLogManager",
    "body": [
      "wx.getLogManager()"
    ],
    "description": "/** [[LogManager](https://developers.weixin.qq.com/minigame/dev/api/base/debug/LogManager.html) wx.getLogManager(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/debug/wx.getLogManager.html)\n*\n* 需要基础库： `2.1.0`\n*\n* 获取日志管理器对象。\n*\n* **示例代码**\n*\n* ```js\nconst logger = wx.getLogManager({level: 1})\nlogger.log({str: 'hello world'}, 'basic log', 100, [1, 2, 3])\nlogger.info({str: 'hello world'}, 'info log', 100, [1, 2, 3])\nlogger.debug({str: 'hello world'}, 'debug log', 100, [1, 2, 3])\nlogger.warn({str: 'hello world'}, 'warn log', 100, [1, 2, 3])\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.createMediaAudioPlayer": {
    "prefix": "wx.createMediaAudioPlayer",
    "body": [
      "wx.createMediaAudioPlayer()"
    ],
    "description": "/** [[MediaAudioPlayer](https://developers.weixin.qq.com/minigame/dev/api/media/audio/MediaAudioPlayer.html) wx.createMediaAudioPlayer()](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.createMediaAudioPlayer.html)\n*\n* 需要基础库： `2.13.0`\n*\n* 创建媒体音频播放器对象 [MediaAudioPlayer](https://developers.weixin.qq.com/minigame/dev/api/media/audio/MediaAudioPlayer.html) 对象，可用于播放视频解码器 [VideoDecoder](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.html) 输出的音频。\n*\n* **示例代码**\n*\n* ```js\n  // 创建视频解码器，具体参数见 createVideoDecoder 文档\n  const videoDecoder = wx.createVideoDecoder()\n  // 创建媒体音频播放器\n  const mediaAudioPlayer = wx.createMediaAudioPlayer()\n  // 启动视频解码器\n  videoDecoder.start()\n  // 启动播放器\n  mediaAudioPlayer.start().then(() => {\n    // 添加播放器音频来源\n    mediaAudioPlayer.addAudioSource(videoDecoder).then(res => {\n      videoDecoder.getFrameData() // 建议在 requestAnimationFrame 里获取每一帧视频数据\n      console.log(res)\n    })\n\n    // 移除播放器音频来源\n    mediaAudioPlayer.removeAudioSource(videoDecoder).then()\n    // 停止播放器\n    mediaAudioPlayer.stop().then()\n    // 销毁播放器\n    mediaAudioPlayer.destroy().then()\n    // 设置播放器音量\n    mediaAudioPlayer.volume = 0.5\n  })\n```\n*\n* **完整demo（小游戏）**\n*\n* - https://developers.weixin.qq.com/s/SF2duHmb7MjI */",
    "detail": "function",
    "kind": 9
  },
  "wx.getOpenDataContext": {
    "prefix": "wx.getOpenDataContext",
    "body": [
      "wx.getOpenDataContext()"
    ],
    "description": "/** [[OpenDataContext](https://developers.weixin.qq.com/minigame/dev/api/open-api/context/OpenDataContext.html) wx.getOpenDataContext()](https://developers.weixin.qq.com/minigame/dev/api/open-api/context/wx.getOpenDataContext.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 获取开放数据域 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createOpenSettingButton": {
    "prefix": "wx.createOpenSettingButton",
    "body": [
      "wx.createOpenSettingButton({",
      "  style: {",
      "    backgroundColor: '${1:backgroundColor}',",
      "    borderColor: '${2:borderColor}',",
      "    borderRadius: ${3:0},",
      "    borderWidth: ${4:0},",
      "    color: '${5:color}',",
      "    fontSize: ${6:0},",
      "    height: ${7:0},",
      "    left: ${8:0},",
      "    lineHeight: ${9:0},",
      "    textAlign: ${10:textAlign},",
      "    top: ${11:0},",
      "    width: ${12:0},",
      "  },",
      "  type: ${14:type},",
      "})"
    ],
    "description": "/** [[OpenSettingButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/OpenSettingButton.html) wx.createOpenSettingButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.createOpenSettingButton.html)\n         *\n         * 需要基础库： `2.0.7`\n         *\n         * 创建打开设置页面的按钮 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createPath2D": {
    "prefix": "wx.createPath2D",
    "body": [
      "wx.createPath2D()"
    ],
    "description": "/** [[Path2D](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/Path2D.html) wx.createPath2D()](https://developers.weixin.qq.com/minigame/dev/api/render/canvas/wx.createPath2D.html)\n         *\n         * 需要基础库： `2.24.6`\n         *\n         * 创建一个 Path2D 路径对象 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getPerformance": {
    "prefix": "wx.getPerformance",
    "body": [
      "wx.getPerformance()"
    ],
    "description": "/** [[Performance](https://developers.weixin.qq.com/minigame/dev/api/base/performance/Performance.html) wx.getPerformance()](https://developers.weixin.qq.com/minigame/dev/api/base/performance/wx.getPerformance.html)\n         *\n         * 获取性能管理器 */",
    "detail": "function",
    "kind": 9
  },
  "wx.preDownloadSubpackage": {
    "prefix": "wx.preDownloadSubpackage",
    "body": [
      "wx.preDownloadSubpackage({",
      "  complete: ${1:complete},",
      "  fail: ${2:fail},",
      "  packageType: '${3:packageType}',",
      "  success: ${4:success},",
      "})"
    ],
    "description": "/** [[PreDownloadSubpackageTask](https://developers.weixin.qq.com/minigame/dev/api/base/subpackage/PreDownloadSubpackageTask.html) wx.preDownloadSubpackage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/subpackage/wx.preDownloadSubpackage.html)\n*\n* 需要基础库： `2.27.3`\n*\n* 触发分包预下载。\n*\n* **示例代码**\n*\n* ```js\n// 首先要在 app.json / game.json 中配置workers作为分包\n{\n  \"workers\": {\n    \"path\": \"myWorkersFolder\",\n    \"isSubpackage\": true  // true 表示把 worker 打包为分包。默认 false。填 false 时等同于 { \"workers\": \"workers\" }\n  }\n}\n```\n* ```js\n* // 然后调用 wx.preDownloadSubpackage 下载 worker 分包，下载成功后才可以创建 worker\n* var task = wx.preDownloadSubpackage({\n*   packageType: \"workers\",\n*   success(res) {\n*     console.log(\"load worker success\", res)\n*     wx.createWorker(\"myWorkersFolder/request/index.js\")   // 创建 worker。 如果 worker 分包没下载完就调 createWorker 的话将报错\n*   },\n*   fail(res) {\n*     console.log(\"load worker fail\", res)\n*   }\n* })\n*\n* task.onProgressUpdate(res => {\n*   console.log(res.progress) // 可通过 onProgressUpdate 接口监听下载进度\n*   console.log(res.totalBytesWritten)\n*   console.log(res.totalBytesExpectedToWrite)\n* }) */",
    "detail": "function",
    "kind": 9
  },
  "wx.getRealtimeLogManager": {
    "prefix": "wx.getRealtimeLogManager",
    "body": [
      "wx.getRealtimeLogManager()"
    ],
    "description": "/** [[RealtimeLogManager](https://developers.weixin.qq.com/minigame/dev/api/base/debug/RealtimeLogManager.html) wx.getRealtimeLogManager()](https://developers.weixin.qq.com/minigame/dev/api/base/debug/wx.getRealtimeLogManager.html)\n*\n* 需要基础库： `2.14.4`\n*\n* 获取实时日志管理器对象。\n*\n* **示例代码**\n*\n* ```js\n// 小程序端\nconst logger = wx.getRealtimeLogManager()\nlogger.info({str: 'hello world'}, 'info log', 100, [1, 2, 3])\nlogger.error({str: 'hello world'}, 'error log', 100, [1, 2, 3])\nlogger.warn({str: 'hello world'}, 'warn log', 100, [1, 2, 3])\n\n// 插件端，基础库 2.16.0 版本后支持，只允许采用 key-value 的新格式上报\nconst logManager = wx.getRealtimeLogManager()\nconst logger = logManager.tag('plugin-log1')\nlogger.info('key1', 'value1')\nlogger.error('key2', {str: 'value2'})\nlogger.warn('key3', 'value3')\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getRecorderManager": {
    "prefix": "wx.getRecorderManager",
    "body": [
      "wx.getRecorderManager()"
    ],
    "description": "/** [[RecorderManager](https://developers.weixin.qq.com/minigame/dev/api/media/recorder/RecorderManager.html) wx.getRecorderManager()](https://developers.weixin.qq.com/minigame/dev/api/media/recorder/wx.getRecorderManager.html)\n         *\n         * 需要基础库： `1.6.0`\n         *\n         * 获取**全局唯一**的录音管理器 RecorderManager */",
    "detail": "function",
    "kind": 9
  },
  "wx.request": {
    "prefix": "wx.request",
    "body": [
      "wx.request({",
      "  url: '${1:url}',",
      "})"
    ],
    "description": "/** [[RequestTask](https://developers.weixin.qq.com/minigame/dev/api/network/request/RequestTask.html) wx.request(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/request/wx.request.html)\n*\n* 发起 HTTPS 网络请求。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。\n*\n* **data 参数说明**\n*\n* 最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String 。转换规则如下：\n* - 对于 `GET` 方法的数据，会将数据转换成 query string（`encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...`）\n* - 对于 `POST` 方法且 `header['content-type']` 为 `application/json` 的数据，会对数据进行 JSON 序列化\n* - 对于 `POST` 方法且 `header['content-type']` 为 `application/x-www-form-urlencoded` 的数据，会将数据转换成 query string `（encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...）`\n*\n* **示例代码**\n*\n* ```js\nwx.request({\n  url: 'example.php', //仅为示例，并非真实的接口地址\n  data: {\n    x: '',\n    y: ''\n  },\n  header: {\n    'content-type': 'application/json' // 默认值\n  },\n  success (res) {\n    console.log(res.data)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.createRewardedVideoAd": {
    "prefix": "wx.createRewardedVideoAd",
    "body": [
      "wx.createRewardedVideoAd({",
      "  adUnitId: '${1:adUnitId}',",
      "})"
    ],
    "description": "/** [[RewardedVideoAd](https://developers.weixin.qq.com/minigame/dev/api/ad/RewardedVideoAd.html) wx.createRewardedVideoAd(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createRewardedVideoAd.html)\n         *\n         * 需要基础库： `2.0.4`\n         *\n         * 创建激励视频广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号后再使用该 API（小游戏端要求 >= 2.0.4， 小程序端要求 >= 2.6.0）。调用该方法创建的激励视频广告是一个单例（小游戏端是全局单例，小程序端是页面内单例，在小程序端的单例对象不允许跨页面使用）。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.connectSocket": {
    "prefix": "wx.connectSocket",
    "body": [
      "wx.connectSocket({",
      "  url: '${1:url}',",
      "})"
    ],
    "description": "/** [[SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) wx.connectSocket(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.connectSocket.html)\n*\n* @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n*\n* 创建一个 WebSocket 连接。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。\n*\n* **并发数**\n*\n* - 1.7.0 及以上版本，最多可以同时存在 5 个 WebSocket 连接。\n* - 1.7.0 以下版本，一个小程序同时只能有一个 WebSocket 连接，如果当前已存在一个 WebSocket 连接，会自动关闭该连接，并重新创建一个 WebSocket 连接。\n*\n* **示例代码**\n*\n* ```js\nwx.connectSocket({\n  url: 'wss://example.qq.com',\n  header:{\n    'content-type': 'application/json'\n  },\n  protocols: ['protocol1']\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.createUDPSocket": {
    "prefix": "wx.createUDPSocket",
    "body": [
      "wx.createUDPSocket()"
    ],
    "description": "/** [[UDPSocket](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.html) wx.createUDPSocket()](https://developers.weixin.qq.com/minigame/dev/api/network/udp/wx.createUDPSocket.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 创建一个 UDP Socket 实例。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getUpdateManager": {
    "prefix": "wx.getUpdateManager",
    "body": [
      "wx.getUpdateManager()"
    ],
    "description": "/** [[UpdateManager](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.html) wx.getUpdateManager()](https://developers.weixin.qq.com/minigame/dev/api/base/update/wx.getUpdateManager.html)\n         *\n         * 需要基础库： `1.9.90`\n         *\n         * 获取**全局唯一**的版本更新管理器，用于管理小程序更新。关于小程序的更新机制，可以查看[运行机制](https://developers.weixin.qq.com/minigame/dev/guide/runtime/operating-mechanism.html)文档。\n         *\n         * **示例代码**\n         *\n         * [示例代码](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.html#示例代码) */",
    "detail": "function",
    "kind": 9
  },
  "wx.uploadFile": {
    "prefix": "wx.uploadFile",
    "body": [
      "wx.uploadFile({",
      "  filePath: '${1:filePath}',",
      "  name: '${2:name}',",
      "  url: '${3:url}',",
      "})"
    ],
    "description": "/** [[UploadTask](https://developers.weixin.qq.com/minigame/dev/api/network/upload/UploadTask.html) wx.uploadFile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/upload/wx.uploadFile.html)\n*\n* 将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 `content-type` 为 `multipart/form-data`。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/network.html)。\n*\n* **示例代码**\n*\n* ```js\nwx.chooseImage({\n  success (res) {\n    const tempFilePaths = res.tempFilePaths\n    wx.uploadFile({\n      url: 'https://example.weixin.qq.com/upload', //仅为示例，非真实的接口地址\n      filePath: tempFilePaths[0],\n      name: 'file',\n      formData: {\n        'user': 'test'\n      },\n      success (res){\n        const data = res.data\n        //do something\n      }\n    })\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getUserCryptoManager": {
    "prefix": "wx.getUserCryptoManager",
    "body": [
      "wx.getUserCryptoManager()"
    ],
    "description": "/** [[UserCryptoManager](https://developers.weixin.qq.com/minigame/dev/api/base/crypto/UserCryptoManager.html) wx.getUserCryptoManager()](https://developers.weixin.qq.com/minigame/dev/api/base/crypto/wx.getUserCryptoManager.html)\n         *\n         * 需要基础库： `2.17.3`\n         *\n         * 获取用户加密模块 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createUserInfoButton": {
    "prefix": "wx.createUserInfoButton",
    "body": [
      "wx.createUserInfoButton({",
      "  style: {",
      "    backgroundColor: '${1:backgroundColor}',",
      "    borderColor: '${2:borderColor}',",
      "    borderRadius: ${3:0},",
      "    borderWidth: ${4:0},",
      "    color: '${5:color}',",
      "    fontSize: ${6:0},",
      "    height: ${7:0},",
      "    left: ${8:0},",
      "    lineHeight: ${9:0},",
      "    textAlign: ${10:textAlign},",
      "    top: ${11:0},",
      "    width: ${12:0},",
      "  },",
      "  type: ${14:type},",
      "})"
    ],
    "description": "/** [[UserInfoButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/UserInfoButton.html) wx.createUserInfoButton(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/wx.createUserInfoButton.html)\n         *\n         * 需要基础库： `2.0.1`\n         *\n         * 创建用户信息按钮 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createVideoDecoder": {
    "prefix": "wx.createVideoDecoder",
    "body": [
      "wx.createVideoDecoder()"
    ],
    "description": "/** [[VideoDecoder](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.html) wx.createVideoDecoder()](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/wx.createVideoDecoder.html)\n         *\n         * 需要基础库： `2.11.1`\n         *\n         * 创建视频解码器，可逐帧获取解码后的数据 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createVideo": {
    "prefix": "wx.createVideo",
    "body": [
      "wx.createVideo({",
      "  src: '${1:src}',",
      "})"
    ],
    "description": "/** [[Video](https://developers.weixin.qq.com/minigame/dev/api/media/video/Video.html) wx.createVideo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/video/wx.createVideo.html)\n         *\n         * 创建视频 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createWebAudioContext": {
    "prefix": "wx.createWebAudioContext",
    "body": [
      "wx.createWebAudioContext()"
    ],
    "description": "/** [[WebAudioContext](https://developers.weixin.qq.com/minigame/dev/api/media/audio/WebAudioContext.html) wx.createWebAudioContext()](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.createWebAudioContext.html)\n         *\n         * 需要基础库： `2.19.0`\n         *\n         * 创建 WebAudio 上下文。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createWorker": {
    "prefix": "wx.createWorker",
    "body": [
      "wx.createWorker('${1:scriptPath}')"
    ],
    "description": "/** [[Worker](https://developers.weixin.qq.com/minigame/dev/api/worker/Worker.html) wx.createWorker(string scriptPath, object options)](https://developers.weixin.qq.com/minigame/dev/api/worker/wx.createWorker.html)\n*\n* 需要基础库： `1.9.90`\n*\n* 创建一个 Worker 线程\n*\n* **示例代码**\n*\n* ```js\n// 创建普通worker\nwx.createWorker('workers/index.js')\n```\n* ```js\nfunction createNewWorker() {\n  const worker = wx.createWorker('workers/index.js', {\n    useExperimentalWorker: true\n  })\n  // 监听worker被系统回收事件\n  worker.onProcessKilled(() => {\n    // 重新创建一个worker\n    createNewWorker()\n  })\n}\n// 创建实验worker\ncreateNewWorker()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getStorageSync": {
    "prefix": "wx.getStorageSync",
    "body": [
      "wx.getStorageSync('${1:key}')"
    ],
    "description": "/** [any wx.getStorageSync(string key)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorageSync.html)\n*\n* 从本地缓存中同步获取指定 key 的内容。\n*\n* **注意**\n*\n* storage 应只用来进行数据的持久化存储，不应用于运行时的数据传递或全局状态管理。启动过程中过多的同步读写存储，会显著影响启动耗时。\n*\n* **示例代码**\n*\n* ```js\ntry {\n  var value = wx.getStorageSync('key')\n  if (value) {\n    // Do something with return value\n  }\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.setCursor": {
    "prefix": "wx.setCursor",
    "body": [
      "wx.setCursor('${1:path}', ${2:0}, ${3:0})"
    ],
    "description": "/** [boolean wx.setCursor(string path, number x, number y)](https://developers.weixin.qq.com/minigame/dev/api/render/cursor/wx.setCursor.html)\n         *\n         * 需要基础库： `2.10.1`\n         *\n         * 加载自定义光标，仅支持 PC 平台\n         *\n         * **注意**\n         *\n         * - 传入图片太大可能会导致设置无效，推荐图标大小 32x32\n         * - 基础库 v2.16.0 后，支持更多图片格式以及关键字种类（参考 CSS 标准） */",
    "detail": "function",
    "kind": 9
  },
  "wx.setMessageToFriendQuery": {
    "prefix": "wx.setMessageToFriendQuery",
    "body": [
      "wx.setMessageToFriendQuery({",
      "  query: '${1:query}',",
      "  shareMessageToFriendScene: ${2:0},",
      "})"
    ],
    "description": "/** [boolean wx.setMessageToFriendQuery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.setMessageToFriendQuery.html)\n         *\n         * 设置 wx.shareMessageToFriend 接口 query 字段的值 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getTextLineHeight": {
    "prefix": "wx.getTextLineHeight",
    "body": [
      "wx.getTextLineHeight({",
      "  fontFamily: '${1:fontFamily}',",
      "  text: '${2:text}',",
      "})"
    ],
    "description": "/** [number wx.getTextLineHeight(Object object)](https://developers.weixin.qq.com/minigame/dev/api/render/font/wx.getTextLineHeight.html)\n         *\n         * 获取一行文本的行高 */",
    "detail": "function",
    "kind": 9
  },
  "wx.createBufferURL": {
    "prefix": "wx.createBufferURL",
    "body": [
      "wx.createBufferURL(${1:buffer})"
    ],
    "description": "/** [string wx.createBufferURL(ArrayBuffer|TypedArray buffer)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.createBufferURL.html)\n         *\n         * 需要基础库： `2.14.0`\n         *\n         * 根据传入的 buffer 创建一个唯一的 URL 存在内存中 */",
    "detail": "function",
    "kind": 9
  },
  "wx.decode": {
    "prefix": "wx.decode",
    "body": [
      "wx.decode({",
      "  data: ${1:data},",
      "})"
    ],
    "description": "/** [string wx.decode(Object object)](https://developers.weixin.qq.com/minigame/dev/api/util/wx.decode.html)\n         *\n         * 将 ArrayBuffer 按照指定的编码格式解码成字符串 */",
    "detail": "function",
    "kind": 9
  },
  "wx.loadFont": {
    "prefix": "wx.loadFont",
    "body": [
      "wx.loadFont('${1:path}')"
    ],
    "description": "/** [string wx.loadFont(string path)](https://developers.weixin.qq.com/minigame/dev/api/render/font/wx.loadFont.html)\n         *\n         * 加载自定义字体文件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.addCard": {
    "prefix": "wx.addCard",
    "body": [
      "wx.addCard({",
      "  cardList: [$1],",
      "})"
    ],
    "description": "/** [wx.addCard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/card/wx.addCard.html)\n*\n* 需要基础库： `2.5.0`\n*\n* 批量添加卡券。只有通过 [认证](https://developers.weixin.qq.com/miniprogram/product/renzheng.html) 的小程序或文化互动类目的小游戏才能使用。更多文档请参考 [微信卡券接口文档](https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&key=1490190158&version=1&lang=zh_CN&platform=2)。\n*\n* **cardExt 说明**\n*\n* cardExt 是卡券的扩展参数，其值是一个 JSON 字符串。\n*\n* **示例代码**\n*\n* ```js\nwx.addCard({\n  cardList: [\n    {\n      cardId: '',\n      cardExt: '{\"code\": \"\", \"openid\": \"\", \"timestamp\": \"\", \"signature\":\"\"}'\n    }, {\n      cardId: '',\n      cardExt: '{\"code\": \"\", \"openid\": \"\", \"timestamp\": \"\", \"signature\":\"\"}'\n    }\n  ],\n  success (res) {\n    console.log(res.cardList) // 卡券添加结果\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.authPrivateMessage": {
    "prefix": "wx.authPrivateMessage",
    "body": [
      "wx.authPrivateMessage({",
      "  shareTicket: '${1:shareTicket}',",
      "})"
    ],
    "description": "/** [wx.authPrivateMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.authPrivateMessage.html)\n*\n* 需要基础库： `2.13.0`\n*\n* 验证私密消息。用法详情见 [小程序私密消息使用指南](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/share/private-message.html)\n*\n* **示例代码**\n*\n* ```js\nwx.authPrivateMessage({\n  shareTicket: 'xxxxxx',\n  success(res) {\n    console.log('authPrivateMessage success', res)\n    // res\n    // {\n    //   errMsg: 'authPrivateMessage:ok'\n    //   valid: true\n    //   iv: 'xxxx',\n    //   encryptedData: 'xxxxxx'\n    // }\n  },\n  fail(res) {\n    console.log('authPrivateMessage fail', res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.authorize": {
    "prefix": "wx.authorize",
    "body": [
      "wx.authorize({",
      "  scope: '${1:scope}',",
      "})"
    ],
    "description": "/** [wx.authorize(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/authorize/wx.authorize.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 提前向用户发起授权请求。调用后会立刻弹窗询问用户是否同意授权小程序使用某项功能或获取用户的某些数据，但不会实际调用对应接口。如果用户之前已经同意授权，则不会出现弹窗，直接返回成功。更多用法详见 [用户授权](https://developers.weixin.qq.com/minigame/dev/guide/framework/authorize.html)。\n*\n* **注意事项**\n*\n* - 小游戏内使用 `wx.authorize({scope: \"scope.userInfo\"})`，不会弹出授权窗口，请使用 [wx.createUserInfoButton](https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/wx.createUserInfoButton.html)\n* - 需要授权 `scope.userLocation` 时必须[配置地理位置用途说明](https://developers.weixin.qq.com/minigame/dev/reference/configuration/app.html#permission)。\n*\n* **示例代码**\n*\n* ```js\n// 可以通过 wx.getSetting 先查询一下用户是否授权了 \"scope.record\" 这个 scope\nwx.getSetting({\n  success(res) {\n    if (!res.authSetting['scope.record']) {\n      wx.authorize({\n        scope: 'scope.record',\n        success () {\n          // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问\n          wx.startRecord()\n        }\n      })\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.checkHandoffEnabled": {
    "prefix": "wx.checkHandoffEnabled",
    "body": [
      "wx.checkHandoffEnabled()"
    ],
    "description": "/** [wx.checkHandoffEnabled(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.checkHandoffEnabled.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 检查是否可以进行接力，该接口需要在开放数据域调用 */",
    "detail": "function",
    "kind": 9
  },
  "wx.checkIsAddedToMyMiniProgram": {
    "prefix": "wx.checkIsAddedToMyMiniProgram",
    "body": [
      "wx.checkIsAddedToMyMiniProgram()"
    ],
    "description": "/** [wx.checkIsAddedToMyMiniProgram(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/my-miniprogram/wx.checkIsAddedToMyMiniProgram.html)\n         *\n         * 需要基础库： `2.30.3`\n         *\n         * 检查小程序是否被添加至 「我的小程序」 */",
    "detail": "function",
    "kind": 9
  },
  "wx.checkSession": {
    "prefix": "wx.checkSession",
    "body": [
      "wx.checkSession()"
    ],
    "description": "/** [wx.checkSession(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/login/wx.checkSession.html)\n*\n* 检查登录态是否过期。\n* 通过 wx.login 接口获得的用户登录态拥有一定的时效性。用户越久未使用小程序，用户登录态越有可能失效。反之如果用户一直在使用小程序，则用户登录态一直保持有效。具体时效逻辑由微信维护，对开发者透明。开发者只需要调用 wx.checkSession 接口检测当前用户登录态是否有效。\n*\n* 登录态过期后开发者可以再调用 wx.login 获取新的用户登录态。调用成功说明当前 session_key 未过期，调用失败说明 session_key 已过期。\n*\n* **示例代码**\n*\n* ```js\nwx.checkSession({\n  success () {\n    //session_key 未过期，并且在本生命周期一直有效\n  },\n  fail () {\n    // session_key 已经失效，需要重新执行登录流程\n    wx.login() //重新登录\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.chooseImage": {
    "prefix": "wx.chooseImage",
    "body": [
      "wx.chooseImage()"
    ],
    "description": "/** [wx.chooseImage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.chooseImage.html)\n*\n* @deprecated 基础库版本 [2.21.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃，请使用 [wx.chooseMedia](https://developers.weixin.qq.com/minigame/dev/api/media/video/wx.chooseMedia.html) 替换\n*\n* 从本地相册选择图片或使用相机拍照。\n*\n* ****\n*\n* ```js\nwx.chooseImage({\n  count: 1,\n  sizeType: ['original', 'compressed'],\n  sourceType: ['album', 'camera'],\n  success (res) {\n    // tempFilePath可以作为img标签的src属性显示图片\n    const tempFilePaths = res.tempFilePaths\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.chooseMedia": {
    "prefix": "wx.chooseMedia",
    "body": [
      "wx.chooseMedia()"
    ],
    "description": "/** [wx.chooseMedia(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/video/wx.chooseMedia.html)\n*\n* 需要基础库： `2.23.0`\n*\n* 拍摄或从手机相册中选择图片或视频。\n*\n* **示例代码**\n*\n* ```js\nwx.chooseMedia({\n  count: 9,\n  mediaType: ['image','video'],\n  sourceType: ['album', 'camera'],\n  maxDuration: 30,\n  camera: 'back',\n  success(res) {\n    console.log(res.tempFiles.tempFilePath)\n    console.log(res.tempFiles.size)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.chooseMessageFile": {
    "prefix": "wx.chooseMessageFile",
    "body": [
      "wx.chooseMessageFile({",
      "  count: ${1:0},",
      "})"
    ],
    "description": "/** [wx.chooseMessageFile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.chooseMessageFile.html)\n*\n* 需要基础库： `2.23.0`\n*\n* 从客户端会话选择文件。\n*\n* ****\n*\n* ```js\nwx.chooseMessageFile({\n  count: 10,\n  type: 'image',\n  success (res) {\n    // tempFilePath可以作为img标签的src属性显示图片\n    const tempFilePaths = res.tempFiles\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.clearStorage": {
    "prefix": "wx.clearStorage",
    "body": [
      "wx.clearStorage()"
    ],
    "description": "/** [wx.clearStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.clearStorage.html)\n*\n* 清理本地数据缓存。\n*\n* **示例代码**\n*\n* ```js\nwx.clearStorage()\n```\n*\n* ```js\ntry {\n  wx.clearStorageSync()\n} catch(e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.clearStorageSync": {
    "prefix": "wx.clearStorageSync",
    "body": [
      "wx.clearStorageSync()"
    ],
    "description": "/** [wx.clearStorageSync()](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.clearStorageSync.html)\n*\n* [wx.clearStorage](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.clearStorage.html) 的同步版本\n*\n* **示例代码**\n*\n* ```js\nwx.clearStorage()\n```\n*\n* ```js\ntry {\n  wx.clearStorageSync()\n} catch(e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.closeBLEConnection": {
    "prefix": "wx.closeBLEConnection",
    "body": [
      "wx.closeBLEConnection({",
      "  deviceId: '${1:deviceId}',",
      "})"
    ],
    "description": "/** [wx.closeBLEConnection(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.closeBLEConnection.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 断开与蓝牙低功耗设备的连接。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.closeBLEConnection({\n  deviceId,\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.closeBluetoothAdapter": {
    "prefix": "wx.closeBluetoothAdapter",
    "body": [
      "wx.closeBluetoothAdapter()"
    ],
    "description": "/** [wx.closeBluetoothAdapter(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.closeBluetoothAdapter.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 关闭蓝牙模块。调用该方法将断开所有已建立的连接并释放系统资源。建议在使用蓝牙流程后，与 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 成对调用。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.closeBluetoothAdapter({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.closeSocket": {
    "prefix": "wx.closeSocket",
    "body": [
      "wx.closeSocket()"
    ],
    "description": "/** [wx.closeSocket(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.closeSocket.html)\n*\n* @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n*\n* 关闭 WebSocket 连接。\n*\n* **示例代码**\n*\n* ```js\nwx.connectSocket({\n  url: 'test.php'\n})\n\n//注意这里有时序问题，\n//如果 wx.connectSocket 还没回调 wx.onSocketOpen，而先调用 wx.closeSocket，那么就做不到关闭 WebSocket 的目的。\n//必须在 WebSocket 打开期间调用 wx.closeSocket 才能关闭。\nwx.onSocketOpen(function() {\n  wx.closeSocket()\n})\n\nwx.onSocketClose(function(res) {\n  console.log('WebSocket 已关闭！')\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.createBLEConnection": {
    "prefix": "wx.createBLEConnection",
    "body": [
      "wx.createBLEConnection({",
      "  deviceId: '${1:deviceId}',",
      "})"
    ],
    "description": "/** [wx.createBLEConnection(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 连接蓝牙低功耗设备。\n*\n* 若小程序在之前已有搜索过某个蓝牙设备，并成功建立连接，可直接传入之前搜索获取的 deviceId 直接尝试连接该设备，无需再次进行搜索操作。\n*\n* **注意**\n*\n* - 请保证尽量成对的调用 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 和 [wx.closeBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.closeBLEConnection.html) 接口。安卓如果重复调用 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 创建连接，有可能导致系统持有同一设备多个连接的实例，导致调用 `closeBLEConnection` 的时候并不能真正的断开与设备的连接。\n* - 蓝牙连接随时可能断开，建议监听 [wx.onBLEConnectionStateChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLEConnectionStateChange.html) 回调事件，当蓝牙设备断开时按需执行重连操作\n* - 若对未连接的设备或已断开连接的设备调用数据读写操作的接口，会返回 10006 错误，建议进行重连操作。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.createBLEConnection({\n  deviceId,\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.createBLEPeripheralServer": {
    "prefix": "wx.createBLEPeripheralServer",
    "body": [
      "wx.createBLEPeripheralServer()"
    ],
    "description": "/** [wx.createBLEPeripheralServer(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/wx.createBLEPeripheralServer.html)\n         *\n         * 需要基础库： `2.10.3`\n         *\n         * 建立本地作为蓝牙低功耗外围设备的服务端，可创建多个。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.exitMiniProgram": {
    "prefix": "wx.exitMiniProgram",
    "body": [
      "wx.exitMiniProgram()"
    ],
    "description": "/** [wx.exitMiniProgram(Object object)](https://developers.weixin.qq.com/minigame/dev/api/navigate/wx.exitMiniProgram.html)\n         *\n         * 需要基础库： `2.17.3`\n         *\n         * 退出当前小程序。必须有点击行为才能调用成功。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.exitVoIPChat": {
    "prefix": "wx.exitVoIPChat",
    "body": [
      "wx.exitVoIPChat()"
    ],
    "description": "/** [wx.exitVoIPChat(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.exitVoIPChat.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 退出（销毁）实时语音通话 */",
    "detail": "function",
    "kind": 9
  },
  "wx.faceDetect": {
    "prefix": "wx.faceDetect",
    "body": [
      "wx.faceDetect({",
      "  frameBuffer: ${1:frameBuffer},",
      "  height: ${2:0},",
      "  width: ${3:0},",
      "})"
    ],
    "description": "/** [wx.faceDetect(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/face/wx.faceDetect.html)\n         *\n         * 需要基础库： `2.18.0`\n         *\n         * @warning **该接口已停止维护，推荐使用 [wx.createVKSession](#) 代替**\n         *\n         * 人脸检测，使用前需要通过 wx.initFaceDetect 进行一次初始化，推荐使用相机接口返回的帧数据。本接口不再维护，请使用 [wx.createVKSession](#) 接口代替。详情参考[人脸检测指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/visionkit/face.html)\n         *\n         * ****\n         *\n         * ### 特别说明\n         * 若小程序人脸识别功能涉及采集、存储用户生物特征（如人脸照片或视频、身份证和手持身份证、身份证照和免冠照等），此类型服务需使用[微信原生人脸识别接口](https://developers.weixin.qq.com/community/develop/doc/000442d352c1202bd498ecb105c00d?highline=%E4%BA%BA%E8%84%B8%E6%A0%B8%E8%BA%AB)。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getAvailableAudioSources": {
    "prefix": "wx.getAvailableAudioSources",
    "body": [
      "wx.getAvailableAudioSources()"
    ],
    "description": "/** [wx.getAvailableAudioSources(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.getAvailableAudioSources.html)\n         *\n         * 需要基础库： `2.1.0`\n         *\n         * 获取当前支持的音频输入源 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getBLEDeviceCharacteristics": {
    "prefix": "wx.getBLEDeviceCharacteristics",
    "body": [
      "wx.getBLEDeviceCharacteristics({",
      "  deviceId: '${1:deviceId}',",
      "  serviceId: '${2:serviceId}',",
      "})"
    ],
    "description": "/** [wx.getBLEDeviceCharacteristics(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.getBLEDeviceCharacteristics.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 获取蓝牙低功耗设备某个服务中所有特征 (characteristic)。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEDeviceCharacteristics({\n  // 这里的 deviceId 需要已经通过 wx.createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 wx.getBLEDeviceServices 接口中获取\n  serviceId,\n  success (res) {\n    console.log('device getBLEDeviceCharacteristics:', res.characteristics)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getBLEDeviceRSSI": {
    "prefix": "wx.getBLEDeviceRSSI",
    "body": [
      "wx.getBLEDeviceRSSI({",
      "  deviceId: '${1:deviceId}',",
      "})"
    ],
    "description": "/** [wx.getBLEDeviceRSSI(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.getBLEDeviceRSSI.html)\n         *\n         * 需要基础库： `2.11.0`\n         *\n         * 获取蓝牙低功耗设备的信号强度 (Received Signal Strength Indication, RSSI)。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getBLEDeviceServices": {
    "prefix": "wx.getBLEDeviceServices",
    "body": [
      "wx.getBLEDeviceServices({",
      "  deviceId: '${1:deviceId}',",
      "})"
    ],
    "description": "/** [wx.getBLEDeviceServices(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.getBLEDeviceServices.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 获取蓝牙低功耗设备所有服务 (service)。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEDeviceServices({\n  // 这里的 deviceId 需要已经通过 wx.createBLEConnection 与对应设备建立连接\n  deviceId,\n  success (res) {\n    console.log('device services:', res.services)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getBLEMTU": {
    "prefix": "wx.getBLEMTU",
    "body": [
      "wx.getBLEMTU({",
      "  deviceId: '${1:deviceId}',",
      "})"
    ],
    "description": "/** [wx.getBLEMTU(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.getBLEMTU.html)\n*\n* 需要基础库： `2.20.1`\n*\n* 获取蓝牙低功耗的最大传输单元。需在 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 调用成功后调用。\n*\n* **注意**\n*\n* - 小程序中 MTU 为 ATT_MTU，包含 Op-Code 和 Attribute Handle 的长度，实际可以传输的数据长度为 `ATT_MTU - 3`\n* - iOS 系统中 MTU 为固定值；安卓系统中，MTU 会在系统协商成功之后发生改变，建议使用 [wx.onBLEMTUChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLEMTUChange.html) 监听。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEMTU({\n  deviceId: '',\n  writeType: 'write',\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getBatteryInfo": {
    "prefix": "wx.getBatteryInfo",
    "body": [
      "wx.getBatteryInfo()"
    ],
    "description": "/** [wx.getBatteryInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/battery/wx.getBatteryInfo.html)\n         *\n         * 获取设备电量。同步 API [wx.getBatteryInfoSync](https://developers.weixin.qq.com/minigame/dev/api/device/battery/wx.getBatteryInfoSync.html) 在 iOS 上不可用。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getBeacons": {
    "prefix": "wx.getBeacons",
    "body": [
      "wx.getBeacons()"
    ],
    "description": "/** [wx.getBeacons(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.getBeacons.html)\n         *\n         * 需要基础库： `2.9.2`\n         *\n         * 获取所有已搜索到的 Beacon 设备 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getBluetoothAdapterState": {
    "prefix": "wx.getBluetoothAdapterState",
    "body": [
      "wx.getBluetoothAdapterState()"
    ],
    "description": "/** [wx.getBluetoothAdapterState(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.getBluetoothAdapterState.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 获取本机蓝牙适配器状态。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBluetoothAdapterState({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getBluetoothDevices": {
    "prefix": "wx.getBluetoothDevices",
    "body": [
      "wx.getBluetoothDevices()"
    ],
    "description": "/** [wx.getBluetoothDevices(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.getBluetoothDevices.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 获取在蓝牙模块生效期间所有搜索到的蓝牙设备。包括已经和本机处于连接状态的设备。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进度字符串示例\nfunction ab2hex(buffer) {\n  var hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.getBluetoothDevices({\n  success: function (res) {\n    console.log(res)\n    if (res.devices[0]) {\n      console.log(ab2hex(res.devices[0].advertisData))\n    }\n  }\n})\n```\n*\n* **注意**\n*\n* - 该接口获取到的设备列表为**蓝牙模块生效期间所有搜索到的蓝牙设备**，若在蓝牙模块使用流程结束后未及时调用 [wx.closeBluetoothAdapter](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.closeBluetoothAdapter.html) 释放资源，会存在调用该接口会返回之前的蓝牙使用流程中搜索到的蓝牙设备，可能设备已经不在用户身边，无法连接。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getChannelsLiveInfo": {
    "prefix": "wx.getChannelsLiveInfo",
    "body": [
      "wx.getChannelsLiveInfo({",
      "  finderUserName: '${1:finderUserName}',",
      "})"
    ],
    "description": "/** [wx.getChannelsLiveInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.getChannelsLiveInfo.html)\n         *\n         * 需要基础库： `2.15.0`\n         *\n         * 获取视频号直播信息 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getChannelsLiveNoticeInfo": {
    "prefix": "wx.getChannelsLiveNoticeInfo",
    "body": [
      "wx.getChannelsLiveNoticeInfo({",
      "  finderUserName: '${1:finderUserName}',",
      "})"
    ],
    "description": "/** [wx.getChannelsLiveNoticeInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.getChannelsLiveNoticeInfo.html)\n         *\n         * 需要基础库： `2.19.0`\n         *\n         * 获取视频号直播预告信息 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getClipboardData": {
    "prefix": "wx.getClipboardData",
    "body": [
      "wx.getClipboardData()"
    ],
    "description": "/** [wx.getClipboardData(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/clipboard/wx.getClipboardData.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 获取系统剪贴板的内容\n*\n* **示例代码**\n*\n* ```js\nwx.getClipboardData({\n  success (res){\n    console.log(res.data)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getConnectedBluetoothDevices": {
    "prefix": "wx.getConnectedBluetoothDevices",
    "body": [
      "wx.getConnectedBluetoothDevices({",
      "  services: [$1],",
      "})"
    ],
    "description": "/** [wx.getConnectedBluetoothDevices(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.getConnectedBluetoothDevices.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 根据主服务 UUID 获取已连接的蓝牙设备。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getConnectedBluetoothDevices({\n  services: ['FEE7'],\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getExtConfig": {
    "prefix": "wx.getExtConfig",
    "body": [
      "wx.getExtConfig()"
    ],
    "description": "/** [wx.getExtConfig(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfig.html)\n*\n* 需要基础库： `2.8.3`\n*\n* 获取[第三方平台](https://developers.weixin.qq.com/minigame/dev/devtools/ext.html)自定义的数据字段。\n*\n* **Tips**\n*\n* 1. 本接口暂时无法通过 [wx.canIUse](#) 判断是否兼容，开发者需要自行判断 [wx.getExtConfig](https://developers.weixin.qq.com/minigame/dev/api/ext/wx.getExtConfig.html) 是否存在来兼容\n*\n* ****\n*\n* ```js\nif (wx.getExtConfig) {\n  wx.getExtConfig({\n    success (res) {\n      console.log(res.extConfig)\n    }\n  })\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getFriendCloudStorage": {
    "prefix": "wx.getFriendCloudStorage",
    "body": [
      "wx.getFriendCloudStorage({",
      "  keyList: [$1],",
      "})"
    ],
    "description": "/** [wx.getFriendCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getFriendCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 拉取当前用户所有同玩好友的托管数据。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getFuzzyLocation": {
    "prefix": "wx.getFuzzyLocation",
    "body": [
      "wx.getFuzzyLocation()"
    ],
    "description": "/** [wx.getFuzzyLocation(Object object)](https://developers.weixin.qq.com/minigame/dev/api/location/wx.getFuzzyLocation.html)\n*\n* 需要基础库： `2.25.0`\n*\n* 获取当前的模糊地理位置。\n*  ## 使用方法\n*  自 2022 年 7 月 14 日后发布的小程序，若使用该接口，需要在 app.json 中进行声明，否则将无法正常使用该接口，2022年7月14日前发布的小程序不受影响。[具体规则见公告](https://developers.weixin.qq.com/community/develop/doc/000a02f2c5026891650e7f40351c01)\n*  ## 申请开通\n*  暂只针对具备与地理位置强相关的使用场景的小程序开放，在小程序管理后台，「开发」-「开发管理」-「接口设置」中自助开通该接口权限。 从2022年7月14日开始在代码审核环节将检测该接口是否已完成开通，如未开通，将在代码提审环节进行拦截。\n*\n* **示例代码**\n*\n*  ```js\n wx.getFuzzyLocation({\n  type: 'wgs84',\n  success (res) {\n    const latitude = res.latitude\n    const longitude = res.longitude\n  }\n})\n ``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getGameClubData": {
    "prefix": "wx.getGameClubData",
    "body": [
      "wx.getGameClubData({",
      "  dataTypeList: [$1],",
      "})"
    ],
    "description": "/** [wx.getGameClubData(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/game-club/wx.getGameClubData.html)\n         *\n         * 需要基础库： `2.25.4`\n         *\n         * 获取游戏圈数据。\n         *\n         * **type说明**\n         *\n         * | type取值 | 说明                                   | subKey  | GameClubDataByType.value |\n         * | ------- | -------------------------------------- | -------- | -------- |\n         * | 1   | 加入该游戏圈时间                            | 无需传入 | 秒级Unix时间戳 |\n         * | 3   | 用户禁言状态                                | 无需传入  | 0：正常 1：禁言  |\n         * | 4   | 当天(自然日)点赞贴子数                       | 无需传入  |  |\n         * | 5   | 当天(自然日)评论贴子数                        | 无需传入  |  |\n         * | 6   | 当天(自然日)发表贴子数                       | 无需传入  |  |\n         * | 7   | 当天(自然日)发表视频贴子数                    | 无需传入  |  |\n         * | 8   | 当天(自然日)赞官方贴子数                      | 无需传入  |  |\n         * | 9   | 当天(自然日)评论官方贴子数                     | 无需传入  |  |\n         * | 10   | 当天(自然日)发表到本圈子话题的贴子数           | 传入话题id，从mp-游戏圈话题管理处获取  |  |\n         *\n         * **encryptedData 解密后得到的 GameClubData 的结构**\n         *\n         * | 属性 | 类型 | 说明                                   |\n         * | ------- | ------- | -------------------------------------- |\n         * |  dataList   | Array<GameClubDataByType> | 游戏圈相关数据的对象数组           |\n         *\n         * **GameClubDataByType 的结构**\n         *\n         * | 属性 | 类型 | 说明                                   |\n         * | ------- |------- |  -------------------------------------- |\n         * |  dataType   | number | 与输入的 dataType 一致          |\n         * |  value   | number | 不同type返回的value含义不同，见type表格说明           | */",
    "detail": "function",
    "kind": 9
  },
  "wx.getGroupCloudStorage": {
    "prefix": "wx.getGroupCloudStorage",
    "body": [
      "wx.getGroupCloudStorage({",
      "  keyList: [$1],",
      "  shareTicket: '${2:shareTicket}',",
      "})"
    ],
    "description": "/** [wx.getGroupCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getGroupCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 获取群同玩成员的游戏数据。小游戏通过群分享卡片打开的情况下才可以调用。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getGroupEnterInfo": {
    "prefix": "wx.getGroupEnterInfo",
    "body": [
      "wx.getGroupEnterInfo()"
    ],
    "description": "/** [wx.getGroupEnterInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/group/wx.getGroupEnterInfo.html)\n*\n* 需要基础库： `2.10.4`\n*\n* 获取微信群聊场景下的小程序启动信息。群聊场景包括群聊小程序消息卡片、群待办、群工具。可用于获取当前群的 opengid。\n* ## 注意事项\n*  - 基础库 v2.10.4 开始支持获取群工具小程序启动信息\n*  - 基础库 v2.17.3 开始支持获取群聊小程序消息卡片、群待办小程序启动信息\n*\n* **示例代码**\n*\n* ```js\nwx.getGroupEnterInfo({\n  success(res) {\n    // res\n    {\n      errMsg: 'getGroupEnterInfo:ok',\n      encryptedData: '',\n      iv: ''\n    }\n  },\n  fail() {\n\n  }\n})\n```\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法) 。\n* 获取得到的开放数据为以下 json 结构（其中 opengid 为当前群的唯一标识）：\n*\n* ```json\n{\n \"opengid\": \"OPENGID\"\n}\n```\n*\n* **Tips**\n*\n* - 如需要展示群名称，小程序可以使用[开放数据组件](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/open-data.html)\n* - 小游戏可以通过 `wx.getGroupInfo` 接口获取群名称 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getGroupInfo": {
    "prefix": "wx.getGroupInfo",
    "body": [
      "wx.getGroupInfo({",
      "  openGId: '${1:openGId}',",
      "})"
    ],
    "description": "/** [wx.getGroupInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getGroupInfo.html)\n         *\n         * 需要基础库： `2.10.1`\n         *\n         * 获取群信息。小游戏通过群分享卡片打开的情况下才可以调用。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getInferenceEnvInfo": {
    "prefix": "wx.getInferenceEnvInfo",
    "body": [
      "wx.getInferenceEnvInfo()"
    ],
    "description": "/** [wx.getInferenceEnvInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/inference/wx.getInferenceEnvInfo.html)\n*\n* 需要基础库： `2.30.1`\n*\n* 获取通用AI推理引擎版本。使用前可参考[AI指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/inference/tutorial.html)\n*\n* **示例代码**\n*\n* ```js\n// 获取通用AI推理引擎版本\nwx.getInferenceEnvInfo({\n      complete: (res) => {\n        console.log(res.ver)\n        console.log(res.errMsg)\n      },\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getLocalIPAddress": {
    "prefix": "wx.getLocalIPAddress",
    "body": [
      "wx.getLocalIPAddress()"
    ],
    "description": "/** [wx.getLocalIPAddress(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.getLocalIPAddress.html)\n*\n* 需要基础库： `2.20.1`\n*\n* 获取局域网IP地址\n*\n* **示例代码**\n*\n* ```js\nwx.getLocalIPAddress({\n  success (res) {\n    const localip = res.localip\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getLocation": {
    "prefix": "wx.getLocation",
    "body": [
      "wx.getLocation()"
    ],
    "description": "/** [wx.getLocation(Object object)](https://developers.weixin.qq.com/minigame/dev/api/location/wx.getLocation.html)\n*\n* 获取当前的地理位置、速度。当用户离开小程序后，此接口无法调用。开启高精度定位，接口耗时会增加，可指定 highAccuracyExpireTime 作为超时时间。地图相关使用的坐标格式应为 gcj02。\n*  高频率调用会导致耗电，如有需要可使用持续定位接口 `wx.onLocationChange`。\n*  基础库 `2.17.0` 版本起 `wx.getLocation` 增加调用频率限制，[相关公告](https://developers.weixin.qq.com/community/develop/doc/000aee91a98d206bc6dbe722b51801)。\n*\n* **示例代码**\n*\n*  ```js\n wx.getLocation({\n  type: 'wgs84',\n  success (res) {\n    const latitude = res.latitude\n    const longitude = res.longitude\n    const speed = res.speed\n    const accuracy = res.accuracy\n  }\n})\n ```\n*\n* **注意**\n*\n* - `2.17.0 起 `wx.getLocation` 增加调用频率限制，[相关公告](https://developers.weixin.qq.com/community/develop/doc/000aee91a98d206bc6dbe722b51801)\n* - 工具中定位模拟使用IP定位，可能会有一定误差。且工具目前仅支持 gcj02 坐标。\n* - 使用第三方服务进行逆地址解析时，请确认第三方服务默认的坐标系，正确进行坐标转换。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getNetworkType": {
    "prefix": "wx.getNetworkType",
    "body": [
      "wx.getNetworkType()"
    ],
    "description": "/** [wx.getNetworkType(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.getNetworkType.html)\n*\n* 获取网络类型\n*\n* **示例代码**\n*\n* ```js\nwx.getNetworkType({\n  success (res) {\n    const networkType = res.networkType\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getPotentialFriendList": {
    "prefix": "wx.getPotentialFriendList",
    "body": [
      "wx.getPotentialFriendList()"
    ],
    "description": "/** [wx.getPotentialFriendList(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getPotentialFriendList.html)\n         *\n         * 需要基础库： `2.9.0`\n         *\n         * 获取可能对游戏感兴趣的未注册的好友名单。每次调用最多可获得 5 个好友。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getScreenBrightness": {
    "prefix": "wx.getScreenBrightness",
    "body": [
      "wx.getScreenBrightness()"
    ],
    "description": "/** [wx.getScreenBrightness(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/screen/wx.getScreenBrightness.html)\n         *\n         * 需要基础库： `1.2.0`\n         *\n         * 获取屏幕亮度\n         *\n         * **说明**\n         *\n         * - 若安卓系统设置中开启了自动调节亮度功能，则屏幕亮度会根据光线自动调整，该接口仅能获取自动调节亮度之前的值，而非实时的亮度值。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getSetting": {
    "prefix": "wx.getSetting",
    "body": [
      "wx.getSetting()"
    ],
    "description": "/** [wx.getSetting(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.getSetting.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 获取用户的当前设置。**返回值中只会出现小程序已经向用户请求过的[权限](https://developers.weixin.qq.com/minigame/dev/guide/framework/authorize.html)**。\n*\n* **示例代码**\n*\n* ```js\nwx.getSetting({\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n  }\n})\n```\n*\n* ```js\nwx.getSetting({\n  withSubscriptions: true,\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n    console.log(res.subscriptionsSetting)\n    // res.subscriptionsSetting = {\n    //   mainSwitch: true, // 订阅消息总开关\n    //   itemSettings: {   // 每一项开关\n    //     SYS_MSG_TYPE_INTERACTIVE: 'accept', // 小游戏系统订阅消息\n    //     SYS_MSG_TYPE_RANK: 'accept'\n    //     zun-LzcQyW-edafCVvzPkK4de2Rllr1fFpw2A_x0oXE: 'reject', // 普通一次性订阅消息\n    //     ke_OZC_66gZxALLcsuI7ilCJSP2OJ2vWo2ooUPpkWrw: 'ban',\n    //   }\n    // }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getShareInfo": {
    "prefix": "wx.getShareInfo",
    "body": [
      "wx.getShareInfo({",
      "  shareTicket: '${1:shareTicket}',",
      "})"
    ],
    "description": "/** [wx.getShareInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.getShareInfo.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 获取转发详细信息\n*\n* **示例代码**\n*\n* 敏感数据获取方式 [加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法) 。\n* 获取得到的开放数据为以下 json 结构（其中 openGId 为当前群的唯一标识）：\n*\n* ```json\n{\n \"openGId\": \"OPENGID\"\n}\n```\n*\n* **Tips**\n*\n* - 如需要展示群名称，小程序可以使用 [开放数据组件](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/open-data.html)\n* - 小游戏可以通过 [`wx.getGroupInfo`](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getGroupInfo.html) 接口获取群名称 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getStorage": {
    "prefix": "wx.getStorage",
    "body": [
      "wx.getStorage(${1:option})"
    ],
    "description": "/** [wx.getStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorage.html)\n*\n* 从本地缓存中异步获取指定 key 的内容。\n*\n* **示例代码**\n*\n* ```js\nwx.getStorage({\n  key: 'key',\n  success (res) {\n    console.log(res.data)\n  }\n})\n```\n*\n* ```js\n// 开启加密存储\nwx.setStorage({\n  key: \"key\",\n  data: \"value\",\n  encrypt: true, // 若开启加密存储，setStorage 和 getStorage 需要同时声明 encrypt 的值为 true\n  success() {\n    wx.getStorage({\n      key: \"key\",\n      encrypt: true, // 若开启加密存储，setStorage 和 getStorage 需要同时声明 encrypt 的值为 true\n      success(res) {\n        console.log(res.data)\n      }\n    })\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getStorageInfo": {
    "prefix": "wx.getStorageInfo",
    "body": [
      "wx.getStorageInfo()"
    ],
    "description": "/** [wx.getStorageInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.getStorageInfo.html)\n*\n* 异步获取当前storage的相关信息。\n*\n* **示例代码**\n*\n* ```js\nwx.getStorageInfo({\n  success (res) {\n    console.log(res.keys)\n    console.log(res.currentSize)\n    console.log(res.limitSize)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getStorageInfoSync()\n  console.log(res.keys)\n  console.log(res.currentSize)\n  console.log(res.limitSize)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getSystemInfo": {
    "prefix": "wx.getSystemInfo",
    "body": [
      "wx.getSystemInfo()"
    ],
    "description": "/** [wx.getSystemInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfo.html)\n*\n* 获取系统信息。**由于历史原因，wx.getSystemInfo 是异步的调用格式，但是是同步返回，需要异步获取系统信息请使用 [wx.getSystemInfoAsync](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoAsync.html)。**\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/WkUCgXmS7mqO)\n*\n* ```js\nwx.getSystemInfo({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getSystemInfoSync()\n  console.log(res.model)\n  console.log(res.pixelRatio)\n  console.log(res.windowWidth)\n  console.log(res.windowHeight)\n  console.log(res.language)\n  console.log(res.version)\n  console.log(res.platform)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getSystemInfoAsync": {
    "prefix": "wx.getSystemInfoAsync",
    "body": [
      "wx.getSystemInfoAsync()"
    ],
    "description": "/** [wx.getSystemInfoAsync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.getSystemInfoAsync.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 异步获取系统信息。需要一定的微信客户端版本支持，在不支持的客户端上，会使用同步实现来返回。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/WkUCgXmS7mqO)\n*\n* ```js\nwx.getSystemInfoAsync({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getUserCloudStorage": {
    "prefix": "wx.getUserCloudStorage",
    "body": [
      "wx.getUserCloudStorage({",
      "  keyList: [$1],",
      "})"
    ],
    "description": "/** [wx.getUserCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getUserCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 获取当前用户托管数据当中对应 key 的数据。该接口只可在开放数据域下使用 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getUserCloudStorageKeys": {
    "prefix": "wx.getUserCloudStorageKeys",
    "body": [
      "wx.getUserCloudStorageKeys()"
    ],
    "description": "/** [wx.getUserCloudStorageKeys(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getUserCloudStorageKeys.html)\n         *\n         * 需要基础库： `2.16.1`\n         *\n         * 获取当前用户托管数据当中所有的 key。该接口需要用户授权，且只在开放数据域下可用。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getUserInfo": {
    "prefix": "wx.getUserInfo",
    "body": [
      "wx.getUserInfo()"
    ],
    "description": "/** [wx.getUserInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/wx.getUserInfo.html)\n*\n* 获取用户信息。详情参考 [用户信息获取](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/user-info.html)\n*\n* **示例代码**\n*\n* ```js\n// 必须是在用户已经授权的情况下调用\nwx.getUserInfo({\n  success: function(res) {\n    var userInfo = res.userInfo\n    var nickName = userInfo.nickName\n    var avatarUrl = userInfo.avatarUrl\n    var gender = userInfo.gender //性别 0：未知、1：男、2：女\n    var province = userInfo.province\n    var city = userInfo.city\n    var country = userInfo.country\n  }\n})\n```\n*\n* 敏感数据有两种获取方式：\n* 1. 使用 [加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法)\n* 2. 使用 [云调用直接获取开放数据](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#云调用直接获取开放数据)\n* 获取得到的开放数据为以下 json 结构：\n*\n* ```json\n{\n  \"openId\": \"OPENID\",\n  \"nickName\": \"NICKNAME\",\n  \"gender\": GENDER,\n  \"city\": \"CITY\",\n  \"province\": \"PROVINCE\",\n  \"country\": \"COUNTRY\",\n  \"avatarUrl\": \"AVATARURL\",\n  \"unionId\": \"UNIONID\",\n  \"watermark\": {\n    \"appid\":\"APPID\",\n    \"timestamp\":TIMESTAMP\n  }\n}\n```\n*\n* **最佳用法**\n*\n* ```js\n// 通过 wx.getSetting 查询用户是否已授权头像昵称信息\nwx.getSetting({\n  success (res){\n    if (res.authSetting['scope.userInfo']) {\n      // 已经授权，可以直接调用 getUserInfo 获取头像昵称\n      wx.getUserInfo({\n        success: function(res) {\n          console.log(res.userInfo)\n        }\n      })\n    } else {\n      // 否则，先通过 wx.createUserInfoButton 接口发起授权\n      let button = wx.createUserInfoButton({\n        type: 'text',\n        text: '获取用户信息',\n        style: {\n          left: 10,\n          top: 76,\n          width: 200,\n          height: 40,\n          lineHeight: 40,\n          backgroundColor: '#ff0000',\n          color: '#ffffff',\n          textAlign: 'center',\n          fontSize: 16,\n          borderRadius: 4\n        }\n      })\n      button.onTap((res) => {\n        // 用户同意授权后回调，通过回调可获取用户头像昵称信息\n        console.log(res)\n      })\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.getUserInteractiveStorage": {
    "prefix": "wx.getUserInteractiveStorage",
    "body": [
      "wx.getUserInteractiveStorage({",
      "  keyList: [$1],",
      "})"
    ],
    "description": "/** [wx.getUserInteractiveStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.getUserInteractiveStorage.html)\n         *\n         * 需要基础库： `2.7.7`\n         *\n         * 获取当前用户互动型托管数据对应 key 的数据。该接口需要用户授权。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.getWeRunData": {
    "prefix": "wx.getWeRunData",
    "body": [
      "wx.getWeRunData()"
    ],
    "description": "/** [wx.getWeRunData(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/werun/wx.getWeRunData.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 获取用户过去三十一天微信运动步数。需要先调用 [wx.login](https://developers.weixin.qq.com/minigame/dev/api/open-api/login/wx.login.html) 接口。步数信息会在用户主动进入小程序时更新。\n*\n* **示例代码**\n*\n* ```js\nwx.getWeRunData({\n  success (res) {\n    // 拿 encryptedData 到开发者后台解密开放数据\n    const encryptedData = res.encryptedData\n    // 或拿 cloudID 通过云调用直接获取开放数据\n    const cloudID = res.cloudID\n  }\n})\n```\n*\n* **开放数据 JSON 结构**\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法) 。\n* 获取得到的开放数据为以下 json 结构：\n*\n* ```json\n{\n  \"stepInfoList\": [\n    {\n      \"timestamp\": 1445866601,\n      \"step\": 100\n    },\n    {\n      \"timestamp\": 1445876601,\n      \"step\": 120\n    }\n  ]\n}\n```\n*\n* stepInfoList 中，每一项结构如下：\n*\n* | 属性 | 类型 | 说明 |\n* | --- | ---- | --- |\n* | timestamp | number | 时间戳，表示数据对应的时间 |\n* | step | number | 微信运动步数 | */",
    "detail": "function",
    "kind": 9
  },
  "wx.hideKeyboard": {
    "prefix": "wx.hideKeyboard",
    "body": [
      "wx.hideKeyboard()"
    ],
    "description": "/** [wx.hideKeyboard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.hideKeyboard.html)\n         *\n         * 隐藏键盘 */",
    "detail": "function",
    "kind": 9
  },
  "wx.hideLoading": {
    "prefix": "wx.hideLoading",
    "body": [
      "wx.hideLoading()"
    ],
    "description": "/** [wx.hideLoading(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.hideLoading.html)\n         *\n         * 需要基础库： `1.1.0`\n         *\n         * 隐藏 loading 提示框 */",
    "detail": "function",
    "kind": 9
  },
  "wx.hideShareMenu": {
    "prefix": "wx.hideShareMenu",
    "body": [
      "wx.hideShareMenu()"
    ],
    "description": "/** [wx.hideShareMenu(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.hideShareMenu.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 隐藏当前页面的转发按钮\n*\n* ****\n*\n* ## 注意事项\n*  - \"shareAppMessage\"表示“发送给朋友”按钮，\"shareTimeline\"表示“分享到朋友圈”按钮\n*  - 隐藏“发送给朋友”按钮时必须同时隐藏“分享到朋友圈”按钮，隐藏“分享到朋友圈”按钮时则允许不隐藏“发送给朋友”按钮\n*\n* **示例代码**\n*\n* ```js\nwx.hideShareMenu({\n  menus: ['shareAppMessage', 'shareTimeline']\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.hideToast": {
    "prefix": "wx.hideToast",
    "body": [
      "wx.hideToast()"
    ],
    "description": "/** [wx.hideToast(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.hideToast.html)\n         *\n         * 隐藏消息提示框 */",
    "detail": "function",
    "kind": 9
  },
  "wx.initFaceDetect": {
    "prefix": "wx.initFaceDetect",
    "body": [
      "wx.initFaceDetect()"
    ],
    "description": "/** [wx.initFaceDetect(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/face/wx.initFaceDetect.html)\n         *\n         * 需要基础库： `2.18.0`\n         *\n         * @warning **该接口已停止维护，推荐使用 [wx.createVKSession](#) 代替**\n         *\n         * 初始化人脸检测。本接口不再维护，请使用 [wx.createVKSession](#) 接口代替。详情参考[人脸检测指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/visionkit/face.html)\n         *\n         * ****\n         *\n         * ### 特别说明\n         * 若小程序人脸识别功能涉及采集、存储用户生物特征（如人脸照片或视频、身份证和手持身份证、身份证照和免冠照等），此类型服务需使用[微信原生人脸识别接口](https://developers.weixin.qq.com/community/develop/doc/000442d352c1202bd498ecb105c00d?highline=%E4%BA%BA%E8%84%B8%E6%A0%B8%E8%BA%AB)。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.isBluetoothDevicePaired": {
    "prefix": "wx.isBluetoothDevicePaired",
    "body": [
      "wx.isBluetoothDevicePaired({",
      "  deviceId: '${1:deviceId}',",
      "})"
    ],
    "description": "/** [wx.isBluetoothDevicePaired(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.isBluetoothDevicePaired.html)\n         *\n         * 需要基础库： `2.20.1`\n         *\n         * 查询蓝牙设备是否配对，仅安卓支持。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.joinVoIPChat": {
    "prefix": "wx.joinVoIPChat",
    "body": [
      "wx.joinVoIPChat({",
      "  groupId: '${1:groupId}',",
      "  nonceStr: '${2:nonceStr}',",
      "  signature: '${3:signature}',",
      "  timeStamp: ${4:0},",
      "})"
    ],
    "description": "/** [wx.joinVoIPChat(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.joinVoIPChat.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 加入 (创建) 实时语音通话，更多信息可见 [实时语音指南](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/voip-chat.html)。调用前需要用户授权 `scope.record`，若房间类型为视频房间需要用户授权 `scope.camera`。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.login": {
    "prefix": "wx.login",
    "body": [
      "wx.login({",
      "  success: (res) => {",
      "    $1",
      "  },",
      "})"
    ],
    "description": "/** [wx.login(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/login/wx.login.html)\n*\n* 调用接口获取登录凭证（code）。通过凭证进而换取用户登录态信息，包括用户在当前小程序的唯一标识（openid）、微信开放平台帐号下的唯一标识（unionid，若当前小程序已绑定到微信开放平台帐号）及本次登录的会话密钥（session_key）等。用户数据的加解密通讯需要依赖会话密钥完成。\n*\n* **示例代码**\n*\n* ```js\nwx.login({\n  success (res) {\n    if (res.code) {\n      //发起网络请求\n      wx.request({\n        url: 'https://example.com/onLogin',\n        data: {\n          code: res.code\n        }\n      })\n    } else {\n      console.log('登录失败！' + res.errMsg)\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.makeBluetoothPair": {
    "prefix": "wx.makeBluetoothPair",
    "body": [
      "wx.makeBluetoothPair({",
      "  deviceId: '${1:deviceId}',",
      "  pin: '${2:pin}',",
      "})"
    ],
    "description": "/** [wx.makeBluetoothPair(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.makeBluetoothPair.html)\n         *\n         * 需要基础库： `2.12.0`\n         *\n         * 蓝牙配对接口，仅安卓支持。\n         *\n         * 通常情况下（需要指定 `pin` 码或者密码时）系统会接管配对流程，直接调用 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 即可。该接口只应当在开发者不想让用户手动输入 `pin` 码且真机验证确认可以正常生效情况下用。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.modifyFriendInteractiveStorage": {
    "prefix": "wx.modifyFriendInteractiveStorage",
    "body": [
      "wx.modifyFriendInteractiveStorage({",
      "  key: '${1:key}',",
      "  opNum: ${2:0},",
      "  operation: ${3:operation},",
      "})"
    ],
    "description": "/** [wx.modifyFriendInteractiveStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.modifyFriendInteractiveStorage.html)\n*\n* 需要基础库： `2.7.7`\n*\n* 修改好友的互动型托管数据，该接口只可在开放数据域下使用。\n*\n* **赠送动作的校验**\n*\n* 调用该接口需要上传 JSServer 函数 \"checkInteractiveData\"，该函数可用于执行赠送动作的校验逻辑，校验通过后返回结果表示本次赠送是否合法。只有 checkInteractiveData 返回了 `{ret: true}`，此次修改才会成功。\n*\n* **使用模板规则进行交互**\n*\n* 每次调用该接口会弹窗询问用户是否确认执行该操作，2.9.0 之后版本，需要在 game.json 中设置 `modifyFriendInteractiveStorageTemplates` 来定制交互的文案。\n* `modifyFriendInteractiveStorageTemplates` 是一个模板数组，每一个模板需要有 key, action, object 参数，还有一个可选参数 ratio，详细说明见示例配置：\n* ```json\n{\n  \"modifyFriendInteractiveStorageTemplates\": [\n    {\n      \"key\": \"1\", // 这个 key 与接口中同名参数相对应，不同的 key 对应不同的模板\n      \"action\": \"赠送\", // 互动行为\n      \"object\": \"金币\", // 互动物品\n      \"ratio\": 10 // 物品比率，opNum * ratio 代表物品个数\n    }\n  ]\n}\n```\n* 最后生成的文案为 \"确认 ${action} ${nickname} ${object}？\"，或者 \"确认 ${action} ${nickname} ${object} x ${opNum * ratio}？\"\n*\n* **使用自定义文案进行交互**\n*\n* 2.7.7 之后，2.9.0 之前的版本，文案通过 game.json 的 `modifyFriendInteractiveStorageConfirmWording` 字段配置。\n* 配置内容可包含 nickname 变量，用 ${nickname} 表示，实际调用时会被替换成好友的昵称。示例配置：\n* ```json\n{\n  \"modifyFriendInteractiveStorageConfirmWording\": \"确认送给${nickname}一个体力？\"\n}\n```\n* 2.9.0 之后，在 `modifyFriendInteractiveStorageTemplates` 和 `modifyFriendInteractiveStorageConfirmWording` 都存在的情况下，会优先使用前者。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.navigateToMiniProgram": {
    "prefix": "wx.navigateToMiniProgram",
    "body": [
      "wx.navigateToMiniProgram()"
    ],
    "description": "/** [wx.navigateToMiniProgram(Object object)](https://developers.weixin.qq.com/minigame/dev/api/navigate/wx.navigateToMiniProgram.html)\n*\n* 需要基础库： `2.2.0`\n*\n* 打开另一个小程序\n*\n* **使用限制**\n*\n*  ##### 需要用户触发跳转\n*  从 2.3.0 版本开始，若用户未点击小程序页面任意位置，则开发者将无法调用此接口自动跳转至其他小程序。\n*  ##### 需要用户确认跳转\n*  从 2.3.0 版本开始，在跳转至其他小程序前，将统一增加弹窗，询问是否跳转，用户确认后才可以跳转其他小程序。如果用户点击取消，则回调 `fail cancel`。\n*  ##### 无需声明跳转名单，不限跳转数量（众测中）\n* 1. 从2020年4月24日起，使用跳转其他小程序功能将无需在全局配置中声明跳转名单，调用此接口时将不再校验所跳转的 AppID 是否在 navigateToMiniProgramAppIdList 中。\n* 2. 从2020年4月24日起，跳转其他小程序将不再受数量限制，使用此功能时请注意遵守运营规范。\n*\n* **运营规范**\n*\n* 平台将坚决打击小程序盒子等互推行为，使用此功能时请严格遵守[《微信小程序平台运营规范》](https://developers.weixin.qq.com/miniprogram/product/#_5-10-%E4%BA%92%E6%8E%A8%E8%A1%8C%E4%B8%BA)，若发现小程序违反运营规范将被下架处理。\n*\n* **关于调试**\n*\n* - 在开发者工具上调用此 API 并不会真实的跳转到另外的小程序，但是开发者工具会校验本次调用跳转是否成功。[详情](https://developers.weixin.qq.com/miniprogram/dev/devtools/different.html#跳转小程序调试支持)\n* - 开发者工具上支持被跳转的小程序处理接收参数的调试。[详情](https://developers.weixin.qq.com/miniprogram/dev/devtools/different.html#跳转小程序调试支持)\n*\n* **示例代码**\n*\n* ```js\nwx.navigateToMiniProgram({\n  appId: '',\n  path: 'page/index/index?id=123',\n  extraData: {\n    foo: 'bar'\n  },\n  envVersion: 'develop',\n  success(res) {\n    // 打开成功\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.notifyBLECharacteristicValueChange": {
    "prefix": "wx.notifyBLECharacteristicValueChange",
    "body": [
      "wx.notifyBLECharacteristicValueChange({",
      "  characteristicId: '${1:characteristicId}',",
      "  deviceId: '${2:deviceId}',",
      "  serviceId: '${3:serviceId}',",
      "  state: ${4:true},",
      "})"
    ],
    "description": "/** [wx.notifyBLECharacteristicValueChange(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 启用蓝牙低功耗设备特征值变化时的 notify 功能，订阅特征。注意：必须设备的特征支持 notify 或者 indicate 才可以成功调用。\n*\n* 另外，必须先启用 [wx.notifyBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html) 才能监听到设备 `characteristicValueChange` 事件\n*\n* **注意**\n*\n* - 订阅操作成功后需要设备主动更新特征的 value，才会触发 [wx.onBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html) 回调。\n* - 安卓平台上，在本接口调用成功后立即调用 [wx.writeBLECharacteristicValue](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.writeBLECharacteristicValue.html) 接口，在部分机型上会发生 10008 系统错误\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.notifyBLECharacteristicValueChange({\n  state: true, // 启用 notify 功能\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  success (res) {\n    console.log('notifyBLECharacteristicValueChange success', res.errMsg)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offAccelerometerChange": {
    "prefix": "wx.offAccelerometerChange",
    "body": [
      "wx.offAccelerometerChange((res) => {$1})"
    ],
    "description": "/** [wx.offAccelerometerChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.offAccelerometerChange.html)\n*\n* 需要基础库： `2.9.3`\n*\n* 移除加速度数据事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onAccelerometerChange(listener)\nwx.offAccelerometerChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offAddToFavorites": {
    "prefix": "wx.offAddToFavorites",
    "body": [
      "wx.offAddToFavorites((result) => {$1})"
    ],
    "description": "/** [wx.offAddToFavorites(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offAddToFavorites.html)\n*\n* 需要基础库： `2.10.3`\n*\n* 移除用户点击菜单「收藏」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onAddToFavorites(listener)\nwx.offAddToFavorites(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offAudioInterruptionBegin": {
    "prefix": "wx.offAudioInterruptionBegin",
    "body": [
      "wx.offAudioInterruptionBegin((res) => {$1})"
    ],
    "description": "/** [wx.offAudioInterruptionBegin(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.offAudioInterruptionBegin.html)\n*\n* 需要基础库： `1.8.0`\n*\n* 移除音频因为受到系统占用而被中断开始事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onAudioInterruptionBegin(listener)\nwx.offAudioInterruptionBegin(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offAudioInterruptionEnd": {
    "prefix": "wx.offAudioInterruptionEnd",
    "body": [
      "wx.offAudioInterruptionEnd((res) => {$1})"
    ],
    "description": "/** [wx.offAudioInterruptionEnd(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.offAudioInterruptionEnd.html)\n*\n* 需要基础库： `1.8.0`\n*\n* 移除音频中断结束事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onAudioInterruptionEnd(listener)\nwx.offAudioInterruptionEnd(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offBLECharacteristicValueChange": {
    "prefix": "wx.offBLECharacteristicValueChange",
    "body": [
      "wx.offBLECharacteristicValueChange((result) => {$1})"
    ],
    "description": "/** [wx.offBLECharacteristicValueChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.offBLECharacteristicValueChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除蓝牙低功耗设备的特征值变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBLECharacteristicValueChange(listener)\nwx.offBLECharacteristicValueChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offBLEConnectionStateChange": {
    "prefix": "wx.offBLEConnectionStateChange",
    "body": [
      "wx.offBLEConnectionStateChange((result) => {$1})"
    ],
    "description": "/** [wx.offBLEConnectionStateChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.offBLEConnectionStateChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除蓝牙低功耗连接状态改变事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBLEConnectionStateChange(listener)\nwx.offBLEConnectionStateChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offBLEMTUChange": {
    "prefix": "wx.offBLEMTUChange",
    "body": [
      "wx.offBLEMTUChange((result) => {$1})"
    ],
    "description": "/** [wx.offBLEMTUChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.offBLEMTUChange.html)\n*\n* 需要基础库： `2.20.1`\n*\n* 移除蓝牙低功耗的最大传输单元变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBLEMTUChange(listener)\nwx.offBLEMTUChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offBLEPeripheralConnectionStateChanged": {
    "prefix": "wx.offBLEPeripheralConnectionStateChanged",
    "body": [
      "wx.offBLEPeripheralConnectionStateChanged((result) => {$1})"
    ],
    "description": "/** [wx.offBLEPeripheralConnectionStateChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/wx.offBLEPeripheralConnectionStateChanged.html)\n*\n* 需要基础库： `2.10.3`\n*\n* 移除当前外围设备被连接或断开连接事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBLEPeripheralConnectionStateChanged(listener)\nwx.offBLEPeripheralConnectionStateChanged(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offBeaconServiceChange": {
    "prefix": "wx.offBeaconServiceChange",
    "body": [
      "wx.offBeaconServiceChange((res) => {$1})"
    ],
    "description": "/** [wx.offBeaconServiceChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.offBeaconServiceChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除 Beacon 服务状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBeaconServiceChange(listener)\nwx.offBeaconServiceChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offBeaconUpdate": {
    "prefix": "wx.offBeaconUpdate",
    "body": [
      "wx.offBeaconUpdate((res) => {$1})"
    ],
    "description": "/** [wx.offBeaconUpdate(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.offBeaconUpdate.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除 Beacon 设备更新事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBeaconUpdate(listener)\nwx.offBeaconUpdate(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offBluetoothAdapterStateChange": {
    "prefix": "wx.offBluetoothAdapterStateChange",
    "body": [
      "wx.offBluetoothAdapterStateChange((result) => {$1})"
    ],
    "description": "/** [wx.offBluetoothAdapterStateChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.offBluetoothAdapterStateChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除蓝牙适配器状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBluetoothAdapterStateChange(listener)\nwx.offBluetoothAdapterStateChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offBluetoothDeviceFound": {
    "prefix": "wx.offBluetoothDeviceFound",
    "body": [
      "wx.offBluetoothDeviceFound((res) => {$1})"
    ],
    "description": "/** [wx.offBluetoothDeviceFound(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.offBluetoothDeviceFound.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 移除搜索到新设备的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onBluetoothDeviceFound(listener)\nwx.offBluetoothDeviceFound(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offCompassChange": {
    "prefix": "wx.offCompassChange",
    "body": [
      "wx.offCompassChange((res) => {$1})"
    ],
    "description": "/** [wx.offCompassChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/compass/wx.offCompassChange.html)\n*\n* 需要基础库： `2.9.3`\n*\n* 移除罗盘数据变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onCompassChange(listener)\nwx.offCompassChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offCopyUrl": {
    "prefix": "wx.offCopyUrl",
    "body": [
      "wx.offCopyUrl((result) => {$1})"
    ],
    "description": "/** [wx.offCopyUrl(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offCopyUrl.html)\n*\n* 需要基础库： `2.14.3`\n*\n* 移除用户点击右上角菜单的「复制链接」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onCopyUrl(listener)\nwx.offCopyUrl(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offDeviceMotionChange": {
    "prefix": "wx.offDeviceMotionChange",
    "body": [
      "wx.offDeviceMotionChange((res) => {$1})"
    ],
    "description": "/** [wx.offDeviceMotionChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.offDeviceMotionChange.html)\n*\n* 需要基础库： `2.9.3`\n*\n* 移除设备方向变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onDeviceMotionChange(listener)\nwx.offDeviceMotionChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offDeviceOrientationChange": {
    "prefix": "wx.offDeviceOrientationChange",
    "body": [
      "wx.offDeviceOrientationChange((result) => {$1})"
    ],
    "description": "/** [wx.offDeviceOrientationChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/orientation/wx.offDeviceOrientationChange.html)\n*\n* 需要基础库： `2.1.0`\n*\n* 移除屏幕转向切换事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onDeviceOrientationChange(listener)\nwx.offDeviceOrientationChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offError": {
    "prefix": "wx.offError",
    "body": [
      "wx.offError((res) => {$1})"
    ],
    "description": "/** [wx.offError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.offError.html)\n*\n* 移除全局错误事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onError(listener)\nwx.offError(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offHandoff": {
    "prefix": "wx.offHandoff",
    "body": [
      "wx.offHandoff((result) => {$1})"
    ],
    "description": "/** [wx.offHandoff(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offHandoff.html)\n*\n* 需要基础库： `2.14.4`\n*\n* 移除用户点击菜单「在电脑上打开」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onHandoff(listener)\nwx.offHandoff(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offHide": {
    "prefix": "wx.offHide",
    "body": [
      "wx.offHide((res) => {$1})"
    ],
    "description": "/** [wx.offHide(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.offHide.html)\n*\n* 移除小游戏隐藏到后台事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onHide(listener)\nwx.offHide(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offInteractiveStorageModified": {
    "prefix": "wx.offInteractiveStorageModified",
    "body": [
      "wx.offInteractiveStorageModified(${1:callback})"
    ],
    "description": "/** [wx.offInteractiveStorageModified(function callback)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.offInteractiveStorageModified.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 取消监听成功修改好友的互动型托管数据事件，该接口在游戏主域使用 */",
    "detail": "function",
    "kind": 9
  },
  "wx.offKeyDown": {
    "prefix": "wx.offKeyDown",
    "body": [
      "wx.offKeyDown((result) => {$1})"
    ],
    "description": "/** [wx.offKeyDown(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyDown.html)\n*\n* 需要基础库： `2.10.1`\n*\n* 移除键盘按键按下事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyDown(listener)\nwx.offKeyDown(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offKeyUp": {
    "prefix": "wx.offKeyUp",
    "body": [
      "wx.offKeyUp((result) => {$1})"
    ],
    "description": "/** [wx.offKeyUp(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyUp.html)\n*\n* 需要基础库： `2.10.1`\n*\n* 移除键盘按键弹起事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyUp(listener)\nwx.offKeyUp(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offKeyboardComplete": {
    "prefix": "wx.offKeyboardComplete",
    "body": [
      "wx.offKeyboardComplete((result) => {$1})"
    ],
    "description": "/** [wx.offKeyboardComplete(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyboardComplete.html)\n*\n* 移除监听键盘收起的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyboardComplete(listener)\nwx.offKeyboardComplete(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offKeyboardConfirm": {
    "prefix": "wx.offKeyboardConfirm",
    "body": [
      "wx.offKeyboardConfirm((result) => {$1})"
    ],
    "description": "/** [wx.offKeyboardConfirm(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyboardConfirm.html)\n*\n* 移除用户点击键盘 Confirm 按钮时的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyboardConfirm(listener)\nwx.offKeyboardConfirm(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offKeyboardHeightChange": {
    "prefix": "wx.offKeyboardHeightChange",
    "body": [
      "wx.offKeyboardHeightChange((result) => {$1})"
    ],
    "description": "/** [wx.offKeyboardHeightChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyboardHeightChange.html)\n*\n* 需要基础库： `2.21.3`\n*\n* 移除键盘高度变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyboardHeightChange(listener)\nwx.offKeyboardHeightChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offKeyboardInput": {
    "prefix": "wx.offKeyboardInput",
    "body": [
      "wx.offKeyboardInput((result) => {$1})"
    ],
    "description": "/** [wx.offKeyboardInput(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.offKeyboardInput.html)\n*\n* 移除键盘输入事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onKeyboardInput(listener)\nwx.offKeyboardInput(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offMemoryWarning": {
    "prefix": "wx.offMemoryWarning",
    "body": [
      "wx.offMemoryWarning((result) => {$1})"
    ],
    "description": "/** [wx.offMemoryWarning(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/memory/wx.offMemoryWarning.html)\n*\n* 需要基础库： `2.9.0`\n*\n* 移除内存不足告警事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onMemoryWarning(listener)\nwx.offMemoryWarning(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offMouseDown": {
    "prefix": "wx.offMouseDown",
    "body": [
      "wx.offMouseDown((result) => {$1})"
    ],
    "description": "/** [wx.offMouseDown(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.offMouseDown.html)\n*\n* 移除鼠标按键按下事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onMouseDown(listener)\nwx.offMouseDown(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offMouseMove": {
    "prefix": "wx.offMouseMove",
    "body": [
      "wx.offMouseMove((result) => {$1})"
    ],
    "description": "/** [wx.offMouseMove(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.offMouseMove.html)\n*\n* 移除鼠标移动事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onMouseMove(listener)\nwx.offMouseMove(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offMouseUp": {
    "prefix": "wx.offMouseUp",
    "body": [
      "wx.offMouseUp((result) => {$1})"
    ],
    "description": "/** [wx.offMouseUp(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.offMouseUp.html)\n*\n* 移除鼠标按键弹起事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onMouseUp(listener)\nwx.offMouseUp(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offNetworkStatusChange": {
    "prefix": "wx.offNetworkStatusChange",
    "body": [
      "wx.offNetworkStatusChange((res) => {$1})"
    ],
    "description": "/** [wx.offNetworkStatusChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.offNetworkStatusChange.html)\n*\n* 需要基础库： `2.9.3`\n*\n* 移除网络状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onNetworkStatusChange(listener)\nwx.offNetworkStatusChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offNetworkWeakChange": {
    "prefix": "wx.offNetworkWeakChange",
    "body": [
      "wx.offNetworkWeakChange((result) => {$1})"
    ],
    "description": "/** [wx.offNetworkWeakChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.offNetworkWeakChange.html)\n*\n* 需要基础库： `2.21.0`\n*\n* 移除弱网状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onNetworkWeakChange(listener)\nwx.offNetworkWeakChange(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offShareAppMessage": {
    "prefix": "wx.offShareAppMessage",
    "body": [
      "wx.offShareAppMessage((result) => {$1})"
    ],
    "description": "/** [wx.offShareAppMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offShareAppMessage.html)\n*\n* 移除用户点击右上角菜单的「转发」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onShareAppMessage(listener)\nwx.offShareAppMessage(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offShareTimeline": {
    "prefix": "wx.offShareTimeline",
    "body": [
      "wx.offShareTimeline((result) => {$1})"
    ],
    "description": "/** [wx.offShareTimeline(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.offShareTimeline.html)\n*\n* 需要基础库： `2.11.3`\n*\n* 移除用户点击右上角菜单的「分享到朋友圈」按钮时触发的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onShareTimeline(listener)\nwx.offShareTimeline(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offShow": {
    "prefix": "wx.offShow",
    "body": [
      "wx.offShow((result) => {$1})"
    ],
    "description": "/** [wx.offShow(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.offShow.html)\n*\n* 移除小游戏回到前台的事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onShow(listener)\nwx.offShow(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offTouchCancel": {
    "prefix": "wx.offTouchCancel",
    "body": [
      "wx.offTouchCancel((result) => {$1})"
    ],
    "description": "/** [wx.offTouchCancel(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.offTouchCancel.html)\n*\n* 移除触点失效事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onTouchCancel(listener)\nwx.offTouchCancel(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offTouchEnd": {
    "prefix": "wx.offTouchEnd",
    "body": [
      "wx.offTouchEnd((result) => {$1})"
    ],
    "description": "/** [wx.offTouchEnd(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.offTouchEnd.html)\n*\n* 移除触摸结束事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onTouchEnd(listener)\nwx.offTouchEnd(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offTouchMove": {
    "prefix": "wx.offTouchMove",
    "body": [
      "wx.offTouchMove((result) => {$1})"
    ],
    "description": "/** [wx.offTouchMove(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.offTouchMove.html)\n*\n* 移除触点移动事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onTouchMove(listener)\nwx.offTouchMove(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offTouchStart": {
    "prefix": "wx.offTouchStart",
    "body": [
      "wx.offTouchStart((result) => {$1})"
    ],
    "description": "/** [wx.offTouchStart(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.offTouchStart.html)\n*\n* 移除开始触摸事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onTouchStart(listener)\nwx.offTouchStart(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offUnhandledRejection": {
    "prefix": "wx.offUnhandledRejection",
    "body": [
      "wx.offUnhandledRejection((result) => {$1})"
    ],
    "description": "/** [wx.offUnhandledRejection(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.offUnhandledRejection.html)\n*\n* 需要基础库： `2.10.0`\n*\n* 移除未处理的 Promise 拒绝事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onUnhandledRejection(listener)\nwx.offUnhandledRejection(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offVoIPChatInterrupted": {
    "prefix": "wx.offVoIPChatInterrupted",
    "body": [
      "wx.offVoIPChatInterrupted((result) => {$1})"
    ],
    "description": "/** [wx.offVoIPChatInterrupted(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.offVoIPChatInterrupted.html)\n*\n* 需要基础库： `2.9.0`\n*\n* 移除被动断开实时语音通话事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onVoIPChatInterrupted(listener)\nwx.offVoIPChatInterrupted(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offVoIPChatMembersChanged": {
    "prefix": "wx.offVoIPChatMembersChanged",
    "body": [
      "wx.offVoIPChatMembersChanged((result) => {$1})"
    ],
    "description": "/** [wx.offVoIPChatMembersChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.offVoIPChatMembersChanged.html)\n*\n* 需要基础库： `2.9.0`\n*\n* 移除实时语音通话成员在线状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onVoIPChatMembersChanged(listener)\nwx.offVoIPChatMembersChanged(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offVoIPChatSpeakersChanged": {
    "prefix": "wx.offVoIPChatSpeakersChanged",
    "body": [
      "wx.offVoIPChatSpeakersChanged((result) => {$1})"
    ],
    "description": "/** [wx.offVoIPChatSpeakersChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.offVoIPChatSpeakersChanged.html)\n*\n* 需要基础库： `2.9.0`\n*\n* 移除实时语音通话成员通话状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onVoIPChatSpeakersChanged(listener)\nwx.offVoIPChatSpeakersChanged(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offVoIPChatStateChanged": {
    "prefix": "wx.offVoIPChatStateChanged",
    "body": [
      "wx.offVoIPChatStateChanged((result) => {$1})"
    ],
    "description": "/** [wx.offVoIPChatStateChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.offVoIPChatStateChanged.html)\n*\n* 需要基础库： `2.16.0`\n*\n* 移除房间状态变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onVoIPChatStateChanged(listener)\nwx.offVoIPChatStateChanged(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offWheel": {
    "prefix": "wx.offWheel",
    "body": [
      "wx.offWheel((result) => {$1})"
    ],
    "description": "/** [wx.offWheel(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/wheel-event/wx.offWheel.html)\n*\n* 移除鼠标滚轮事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onWheel(listener)\nwx.offWheel(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.offWindowResize": {
    "prefix": "wx.offWindowResize",
    "body": [
      "wx.offWindowResize((result) => {$1})"
    ],
    "description": "/** [wx.offWindowResize(function listener)](https://developers.weixin.qq.com/minigame/dev/api/ui/window/wx.offWindowResize.html)\n*\n* 移除窗口尺寸变化事件的监听函数\n*\n* **示例代码**\n*\n* ```js\nconst listener = function (res) { console.log(res) }\n\nwx.onWindowResize(listener)\nwx.offWindowResize(listener) // 需传入与监听时同一个的函数对象\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onAccelerometerChange": {
    "prefix": "wx.onAccelerometerChange",
    "body": [
      "wx.onAccelerometerChange((result) => {$1})"
    ],
    "description": "/** [wx.onAccelerometerChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.onAccelerometerChange.html)\n*\n* 监听加速度数据事件。频率根据 [wx.startAccelerometer()](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.startAccelerometer.html) 的 interval 参数, 接口调用后会自动开始监听。\n*\n* **示例代码**\n*\n* ```js\nwx.onAccelerometerChange(callback)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onAddToFavorites": {
    "prefix": "wx.onAddToFavorites",
    "body": [
      "wx.onAddToFavorites((result) => {$1})"
    ],
    "description": "/** [wx.onAddToFavorites(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onAddToFavorites.html)\n         *\n         * 需要基础库： `2.10.3`\n         *\n         * 监听用户点击菜单「收藏」按钮时触发的事件（安卓7.0.15起支持，iOS 暂不支持） */",
    "detail": "function",
    "kind": 9
  },
  "wx.onAudioInterruptionBegin": {
    "prefix": "wx.onAudioInterruptionBegin",
    "body": [
      "wx.onAudioInterruptionBegin((res) => {$1})"
    ],
    "description": "/** [wx.onAudioInterruptionBegin(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.onAudioInterruptionBegin.html)\n         *\n         * 需要基础库： `1.8.0`\n         *\n         * 监听音频因为受到系统占用而被中断开始事件。以下场景会触发此事件：闹钟、电话、FaceTime 通话、微信语音聊天、微信视频聊天、有声广告开始播放、实名认证页面弹出等。此事件触发后，小程序内所有音频会暂停。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onAudioInterruptionEnd": {
    "prefix": "wx.onAudioInterruptionEnd",
    "body": [
      "wx.onAudioInterruptionEnd((res) => {$1})"
    ],
    "description": "/** [wx.onAudioInterruptionEnd(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.onAudioInterruptionEnd.html)\n         *\n         * 需要基础库： `1.8.0`\n         *\n         * 监听音频中断结束事件。在收到 onAudioInterruptionBegin 事件之后，小程序内所有音频会暂停，收到此事件之后才可再次播放成功 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onBLECharacteristicValueChange": {
    "prefix": "wx.onBLECharacteristicValueChange",
    "body": [
      "wx.onBLECharacteristicValueChange((result) => {$1})"
    ],
    "description": "/** [wx.onBLECharacteristicValueChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 监听蓝牙低功耗设备的特征值变化事件。必须先调用 [wx.notifyBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html) 接口才能接收到设备推送的 notification。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进制字符串示例\nfunction ab2hex(buffer) {\n  let hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.onBLECharacteristicValueChange(function(res) {\n  console.log(`characteristic ${res.characteristicId} has changed, now is ${res.value}`)\n  console.log(ab2hex(res.value))\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onBLEConnectionStateChange": {
    "prefix": "wx.onBLEConnectionStateChange",
    "body": [
      "wx.onBLEConnectionStateChange((result) => {$1})"
    ],
    "description": "/** [wx.onBLEConnectionStateChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLEConnectionStateChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 监听蓝牙低功耗连接状态改变事件。包括开发者主动连接或断开连接，设备丢失，连接异常断开等等\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBLEConnectionStateChange(function(res) {\n  // 该方法回调中可以用于处理连接意外断开等异常情况\n  console.log(`device ${res.deviceId} state has changed, connected: ${res.connected}`)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onBLEMTUChange": {
    "prefix": "wx.onBLEMTUChange",
    "body": [
      "wx.onBLEMTUChange((result) => {$1})"
    ],
    "description": "/** [wx.onBLEMTUChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLEMTUChange.html)\n*\n* 需要基础库： `2.20.1`\n*\n* 监听蓝牙低功耗的最大传输单元变化事件（仅安卓触发）。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBLEMTUChange(function (res) {\n  console.log('bluetooth mtu is', res.mtu)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onBLEPeripheralConnectionStateChanged": {
    "prefix": "wx.onBLEPeripheralConnectionStateChanged",
    "body": [
      "wx.onBLEPeripheralConnectionStateChanged((result) => {$1})"
    ],
    "description": "/** [wx.onBLEPeripheralConnectionStateChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/wx.onBLEPeripheralConnectionStateChanged.html)\n         *\n         * 需要基础库： `2.10.3`\n         *\n         * 监听当前外围设备被连接或断开连接事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onBeaconServiceChange": {
    "prefix": "wx.onBeaconServiceChange",
    "body": [
      "wx.onBeaconServiceChange((result) => {$1})"
    ],
    "description": "/** [wx.onBeaconServiceChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.onBeaconServiceChange.html)\n         *\n         * 需要基础库： `2.9.2`\n         *\n         * 监听 Beacon 服务状态变化事件，仅能注册一个监听 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onBeaconUpdate": {
    "prefix": "wx.onBeaconUpdate",
    "body": [
      "wx.onBeaconUpdate((result) => {$1})"
    ],
    "description": "/** [wx.onBeaconUpdate(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.onBeaconUpdate.html)\n         *\n         * 需要基础库： `2.9.2`\n         *\n         * 监听 Beacon 设备更新事件，仅能注册一个监听 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onBluetoothAdapterStateChange": {
    "prefix": "wx.onBluetoothAdapterStateChange",
    "body": [
      "wx.onBluetoothAdapterStateChange((result) => {$1})"
    ],
    "description": "/** [wx.onBluetoothAdapterStateChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.onBluetoothAdapterStateChange.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 监听蓝牙适配器状态变化事件\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBluetoothAdapterStateChange(function (res) {\n  console.log('adapterState changed, now is', res)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onBluetoothDeviceFound": {
    "prefix": "wx.onBluetoothDeviceFound",
    "body": [
      "wx.onBluetoothDeviceFound((result) => {$1})"
    ],
    "description": "/** [wx.onBluetoothDeviceFound(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.onBluetoothDeviceFound.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 监听搜索到新设备的事件\n*\n* **注意**\n*\n* - 若在 [wx.onBluetoothDeviceFound](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.onBluetoothDeviceFound.html) 回调了某个设备，则此设备会添加到 [wx.getBluetoothDevices](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.getBluetoothDevices.html) 接口获取到的数组中。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进度字符串示例\nfunction ab2hex(buffer) {\n  var hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.onBluetoothDeviceFound(function(res) {\n  var devices = res.devices;\n  console.log('new device list has founded')\n  console.dir(devices)\n  console.log(ab2hex(devices[0].advertisData))\n})\n```\n*\n* **注意**\n*\n* - 蓝牙设备在被搜索到时，系统返回的 `name` 字段一般为广播包中的 `LocalName` 字段中的设备名称，而如果与蓝牙设备建立连接，系统返回的 `name` 字段会改为从蓝牙设备上获取到的 `GattName`。若需要动态改变设备名称并展示，建议使用 `localName` 字段。\n* - 安卓下部分机型需要有位置权限才能搜索到设备，需留意是否开启了位置权限 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onCompassChange": {
    "prefix": "wx.onCompassChange",
    "body": [
      "wx.onCompassChange((result) => {$1})"
    ],
    "description": "/** [wx.onCompassChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/compass/wx.onCompassChange.html)\n         *\n         * 监听罗盘数据变化事件。频率：5 次/秒，接口调用后会自动开始监听，可使用 wx.stopCompass 停止监听。\n         *\n         * **accuracy 在 iOS/Android 的差异**\n         *\n         * 由于平台差异，accuracy 在 iOS/Android 的值不同。\n         *\n         * - iOS：accuracy 是一个 number 类型的值，表示相对于磁北极的偏差。0 表示设备指向磁北，90 表示指向东，180 表示指向南，依此类推。\n         * - Android：accuracy 是一个 string 类型的枚举值。\n         *\n         * | 值              | 说明                                                                                   |\n         * | --------------- | -------------------------------------------------------------------------------------- |\n         * | high            | 高精度                                                                                 |\n         * | medium          | 中等精度                                                                               |\n         * | low             | 低精度                                                                                 |\n         * | no-contact      | 不可信，传感器失去连接                                                                 |\n         * | unreliable      | 不可信，原因未知                                                                       |\n         * | unknow ${value} | 未知的精度枚举值，即该 Android 系统此时返回的表示精度的 value 不是一个标准的精度枚举值 | */",
    "detail": "function",
    "kind": 9
  },
  "wx.onCopyUrl": {
    "prefix": "wx.onCopyUrl",
    "body": [
      "wx.onCopyUrl((result) => {$1})"
    ],
    "description": "/** [wx.onCopyUrl(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onCopyUrl.html)\n         *\n         * 需要基础库： `2.14.3`\n         *\n         * 监听用户点击右上角菜单的「复制链接」按钮时触发的事件。本接口为 Beta 版本，暂只在 Android 平台支持。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onDeviceMotionChange": {
    "prefix": "wx.onDeviceMotionChange",
    "body": [
      "wx.onDeviceMotionChange((result) => {$1})"
    ],
    "description": "/** [wx.onDeviceMotionChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.onDeviceMotionChange.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 监听设备方向变化事件。频率根据 [wx.startDeviceMotionListening()](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.startDeviceMotionListening.html) 的 interval 参数。可以使用 [wx.stopDeviceMotionListening()](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.stopDeviceMotionListening.html) 停止监听。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onDeviceOrientationChange": {
    "prefix": "wx.onDeviceOrientationChange",
    "body": [
      "wx.onDeviceOrientationChange((result) => {$1})"
    ],
    "description": "/** [wx.onDeviceOrientationChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/orientation/wx.onDeviceOrientationChange.html)\n         *\n         * 需要基础库： `2.1.0`\n         *\n         * 监听屏幕转向切换事件\n         *\n         * ****\n         *\n         * ## 注意事项\n         * - 在基础库 v2.26.0 之前，wx.onDeviceOrientationChange 只监听左横屏和右横屏之间切换的事件，且仅在 game.json 中配置 deviceOrientation 的值为 landscape 时生效。\n         * - 从基础库 v2.26.0 开始，wx.onDeviceOrientationChange 会同时监听通过 wx.setDeviceOrientation 接口切换横竖屏的事件。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onError": {
    "prefix": "wx.onError",
    "body": [
      "wx.onError((message, stack) => {$1})"
    ],
    "description": "/** [wx.onError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.onError.html)\n         *\n         * 监听全局错误事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onGyroscopeChange": {
    "prefix": "wx.onGyroscopeChange",
    "body": [
      "wx.onGyroscopeChange((result) => {$1})"
    ],
    "description": "/** [wx.onGyroscopeChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.onGyroscopeChange.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 监听陀螺仪数据变化事件。频率根据 [wx.startGyroscope()](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.startGyroscope.html) 的 interval 参数。可以使用 [wx.stopGyroscope()](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.stopGyroscope.html) 停止监听。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onHandoff": {
    "prefix": "wx.onHandoff",
    "body": [
      "wx.onHandoff((result) => {$1})"
    ],
    "description": "/** [wx.onHandoff(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onHandoff.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 监听用户点击菜单「在电脑上打开」按钮时触发的事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onHide": {
    "prefix": "wx.onHide",
    "body": [
      "wx.onHide((res) => {$1})"
    ],
    "description": "/** [wx.onHide(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.onHide.html)\n         *\n         * 监听小游戏隐藏到后台事件。锁屏、按 HOME 键退到桌面、显示在聊天顶部等操作会触发此事件。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onInteractiveStorageModified": {
    "prefix": "wx.onInteractiveStorageModified",
    "body": [
      "wx.onInteractiveStorageModified(${1:callback})"
    ],
    "description": "/** [wx.onInteractiveStorageModified(function callback)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.onInteractiveStorageModified.html)\n         *\n         * 需要基础库： `2.9.0`\n         *\n         * 监听成功修改好友的互动型托管数据事件，该接口在游戏主域使用 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onKeyDown": {
    "prefix": "wx.onKeyDown",
    "body": [
      "wx.onKeyDown((result) => {$1})"
    ],
    "description": "/** [wx.onKeyDown(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyDown.html)\n         *\n         * 需要基础库： `2.10.1`\n         *\n         * 监听键盘按键按下事件，仅适用于 PC 平台 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onKeyUp": {
    "prefix": "wx.onKeyUp",
    "body": [
      "wx.onKeyUp((result) => {$1})"
    ],
    "description": "/** [wx.onKeyUp(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyUp.html)\n         *\n         * 需要基础库： `2.10.1`\n         *\n         * 监听键盘按键弹起事件，仅适用于 PC 平台 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onKeyboardComplete": {
    "prefix": "wx.onKeyboardComplete",
    "body": [
      "wx.onKeyboardComplete((result) => {$1})"
    ],
    "description": "/** [wx.onKeyboardComplete(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyboardComplete.html)\n         *\n         * 监听监听键盘收起的事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onKeyboardConfirm": {
    "prefix": "wx.onKeyboardConfirm",
    "body": [
      "wx.onKeyboardConfirm((result) => {$1})"
    ],
    "description": "/** [wx.onKeyboardConfirm(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyboardConfirm.html)\n         *\n         * 监听用户点击键盘 Confirm 按钮时的事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onKeyboardHeightChange": {
    "prefix": "wx.onKeyboardHeightChange",
    "body": [
      "wx.onKeyboardHeightChange((result) => {$1})"
    ],
    "description": "/** [wx.onKeyboardHeightChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyboardHeightChange.html)\n*\n* 需要基础库： `2.21.3`\n*\n* 监听键盘高度变化事件\n*\n* **示例代码**\n*\n* ```js\nwx.onKeyboardHeightChange(res => {\n  console.log(res.height)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onKeyboardInput": {
    "prefix": "wx.onKeyboardInput",
    "body": [
      "wx.onKeyboardInput((result) => {$1})"
    ],
    "description": "/** [wx.onKeyboardInput(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.onKeyboardInput.html)\n         *\n         * 监听键盘输入事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onMemoryWarning": {
    "prefix": "wx.onMemoryWarning",
    "body": [
      "wx.onMemoryWarning((result) => {$1})"
    ],
    "description": "/** [wx.onMemoryWarning(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/memory/wx.onMemoryWarning.html)\n         *\n         * 需要基础库： `2.0.2`\n         *\n         * 监听内存不足告警事件。\n         *\n         * 当 iOS/Android 向小程序进程发出内存警告时，触发该事件。触发该事件不意味小程序被杀，大部分情况下仅仅是告警，开发者可在收到通知后回收一些不必要资源避免进一步加剧内存紧张。\n         *\n         * **示例代码**\n         *\n         * ```js\n         * wx.onMemoryWarning(function () {\n         *   console.log('onMemoryWarningReceive')\n         * })\n         * `` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onMessage": {
    "prefix": "wx.onMessage",
    "body": [
      "wx.onMessage(${1:callback})"
    ],
    "description": "/** [wx.onMessage(function callback)](https://developers.weixin.qq.com/minigame/dev/api/open-api/context/wx.onMessage.html)\n         *\n         * 监听主域发送的消息 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onMouseDown": {
    "prefix": "wx.onMouseDown",
    "body": [
      "wx.onMouseDown((result) => {$1})"
    ],
    "description": "/** [wx.onMouseDown(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.onMouseDown.html)\n         *\n         * 监听鼠标按键按下事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onMouseMove": {
    "prefix": "wx.onMouseMove",
    "body": [
      "wx.onMouseMove((result) => {$1})"
    ],
    "description": "/** [wx.onMouseMove(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.onMouseMove.html)\n         *\n         * 监听鼠标移动事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onMouseUp": {
    "prefix": "wx.onMouseUp",
    "body": [
      "wx.onMouseUp((result) => {$1})"
    ],
    "description": "/** [wx.onMouseUp(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/mouse-event/wx.onMouseUp.html)\n         *\n         * 监听鼠标按键弹起事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onNetworkStatusChange": {
    "prefix": "wx.onNetworkStatusChange",
    "body": [
      "wx.onNetworkStatusChange((result) => {$1})"
    ],
    "description": "/** [wx.onNetworkStatusChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.onNetworkStatusChange.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 监听网络状态变化事件\n*\n* **示例代码**\n*\n* ```js\nwx.onNetworkStatusChange(function (res) {\n  console.log(res.isConnected)\n  console.log(res.networkType)\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onNetworkWeakChange": {
    "prefix": "wx.onNetworkWeakChange",
    "body": [
      "wx.onNetworkWeakChange((result) => {$1})"
    ],
    "description": "/** [wx.onNetworkWeakChange(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.onNetworkWeakChange.html)\n*\n* 需要基础库： `2.21.0`\n*\n* 监听弱网状态变化事件\n*\n* **示例代码**\n*\n* ```js\nwx.onNetworkWeakChange(function (res) {\n  console.log(res.weakNet)\n  console.log(res.networkType)\n})\n// 取消监听\nwx.offNetworkWeakChange()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onShareAppMessage": {
    "prefix": "wx.onShareAppMessage",
    "body": [
      "wx.onShareAppMessage((result) => {$1})"
    ],
    "description": "/** [wx.onShareAppMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onShareAppMessage.html)\n         *\n         * 监听用户点击右上角菜单的「转发」按钮时触发的事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onShareMessageToFriend": {
    "prefix": "wx.onShareMessageToFriend",
    "body": [
      "wx.onShareMessageToFriend((result) => {$1})"
    ],
    "description": "/** [wx.onShareMessageToFriend(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onShareMessageToFriend.html)\n         *\n         * 需要基础库： `2.9.4`\n         *\n         * 监听主域接收 `wx.shareMessageToFriend` 接口的成功失败通知 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onShareTimeline": {
    "prefix": "wx.onShareTimeline",
    "body": [
      "wx.onShareTimeline((result) => {$1})"
    ],
    "description": "/** [wx.onShareTimeline(function listener)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.onShareTimeline.html)\n         *\n         * 需要基础库： `2.11.3`\n         *\n         * 监听用户点击右上角菜单的「分享到朋友圈」按钮时触发的事件。本接口为 Beta 版本，暂只在 Android 平台支持。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onShow": {
    "prefix": "wx.onShow",
    "body": [
      "wx.onShow((result) => {$1})"
    ],
    "description": "/** [wx.onShow(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.onShow.html)\n         *\n         * 监听小游戏回到前台的事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onSocketClose": {
    "prefix": "wx.onSocketClose",
    "body": [
      "wx.onSocketClose((result) => {$1})"
    ],
    "description": "/** [wx.onSocketClose(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.onSocketClose.html)\n         *\n         * @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n         *\n         * 监听 WebSocket 连接关闭事件。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onSocketError": {
    "prefix": "wx.onSocketError",
    "body": [
      "wx.onSocketError((result) => {$1})"
    ],
    "description": "/** [wx.onSocketError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.onSocketError.html)\n         *\n         * @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n         *\n         * 监听 WebSocket 错误事件。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onSocketMessage": {
    "prefix": "wx.onSocketMessage",
    "body": [
      "wx.onSocketMessage((result) => {$1})"
    ],
    "description": "/** [wx.onSocketMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.onSocketMessage.html)\n         *\n         * @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n         *\n         * 监听 WebSocket 接收到服务器的消息事件。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onSocketOpen": {
    "prefix": "wx.onSocketOpen",
    "body": [
      "wx.onSocketOpen((result) => {$1})"
    ],
    "description": "/** [wx.onSocketOpen(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.onSocketOpen.html)\n         *\n         * @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n         *\n         * 监听 WebSocket 连接打开事件。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onTouchCancel": {
    "prefix": "wx.onTouchCancel",
    "body": [
      "wx.onTouchCancel((result) => {$1})"
    ],
    "description": "/** [wx.onTouchCancel(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.onTouchCancel.html)\n         *\n         * 监听触点失效事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onTouchEnd": {
    "prefix": "wx.onTouchEnd",
    "body": [
      "wx.onTouchEnd((result) => {$1})"
    ],
    "description": "/** [wx.onTouchEnd(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.onTouchEnd.html)\n         *\n         * 监听触摸结束事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onTouchMove": {
    "prefix": "wx.onTouchMove",
    "body": [
      "wx.onTouchMove((result) => {$1})"
    ],
    "description": "/** [wx.onTouchMove(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.onTouchMove.html)\n         *\n         * 监听触点移动事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onTouchStart": {
    "prefix": "wx.onTouchStart",
    "body": [
      "wx.onTouchStart((result) => {$1})"
    ],
    "description": "/** [wx.onTouchStart(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/touch-event/wx.onTouchStart.html)\n         *\n         * 监听开始触摸事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onUnhandledRejection": {
    "prefix": "wx.onUnhandledRejection",
    "body": [
      "wx.onUnhandledRejection((result) => {$1})"
    ],
    "description": "/** [wx.onUnhandledRejection(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/app/app-event/wx.onUnhandledRejection.html)\n         *\n         * 需要基础库： `2.10.0`\n         *\n         * 监听未处理的 Promise 拒绝事件\n         *\n         * **注意**\n         *\n         * 安卓平台暂时不会派发该事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onUserCaptureScreen": {
    "prefix": "wx.onUserCaptureScreen",
    "body": [
      "wx.onUserCaptureScreen((res) => {$1})"
    ],
    "description": "/** [wx.onUserCaptureScreen(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/screen/wx.onUserCaptureScreen.html)\n*\n* 需要基础库： `2.8.1`\n*\n* 监听用户主动截屏事件。用户使用系统截屏按键截屏时触发，只能注册一个监听\n*\n* **示例代码**\n*\n* ```js\nwx.onUserCaptureScreen(function (res) {\n  console.log('用户截屏了')\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.onVoIPChatInterrupted": {
    "prefix": "wx.onVoIPChatInterrupted",
    "body": [
      "wx.onVoIPChatInterrupted((result) => {$1})"
    ],
    "description": "/** [wx.onVoIPChatInterrupted(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.onVoIPChatInterrupted.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 监听被动断开实时语音通话事件。包括小游戏切入后端时断开 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onVoIPChatMembersChanged": {
    "prefix": "wx.onVoIPChatMembersChanged",
    "body": [
      "wx.onVoIPChatMembersChanged((result) => {$1})"
    ],
    "description": "/** [wx.onVoIPChatMembersChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.onVoIPChatMembersChanged.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 监听实时语音通话成员在线状态变化事件。有成员加入/退出通话时触发回调 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onVoIPChatSpeakersChanged": {
    "prefix": "wx.onVoIPChatSpeakersChanged",
    "body": [
      "wx.onVoIPChatSpeakersChanged((result) => {$1})"
    ],
    "description": "/** [wx.onVoIPChatSpeakersChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.onVoIPChatSpeakersChanged.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 监听实时语音通话成员通话状态变化事件。有成员开始/停止说话时触发回调 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onVoIPChatStateChanged": {
    "prefix": "wx.onVoIPChatStateChanged",
    "body": [
      "wx.onVoIPChatStateChanged((result) => {$1})"
    ],
    "description": "/** [wx.onVoIPChatStateChanged(function listener)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.onVoIPChatStateChanged.html)\n         *\n         * 需要基础库： `2.16.0`\n         *\n         * 监听房间状态变化事件。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onWheel": {
    "prefix": "wx.onWheel",
    "body": [
      "wx.onWheel((result) => {$1})"
    ],
    "description": "/** [wx.onWheel(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/wheel-event/wx.onWheel.html)\n         *\n         * 监听鼠标滚轮事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.onWindowResize": {
    "prefix": "wx.onWindowResize",
    "body": [
      "wx.onWindowResize((result) => {$1})"
    ],
    "description": "/** [wx.onWindowResize(function listener)](https://developers.weixin.qq.com/minigame/dev/api/ui/window/wx.onWindowResize.html)\n         *\n         * 监听窗口尺寸变化事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.openAppAuthorizeSetting": {
    "prefix": "wx.openAppAuthorizeSetting",
    "body": [
      "wx.openAppAuthorizeSetting()"
    ],
    "description": "/** [wx.openAppAuthorizeSetting(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.openAppAuthorizeSetting.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 跳转系统微信授权管理页\n*\n* **示例代码**\n*\n* ```js\nwx.openAppAuthorizeSetting({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.openBluetoothAdapter": {
    "prefix": "wx.openBluetoothAdapter",
    "body": [
      "wx.openBluetoothAdapter()"
    ],
    "description": "/** [wx.openBluetoothAdapter(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.openBluetoothAdapter.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 初始化蓝牙模块。iOS 上开启主机/从机（外围设备）模式时需分别调用一次，并指定对应的 `mode`。\n*\n* **object.fail 回调函数返回的 state 参数（仅 iOS）**\n*\n* | 状态码 | 说明   |\n* | ------ | ------ |\n* | 0      | 未知   |\n* | 1      | 重置中 |\n* | 2      | 不支持 |\n* | 3      | 未授权 |\n* | 4      | 未开启 |\n*\n* **注意**\n*\n* - 其他蓝牙相关 API 必须在 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 调用之后使用。否则 API 会返回错误（errCode=10000）。\n* - 在用户蓝牙开关未开启或者手机不支持蓝牙功能的情况下，调用 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 会返回错误（errCode=10001），表示手机蓝牙功能不可用。此时小程序蓝牙模块已经初始化完成，可通过 [wx.onBluetoothAdapterStateChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.onBluetoothAdapterStateChange.html) 监听手机蓝牙状态的改变，也可以调用蓝牙模块的所有API。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.openBluetoothAdapter({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.openCard": {
    "prefix": "wx.openCard",
    "body": [
      "wx.openCard({",
      "  cardList: [$1],",
      "})"
    ],
    "description": "/** [wx.openCard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/card/wx.openCard.html)\n*\n* 需要基础库： `2.5.0`\n*\n* 查看微信卡包中的卡券。只有通过 [认证](https://developers.weixin.qq.com/miniprogram/product/renzheng.html) 的小程序或文化互动类目的小游戏才能使用。更多文档请参考 [微信卡券接口文档](https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&key=1490190158&version=1&lang=zh_CN&platform=2)。\n*\n* **示例代码**\n*\n* ```js\nwx.openCard({\n  cardList: [{\n    cardId: '',\n    code: ''\n  }, {\n    cardId: '',\n    code: ''\n  }],\n  success (res) { }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.openChannelsActivity": {
    "prefix": "wx.openChannelsActivity",
    "body": [
      "wx.openChannelsActivity({",
      "  feedId: '${1:feedId}',",
      "  finderUserName: '${2:finderUserName}',",
      "})"
    ],
    "description": "/** [wx.openChannelsActivity(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.openChannelsActivity.html)\n         *\n         * 需要基础库： `2.19.2`\n         *\n         * 打开视频号视频 */",
    "detail": "function",
    "kind": 9
  },
  "wx.openChannelsEvent": {
    "prefix": "wx.openChannelsEvent",
    "body": [
      "wx.openChannelsEvent({",
      "  eventId: '${1:eventId}',",
      "  finderUserName: '${2:finderUserName}',",
      "})"
    ],
    "description": "/** [wx.openChannelsEvent(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.openChannelsEvent.html)\n         *\n         * 需要基础库： `2.21.0`\n         *\n         * 打开视频号活动页 */",
    "detail": "function",
    "kind": 9
  },
  "wx.openChannelsLive": {
    "prefix": "wx.openChannelsLive",
    "body": [
      "wx.openChannelsLive({",
      "  finderUserName: '${1:finderUserName}',",
      "})"
    ],
    "description": "/** [wx.openChannelsLive(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.openChannelsLive.html)\n         *\n         * 需要基础库： `2.15.0`\n         *\n         * 打开视频号直播 */",
    "detail": "function",
    "kind": 9
  },
  "wx.openChannelsUserProfile": {
    "prefix": "wx.openChannelsUserProfile",
    "body": [
      "wx.openChannelsUserProfile({",
      "  finderUserName: '${1:finderUserName}',",
      "})"
    ],
    "description": "/** [wx.openChannelsUserProfile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.openChannelsUserProfile.html)\n         *\n         * 需要基础库： `2.21.2`\n         *\n         * 打开视频号主页 */",
    "detail": "function",
    "kind": 9
  },
  "wx.openCustomerServiceConversation": {
    "prefix": "wx.openCustomerServiceConversation",
    "body": [
      "wx.openCustomerServiceConversation()"
    ],
    "description": "/** [wx.openCustomerServiceConversation(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/customer-message/wx.openCustomerServiceConversation.html)\n         *\n         * 需要基础库： `2.0.3`\n         *\n         * 进入客服会话。要求在用户发生过至少一次 touch 事件后才能调用。后台接入方式与小程序一致，详见 [客服消息接入](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/customer-message/customer-message.html)\n         *\n         * **注意事项**\n         *\n         * - 在客服会话内点击小程序消息卡片进入小程序时，不能通过 wx.onShow 或 wx.getEnterOptionsSync 等接口获取启动路径和参数，而是应该通过 wx.openCustomerServiceConversation 接口的 success 回调获取启动路径和参数 */",
    "detail": "function",
    "kind": 9
  },
  "wx.openSetting": {
    "prefix": "wx.openSetting",
    "body": [
      "wx.openSetting()"
    ],
    "description": "/** [wx.openSetting(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.openSetting.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 调起客户端小程序设置界面，返回用户设置的操作结果。**设置界面只会出现小程序已经向用户请求过的[权限](https://developers.weixin.qq.com/minigame/dev/guide/framework/authorize.html)**。\n*\n* ****\n*\n* - 注意：[2.3.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，用户发生点击行为后，才可以跳转打开设置页，管理授权信息。[详情](https://developers.weixin.qq.com/community/develop/doc/000cea2305cc5047af5733de751008)\n*\n* **示例代码**\n*\n* ```js\nwx.openSetting({\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.openSystemBluetoothSetting": {
    "prefix": "wx.openSystemBluetoothSetting",
    "body": [
      "wx.openSystemBluetoothSetting()"
    ],
    "description": "/** [wx.openSystemBluetoothSetting(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/system/wx.openSystemBluetoothSetting.html)\n*\n* 需要基础库： `2.25.3`\n*\n* 跳转系统蓝牙设置页。仅支持安卓。\n*\n* **示例代码**\n*\n* ```js\nwx.openSystemBluetoothSetting({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.operateGameRecorderVideo": {
    "prefix": "wx.operateGameRecorderVideo",
    "body": [
      "wx.operateGameRecorderVideo()"
    ],
    "description": "/** [wx.operateGameRecorderVideo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/wx.operateGameRecorderVideo.html)\n         *\n         * 需要基础库： `2.26.1`\n         *\n         * 分享游戏对局回放。安卓微信8.0.28开始支持，iOS微信8.0.30开始支持。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.previewImage": {
    "prefix": "wx.previewImage",
    "body": [
      "wx.previewImage({",
      "  urls: [$1],",
      "})"
    ],
    "description": "/** [wx.previewImage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.previewImage.html)\n*\n* 在新页面中全屏预览图片。预览的过程中用户可以进行保存图片、发送给朋友等操作。\n*\n* **支持长按识别的码**\n*\n* | 类型 | 说明 | 最低版本 |\n* |------|------| -------|\n* | 小程序码 |    |\n* | 微信个人码 | 不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n* | 企业微信个人码 | 不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n* | 普通群码 | 指仅包含微信用户的群，不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n* | 互通群码 |  指既有微信用户也有企业微信用户的群，不支持小游戏  | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n* | 公众号二维码 | 不支持小游戏  | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n*\n* **示例代码**\n*\n* ```js\nwx.previewImage({\n  current: '', // 当前显示图片的http链接\n  urls: [] // 需要预览的图片http链接列表\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.previewMedia": {
    "prefix": "wx.previewMedia",
    "body": [
      "wx.previewMedia({",
      "  sources: [$1],",
      "})"
    ],
    "description": "/** [wx.previewMedia(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.previewMedia.html)\n         *\n         * 需要基础库： `2.12.0`\n         *\n         * 预览图片和视频。\n         *\n         * **支持长按识别的码**\n         *\n         * | 类型 | 说明 | 最低版本 |\n         * |------|------| -------|\n         * | 小程序码 |    |\n         * | 微信个人码 | 不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n         * | 企业微信个人码 | 不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n         * | 普通群码 | 指仅包含微信用户的群，不支持小游戏   | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n         * | 互通群码 |  指既有微信用户也有企业微信用户的群，不支持小游戏  | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) |\n         * | 公众号二维码 | 不支持小游戏  | [2.18.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) | */",
    "detail": "function",
    "kind": 9
  },
  "wx.readBLECharacteristicValue": {
    "prefix": "wx.readBLECharacteristicValue",
    "body": [
      "wx.readBLECharacteristicValue({",
      "  characteristicId: '${1:characteristicId}',",
      "  deviceId: '${2:deviceId}',",
      "  serviceId: '${3:serviceId}',",
      "})"
    ],
    "description": "/** [wx.readBLECharacteristicValue(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.readBLECharacteristicValue.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 读取蓝牙低功耗设备特征值的二进制数据。注意：必须设备的特征支持 read 才可以成功调用。\n*\n* **注意**\n*\n* - 并行调用多次会存在读失败的可能性。\n* - 接口读取到的信息需要在 [wx.onBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html) 方法注册的回调中获取。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\n// 必须在这里的回调才能获取\nwx.onBLECharacteristicValueChange(function(characteristic) {\n  console.log('characteristic value comed:', characteristic)\n})\n\nwx.readBLECharacteristicValue({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  success (res) {\n    console.log('readBLECharacteristicValue:', res.errCode)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.removeStorage": {
    "prefix": "wx.removeStorage",
    "body": [
      "wx.removeStorage({",
      "  key: '${1:key}',",
      "})"
    ],
    "description": "/** [wx.removeStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.removeStorage.html)\n*\n* 从本地缓存中移除指定 key。\n*\n* **示例代码**\n*\n* ```js\nwx.removeStorage({\n  key: 'key',\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* ```js\ntry {\n  wx.removeStorageSync('key')\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.removeStorageSync": {
    "prefix": "wx.removeStorageSync",
    "body": [
      "wx.removeStorageSync('${1:key}')"
    ],
    "description": "/** [wx.removeStorageSync(string key)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.removeStorageSync.html)\n*\n* [wx.removeStorage](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.removeStorage.html) 的同步版本\n*\n* **示例代码**\n*\n* ```js\nwx.removeStorage({\n  key: 'key',\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* ```js\ntry {\n  wx.removeStorageSync('key')\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.removeUserCloudStorage": {
    "prefix": "wx.removeUserCloudStorage",
    "body": [
      "wx.removeUserCloudStorage({",
      "  keyList: [$1],",
      "})"
    ],
    "description": "/** [wx.removeUserCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.removeUserCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 删除用户托管数据当中对应 key 的数据。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.reportEvent": {
    "prefix": "wx.reportEvent",
    "body": [
      "wx.reportEvent('${1:eventId}', ${2:data})"
    ],
    "description": "/** [wx.reportEvent(string eventId, object data)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.reportEvent.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 事件上报 */",
    "detail": "function",
    "kind": 9
  },
  "wx.reportMonitor": {
    "prefix": "wx.reportMonitor",
    "body": [
      "wx.reportMonitor('${1:name}', ${2:0})"
    ],
    "description": "/** [wx.reportMonitor(string name, number value)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.reportMonitor.html)\n*\n* 需要基础库： `2.1.2`\n*\n* 自定义业务数据监控上报接口。\n*\n* **使用说明**\n*\n* 使用前，需要在「小程序管理后台-运维中心-性能监控-业务数据监控」中新建监控事件，配置监控描述与告警类型。每一个监控事件对应唯一的监控ID，开发者最多可以创建128个监控事件。\n*\n* **示例代码**\n*\n* ```js\nwx.reportMonitor('1', 1)\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.reportPerformance": {
    "prefix": "wx.reportPerformance",
    "body": [
      "wx.reportPerformance(${1:0}, ${2:0}, ${3:dimensions})"
    ],
    "description": "/** [wx.reportPerformance(Number id, Number value, String|Array dimensions)](https://developers.weixin.qq.com/minigame/dev/api/base/performance/wx.reportPerformance.html)\n*\n* 需要基础库： `2.10.0`\n*\n* 小程序测速上报。使用前，需要在小程序管理后台配置。 详情参见[小程序测速](https://developers.weixin.qq.com/miniprogram/dev/framework/performanceReport/)指南。\n*\n* **示例代码**\n*\n* ```js\nwx.reportPerformance(1101, 680)\nwx.reportPerformance(1101, 680, 'custom')\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.reportScene": {
    "prefix": "wx.reportScene",
    "body": [
      "wx.reportScene({",
      "  sceneId: ${1:0},",
      "})"
    ],
    "description": "/** [wx.reportScene(Object object)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.reportScene.html)\n*\n* 需要基础库： `2.26.2`\n*\n* 用于游戏启动阶段的自定义场景上报。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/minigame/dev/guide/performance/perf-action-start-reportScene.html)。\n*\n* **示例代码**\n*\n* ```js\nwx.reportScene({\n  sceneId: 1000,\n  costTime: 350,\n  dimension: {\n    d1: '2.1.0', // value仅支持传入String类型。若value表示Boolean，请将值处理为'0'、'1'进行上报；若value为Number，请转换为String进行上报\n  },\n  metric: {\n    m1: '546', // value仅支持传入数值且需要转换为String类型进行上报\n  },\n  success (res) {\n    // 上报接口执行完成后的回调，用于检查上报数据是否符合预期\n    console.log(res)\n  },\n  fail (res) {\n    // 上报报错时的回调，用于查看上报错误的原因：如参数类型错误等\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.reportUserBehaviorBranchAnalytics": {
    "prefix": "wx.reportUserBehaviorBranchAnalytics",
    "body": [
      "wx.reportUserBehaviorBranchAnalytics({",
      "  branchId: '${1:branchId}',",
      "  eventType: ${2:0},",
      "})"
    ],
    "description": "/** [wx.reportUserBehaviorBranchAnalytics(Object object)](https://developers.weixin.qq.com/minigame/dev/api/data-analysis/wx.reportUserBehaviorBranchAnalytics.html)\n         *\n         * 需要基础库： `2.12.0`\n         *\n         * 用于分支相关的UI组件（一般是按钮）相关事件的上报，事件目前有曝光、点击两种 */",
    "detail": "function",
    "kind": 9
  },
  "wx.requestMidasFriendPayment": {
    "prefix": "wx.requestMidasFriendPayment",
    "body": [
      "wx.requestMidasFriendPayment({",
      "  buyQuantity: ${1:0},",
      "  currencyType: ${2:currencyType},",
      "  env: ${3:env},",
      "  mode: ${4:mode},",
      "  nonceStr: '${5:nonceStr}',",
      "  offerId: '${6:offerId}',",
      "  outTradeNo: '${7:outTradeNo}',",
      "  platform: ${8:platform},",
      "  signature: '${9:signature}',",
      "  timeStamp: ${10:0},",
      "  zoneId: '${11:zoneId}',",
      "})"
    ],
    "description": "/** [wx.requestMidasFriendPayment(Object object)](https://developers.weixin.qq.com/minigame/dev/api/midas-payment/wx.requestMidasFriendPayment.html)\n*\n* 需要基础库： `2.11.0`\n*\n* 发起米大师朋友礼物索要。接口用法详见 [小游戏礼物索要接入指南](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/friend-payment.html)\n*\n* **示例代码**\n*\n* ```js\nwx.requestMidasFriendPayment({\n  success(res) {\n    // res\n    {\n      errMsg: 'requestMidasFriendPayment:ok',\n      encryptedData: 'xxxx',\n      iv: 'xxx'\n    }\n  },\n  fail() {\n\n  }\n})\n```\n*\n* encryptedData 解密后数据结构如下：\n*\n* ```json\n{\n  \"outTradeNo\": \"xxxxxxxx\",\n  \"orderNo\": \"PBgAAHMjeOhixxxx\",\n  \"watermark\": {\n    \"timestamp\": 1585537091,\n    \"appid\": \"wx7a727ff7d940xxxx\"\n  }\n}\n```\n*\n* **buyQuantity限制说明**\n*\n* 购买游戏币的时候，buyQuantity 不可任意填写。需满足 buyQuantity * 游戏币单价 = 限定的价格等级。如：游戏币单价为 0.1 元，一次购买最少数量是 10。\n*\n* 有效价格等级如下：\n*\n* | 价格等级（单位：人民币） |\n* |----------------------|\n* | 1 |\n* | 3 |\n* | 6 |\n* | 8 |\n* | 12 |\n* | 18 |\n* | 25 |\n* | 30 |\n* | 40 |\n* | 45 |\n* | 50 |\n* | 60 |\n* | 68 |\n* | 73 |\n* | 78 |\n* | 88 |\n* | 98 |\n* | 108 |\n* | 118 |\n* | 128 |\n* | 148 |\n* | 168 |\n* | 188 |\n* | 198 |\n* | 328 |\n* | 648 |\n* | 998 |\n* | 1998 |\n* | 2998 | */",
    "detail": "function",
    "kind": 9
  },
  "wx.requestMidasPayment": {
    "prefix": "wx.requestMidasPayment",
    "body": [
      "wx.requestMidasPayment({",
      "  currencyType: ${1:currencyType},",
      "  mode: ${2:mode},",
      "  offerId: '${3:offerId}',",
      "})"
    ],
    "description": "/** [wx.requestMidasPayment(Object object)](https://developers.weixin.qq.com/minigame/dev/api/midas-payment/wx.requestMidasPayment.html)\n         *\n         * 发起米大师支付\n         *\n         * **buyQuantity 限制说明**\n         *\n         * 购买游戏币的时候，buyQuantity 不可任意填写。需满足 buyQuantity * 游戏币单价 = 限定的价格等级。如：游戏币单价为 0.1 元，一次购买最少数量是 10。\n         *\n         * 有效价格等级如下：\n         *\n         * | 价格等级（单位：人民币） |\n         * |----------------------|\n         * | 1 |\n         * | 3 |\n         * | 6 |\n         * | 8 |\n         * | 12 |\n         * | 18 |\n         * | 25 |\n         * | 30 |\n         * | 40 |\n         * | 45 |\n         * | 50 |\n         * | 60 |\n         * | 68 |\n         * | 73 |\n         * | 78 |\n         * | 88 |\n         * | 98 |\n         * | 108 |\n         * | 118 |\n         * | 128 |\n         * | 148 |\n         * | 168 |\n         * | 188 |\n         * | 198 |\n         * | 328 |\n         * | 648 |\n         * | 998 |\n         * | 1998 |\n         * | 2998 | */",
    "detail": "function",
    "kind": 9
  },
  "wx.requestSubscribeMessage": {
    "prefix": "wx.requestSubscribeMessage",
    "body": [
      "wx.requestSubscribeMessage({",
      "  tmplIds: [$1],",
      "})"
    ],
    "description": "/** [wx.requestSubscribeMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/subscribe-message/wx.requestSubscribeMessage.html)\n*\n* 需要基础库： `2.4.4`\n*\n* 调起客户端小游戏订阅消息界面，返回用户订阅消息的操作结果。当用户勾选了订阅面板中的“总是保持以上选择，不再询问”时，模板消息会被添加到用户的小游戏设置页，通过 [wx.getSetting](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.getSetting.html) 接口可获取用户对相关模板消息的订阅状态。\n*\n* ## 注意事项\n*  - 一次性模板 id 和永久模板 id 不可同时使用。\n*  - 低版本基础库2.4.4~2.8.3 已支持订阅消息接口调用，仅支持传入一个一次性 tmplId / 永久 tmplId。\n*  - [2.8.2](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，用户发生点击行为或者发起支付回调后，才可以调起订阅消息界面。\n*  - [2.10.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，开发版和体验版小游戏将禁止使用模板消息 fomrId。\n*  - 使用前建议阅读 [小游戏订阅消息使用指引](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/subscribe-message.html)。\n*  - 一次授权调用里，每个tmplId对应的模板标题不能存在相同的，若出现相同的，只保留一个。\n*\n* **错误码**\n*\n* | errCode | errMsg                                                 | 说明                                                           |\n* | ------- | ------------------------------------------------------ | -------------------------------------------------------------- |\n* | 10001   | TmplIds can't be empty                                 | 参数传空了                                                     |\n* | 10002   | Request list fail                                       | 网络问题，请求消息列表失败                                     |\n* | 10003   | Request subscribe fail                                 | 网络问题，订阅请求发送失败                                     |\n* | 10004   | Invalid template id                                    | 参数类型错误                                                   |\n* | 10005   | Cannot show subscribe message UI                       | 无法展示 UI，一般是小游戏这个时候退后台了导致的                |\n* | 20001   | No template data return, verify the template id exist  | 没有模板数据，一般是模板 ID 不存在 或者和模板类型不对应 导致的 |\n* | 20002   | Templates type must be same                            | 模板消息类型 既有一次性的又有永久的                            |\n* | 20003   | Templates count out of max bounds                      | 模板消息数量超过上限                                           |\n* | 20004   | The main switch is switched off                        | 用户关闭了主开关，无法进行订阅                                 |\n* | 20005   | This mini program was banned from subscribing messages | 小游戏被禁封                                                   |\n*\n* **示例代码**\n*\n* ```js\nwx.requestSubscribeMessage({\n  tmplIds: [''],\n  success (res) {\n    console.log(res)\n    res === {\n       errMsg: \"requestSubscribeMessage:ok\",\n       \"zun-LzcQyW-edafCVvzPkK4de2Rllr1fFpw2A_x0oXE\": \"accept\"\n    }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.requestSubscribeSystemMessage": {
    "prefix": "wx.requestSubscribeSystemMessage",
    "body": [
      "wx.requestSubscribeSystemMessage({",
      "  msgTypeList: [$1],",
      "})"
    ],
    "description": "/** [wx.requestSubscribeSystemMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/subscribe-message/wx.requestSubscribeSystemMessage.html)\n*\n* 需要基础库： `2.9.4`\n*\n* 调起小游戏系统订阅消息界面，返回用户订阅消息的操作结果。当用户勾选了订阅面板中的“总是保持以上选择，不再询问”时，模板消息会被添加到用户的小游戏设置页，通过 [wx.getSetting](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/wx.getSetting.html) 接口可获取用户对相关模板消息的订阅状态。\n*\n* ## 注意事项\n*  - 需要在 touchend 事件的回调中调用。\n*  - 使用前建议阅读 [小游戏系统订阅消息使用指引](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/subscribe-system-message.html)。\n*  - 系统订阅消息只需要订阅一次，永久有效。\n*\n* **错误码**\n*\n* | errCode | errMsg                                                 | 说明                                                           |\n* | ------- | ------------------------------------------------------ | -------------------------------------------------------------- |\n* | 10001   | TmplIds can't be empty                                 | 参数传空了                                                     |\n* | 10002   | Request list fail                                       | 网络问题，请求消息列表失败                                     |\n* | 10003   | Request subscribe fail                                 | 网络问题，订阅请求发送失败                                     |\n* | 10004   | Invalid template id                                    | 参数类型错误                                                   |\n* | 10005   | Cannot show subscribe message UI                       | 无法展示 UI，一般是小游戏这个时候退后台了导致的                |\n* | 20004   | The main switch is switched off                        | 用户关闭了主开关，无法进行订阅                                 |\n* | 20005   | This mini program was banned from subscribing messages | 小游戏被禁封                                                   |\n*\n* **示例代码**\n*\n* ```js\nwx.requestSubscribeSystemMessage({\n  msgTypeList: ['SYS_MSG_TYPE_INTERACTIVE', 'SYS_MSG_TYPE_RANK'],\n  success (res) {\n    console.log(res)\n    // res === {\n    //   errMsg: \"requestSubscribeSystemMessage:ok\",\n    //   SYS_MSG_TYPE_INTERACTIVE: \"accept\",\n    //   SYS_MSG_TYPE_RANK: 'reject'\n    // }\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.reserveChannelsLive": {
    "prefix": "wx.reserveChannelsLive",
    "body": [
      "wx.reserveChannelsLive({",
      "  noticeId: '${1:noticeId}',",
      "})"
    ],
    "description": "/** [wx.reserveChannelsLive(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/channels/wx.reserveChannelsLive.html)\n         *\n         * 需要基础库： `2.19.0`\n         *\n         * 预约视频号直播 */",
    "detail": "function",
    "kind": 9
  },
  "wx.restartMiniProgram": {
    "prefix": "wx.restartMiniProgram",
    "body": [
      "wx.restartMiniProgram()"
    ],
    "description": "/** [wx.restartMiniProgram(Object object)](https://developers.weixin.qq.com/minigame/dev/api/navigate/wx.restartMiniProgram.html)\n         *\n         * 需要基础库： `2.22.1`\n         *\n         * 重启当前小程序 */",
    "detail": "function",
    "kind": 9
  },
  "wx.revokeBufferURL": {
    "prefix": "wx.revokeBufferURL",
    "body": [
      "wx.revokeBufferURL('${1:url}')"
    ],
    "description": "/** [wx.revokeBufferURL(string url)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.revokeBufferURL.html)\n         *\n         * 需要基础库： `2.14.0`\n         *\n         * 根据 URL 销毁存在内存中的数据 */",
    "detail": "function",
    "kind": 9
  },
  "wx.saveFileToDisk": {
    "prefix": "wx.saveFileToDisk",
    "body": [
      "wx.saveFileToDisk({",
      "  filePath: '${1:filePath}',",
      "})"
    ],
    "description": "/** [wx.saveFileToDisk(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/wx.saveFileToDisk.html)\n*\n* 需要基础库： `2.11.0`\n*\n* 保存文件系统的文件到用户磁盘，仅在 PC 端支持\n*\n* **示例代码**\n*\n* ```js\nwx.saveFileToDisk({\n  filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,\n  success(res) {\n    console.log(res)\n  },\n  fail(res) {\n    console.error(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.saveImageToPhotosAlbum": {
    "prefix": "wx.saveImageToPhotosAlbum",
    "body": [
      "wx.saveImageToPhotosAlbum({",
      "  filePath: '${1:filePath}',",
      "})"
    ],
    "description": "/** [wx.saveImageToPhotosAlbum(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/image/wx.saveImageToPhotosAlbum.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 保存图片到系统相册。\n*\n* **示例代码**\n*\n* ```js\nwx.saveImageToPhotosAlbum({\n  success(res) { }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.scanCode": {
    "prefix": "wx.scanCode",
    "body": [
      "wx.scanCode()"
    ],
    "description": "/** [wx.scanCode(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/scan/wx.scanCode.html)\n*\n* 需要基础库： `2.16.1`\n*\n* 调起客户端扫码界面进行扫码\n*\n* **示例代码**\n*\n* ```js\n// 允许从相机和相册扫码\nwx.scanCode({\n  success (res) {\n    console.log(res)\n  }\n})\n\n// 只允许从相机扫码\nwx.scanCode({\n  onlyFromCamera: true,\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.sendSocketMessage": {
    "prefix": "wx.sendSocketMessage",
    "body": [
      "wx.sendSocketMessage({",
      "  data: ${1:data},",
      "})"
    ],
    "description": "/** [wx.sendSocketMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/wx.sendSocketMessage.html)\n*\n* @warning **推荐使用 [SocketTask](https://developers.weixin.qq.com/minigame/dev/api/network/websocket/SocketTask.html) 的方式去管理 webSocket 链接，每一条链路的生命周期都更加可控，同时存在多个 webSocket 的链接的情况下使用 wx 前缀的方法可能会带来一些和预期不一致的情况。**\n*\n* 通过 WebSocket 连接发送数据。需要先 wx.connectSocket，并在 wx.onSocketOpen 回调之后才能发送。\n*\n* **示例代码**\n*\n* ```js\nlet socketOpen = false\nlet socketMsgQueue = []\nwx.connectSocket({\n  url: 'test.php'\n})\n\nwx.onSocketOpen(function(res) {\n  socketOpen = true\n  for (let i = 0; i < socketMsgQueue.length; i++){\n    sendSocketMessage(socketMsgQueue[i])\n  }\n  socketMsgQueue = []\n})\n\nfunction sendSocketMessage(msg) {\n  if (socketOpen) {\n    wx.sendSocketMessage({\n      data:msg\n    })\n  } else {\n    socketMsgQueue.push(msg)\n  }\n}\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.setBLEMTU": {
    "prefix": "wx.setBLEMTU",
    "body": [
      "wx.setBLEMTU({",
      "  deviceId: '${1:deviceId}',",
      "  mtu: ${2:0},",
      "})"
    ],
    "description": "/** [wx.setBLEMTU(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.setBLEMTU.html)\n         *\n         * 需要基础库： `2.11.0`\n         *\n         * 协商设置蓝牙低功耗的最大传输单元 (Maximum Transmission Unit, MTU)。需在 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 调用成功后调用。仅安卓系统 5.1 以上版本有效，iOS 因系统限制不支持。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.setClipboardData": {
    "prefix": "wx.setClipboardData",
    "body": [
      "wx.setClipboardData({",
      "  data: '${1:data}',",
      "})"
    ],
    "description": "/** [wx.setClipboardData(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/clipboard/wx.setClipboardData.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 设置系统剪贴板的内容。调用成功后，会弹出 toast 提示\"内容已复制\"，持续 1.5s\n*\n* **示例代码**\n*\n* ```js\nwx.setClipboardData({\n  data: 'data',\n  success (res) {\n    wx.getClipboardData({\n      success (res) {\n        console.log(res.data) // data\n      }\n    })\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.setDeviceOrientation": {
    "prefix": "wx.setDeviceOrientation",
    "body": [
      "wx.setDeviceOrientation({",
      "  value: ${1:value},",
      "})"
    ],
    "description": "/** [wx.setDeviceOrientation(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/orientation/wx.setDeviceOrientation.html)\n         *\n         * 需要基础库： `2.26.0`\n         *\n         * 切换横竖屏。接口调用成功后会触发 wx.onDeviceOrientationChange 事件 */",
    "detail": "function",
    "kind": 9
  },
  "wx.setEnableDebug": {
    "prefix": "wx.setEnableDebug",
    "body": [
      "wx.setEnableDebug({",
      "  enableDebug: ${1:true},",
      "})"
    ],
    "description": "/** [wx.setEnableDebug(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/debug/wx.setEnableDebug.html)\n*\n* 需要基础库： `1.4.0`\n*\n* 设置是否打开调试开关。此开关对正式版也能生效。\n*\n* **示例代码**\n*\n* ```javascript\n// 打开调试\nwx.setEnableDebug({\n  enableDebug: true\n})\n\n// 关闭调试\nwx.setEnableDebug({\n  enableDebug: false\n})\n```\n*\n* **Tips**\n*\n* - 在正式版打开调试还有一种方法，就是先在开发版或体验版打开调试，再切到正式版就能看到vConsole。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.setInnerAudioOption": {
    "prefix": "wx.setInnerAudioOption",
    "body": [
      "wx.setInnerAudioOption()"
    ],
    "description": "/** [wx.setInnerAudioOption(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.setInnerAudioOption.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 设置 [InnerAudioContext](https://developers.weixin.qq.com/minigame/dev/api/media/audio/InnerAudioContext.html) 的播放选项。设置之后对当前小程序全局生效。\n         *\n         * ****\n         *\n         * ## 注意事项\n         * - 为保证微信整体体验，speakerOn 为 true 时，客户端会忽略 mixWithOthers 参数的内容，强制与其它音频互斥\n         * - 不支持在播放音频的过程中切换为扬声器播放，开发者如需切换可以先暂停当前播放的音频并记录下当前暂停的时间点，然后切换后重新从原来暂停的时间点开始播放音频\n         * - 目前 wx.setInnerAudioOption 接口不兼容 wx.createWebAudioContext 接口，也不兼容 wx.createInnerAudioContext 开启 useWebAudioImplement 的情况，将在后续版本中支持 */",
    "detail": "function",
    "kind": 9
  },
  "wx.setKeepScreenOn": {
    "prefix": "wx.setKeepScreenOn",
    "body": [
      "wx.setKeepScreenOn({",
      "  keepScreenOn: ${1:true},",
      "})"
    ],
    "description": "/** [wx.setKeepScreenOn(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/screen/wx.setKeepScreenOn.html)\n*\n* 需要基础库： `1.4.0`\n*\n* 设置是否保持常亮状态。仅在当前小程序生效，离开小程序后设置失效。\n*\n* **示例代码**\n*\n* ```js\nwx.setKeepScreenOn({\n  keepScreenOn: true\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.setMenuStyle": {
    "prefix": "wx.setMenuStyle",
    "body": [
      "wx.setMenuStyle({",
      "  style: ${1:style},",
      "})"
    ],
    "description": "/** [wx.setMenuStyle(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/menu/wx.setMenuStyle.html)\n         *\n         * 动态设置通过右上角按钮拉起的菜单的样式。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.setPreferredFramesPerSecond": {
    "prefix": "wx.setPreferredFramesPerSecond",
    "body": [
      "wx.setPreferredFramesPerSecond(${1:0})"
    ],
    "description": "/** [wx.setPreferredFramesPerSecond(number fps)](https://developers.weixin.qq.com/minigame/dev/api/render/frame/wx.setPreferredFramesPerSecond.html)\n         *\n         * 可以修改渲染帧率。默认渲染帧率为 60 帧每秒。修改后，requestAnimationFrame 的回调频率会发生改变。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.setScreenBrightness": {
    "prefix": "wx.setScreenBrightness",
    "body": [
      "wx.setScreenBrightness({",
      "  value: ${1:0},",
      "})"
    ],
    "description": "/** [wx.setScreenBrightness(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/screen/wx.setScreenBrightness.html)\n         *\n         * 需要基础库： `1.2.0`\n         *\n         * 设置屏幕亮度 */",
    "detail": "function",
    "kind": 9
  },
  "wx.setStatusBarStyle": {
    "prefix": "wx.setStatusBarStyle",
    "body": [
      "wx.setStatusBarStyle({",
      "  style: ${1:style},",
      "})"
    ],
    "description": "/** [wx.setStatusBarStyle(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/statusbar/wx.setStatusBarStyle.html)\n         *\n         * 当在配置中设置 showStatusBarStyle 时，屏幕顶部会显示状态栏。此接口可以修改状态栏的样式。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.setStorage": {
    "prefix": "wx.setStorage",
    "body": [
      "wx.setStorage(${1:option})"
    ],
    "description": "/** [wx.setStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.setStorage.html)\n*\n* 将数据存储在本地缓存中指定的 key 中。会覆盖掉原来该 key 对应的内容。除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。\n*\n* **示例代码**\n*\n* ```js\nwx.setStorage({\n  key:\"key\",\n  data:\"value\"\n})\n```\n*\n* ```js\n// 开启加密存储\nwx.setStorage({\n  key: \"key\",\n  data: \"value\",\n  encrypt: true, // 若开启加密存储，setStorage 和 getStorage 需要同时声明 encrypt 的值为 true\n  success() {\n    wx.getStorage({\n      key: \"key\",\n      encrypt: true, // 若开启加密存储，setStorage 和 getStorage 需要同时声明 encrypt 的值为 true\n      success(res) {\n        console.log(res.data)\n      }\n    })\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.setStorageSync": {
    "prefix": "wx.setStorageSync",
    "body": [
      "wx.setStorageSync('${1:key}', ${2:data})"
    ],
    "description": "/** [wx.setStorageSync(string key, any data)](https://developers.weixin.qq.com/minigame/dev/api/storage/wx.setStorageSync.html)\n*\n* 将数据存储在本地缓存中指定的 key 中。会覆盖掉原来该 key 对应的内容。除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。\n*\n* **注意**\n*\n* storage 应只用来进行数据的持久化存储，不应用于运行时的数据传递或全局状态管理。启动过程中过多的同步读写存储，会显著影响启动耗时。\n*\n* **示例代码**\n*\n* ```js\ntry {\n  wx.setStorageSync('key', 'value')\n} catch (e) { }\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.setUserCloudStorage": {
    "prefix": "wx.setUserCloudStorage",
    "body": [
      "wx.setUserCloudStorage({",
      "  KVDataList: [$1],",
      "})"
    ],
    "description": "/** [wx.setUserCloudStorage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.setUserCloudStorage.html)\n         *\n         * 需要基础库： `1.9.92`\n         *\n         * 对用户托管数据进行写数据操作。允许同时写多组 KV 数据。\n         *\n         * **托管数据的限制**\n         *\n         * 1. 每个openid所标识的微信用户在每个游戏上托管的数据不能超过128个key-value对。\n         * 2. 上报的key-value列表当中每一项的key+value长度都不能超过1K(1024)字节。\n         * 3. 上报的key-value列表当中每一个key长度都不能超过128字节。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.setWindowSize": {
    "prefix": "wx.setWindowSize",
    "body": [
      "wx.setWindowSize({",
      "  height: ${1:0},",
      "  width: ${2:0},",
      "})"
    ],
    "description": "/** [wx.setWindowSize(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/window/wx.setWindowSize.html)\n         *\n         * 需要基础库： `2.10.1`\n         * @deprecated 基础库版本 [2.11.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起已废弃\n         *\n         * 设置窗口大小，该接口仅适用于 PC 平台，使用细则请参见指南 */",
    "detail": "function",
    "kind": 9
  },
  "wx.shareAppMessage": {
    "prefix": "wx.shareAppMessage",
    "body": [
      "wx.shareAppMessage()"
    ],
    "description": "/** [wx.shareAppMessage(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.shareAppMessage.html)\n         *\n         * 主动拉起转发，进入选择通讯录界面。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.shareMessageToFriend": {
    "prefix": "wx.shareMessageToFriend",
    "body": [
      "wx.shareMessageToFriend({",
      "  openId: '${1:openId}',",
      "})"
    ],
    "description": "/** [wx.shareMessageToFriend(Object object)](https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.shareMessageToFriend.html)\n         *\n         * 需要基础库： `2.9.0`\n         *\n         * 给指定的好友分享游戏信息，该接口只可在开放数据域下使用。接收者打开之后，可以用 `wx.modifyFriendInteractiveStorage` 传入参数 quiet=true 发起一次无需弹框确认的好友互动。\n         *\n         * ****\n         *\n         * 定向分享不允许直接在开放数据域设置 query 参数\n         * 需要设置请参见游戏域 `wx.setMessageToFriendQuery` 接口 */",
    "detail": "function",
    "kind": 9
  },
  "wx.showActionSheet": {
    "prefix": "wx.showActionSheet",
    "body": [
      "wx.showActionSheet({",
      "  itemList: [$1],",
      "})"
    ],
    "description": "/** [wx.showActionSheet(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showActionSheet.html)\n*\n* 显示操作菜单\n*\n* **示例代码**\n*\n* ```js\nwx.showActionSheet({\n  itemList: ['A', 'B', 'C'],\n  success (res) {\n    console.log(res.tapIndex)\n  },\n  fail (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* **注意**\n*\n* - Android 6.7.2 以下版本，点击取消或蒙层时，回调 fail, errMsg 为 \"fail cancel\"；\n* - Android 6.7.2 及以上版本 和 iOS 点击蒙层不会关闭模态弹窗，所以尽量避免使用「取消」分支中实现业务逻辑 */",
    "detail": "function",
    "kind": 9
  },
  "wx.showKeyboard": {
    "prefix": "wx.showKeyboard",
    "body": [
      "wx.showKeyboard({",
      "  confirmHold: ${1:true},",
      "  confirmType: ${2:confirmType},",
      "  defaultValue: '${3:defaultValue}',",
      "  maxLength: ${4:0},",
      "  multiple: ${5:true},",
      "})"
    ],
    "description": "/** [wx.showKeyboard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.showKeyboard.html)\n         *\n         * 显示键盘 */",
    "detail": "function",
    "kind": 9
  },
  "wx.showLoading": {
    "prefix": "wx.showLoading",
    "body": [
      "wx.showLoading({",
      "  title: '${1:title}',",
      "})"
    ],
    "description": "/** [wx.showLoading(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showLoading.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 显示 loading 提示框。需主动调用 wx.hideLoading 才能关闭提示框\n*\n* **示例代码**\n*\n* ```js\nwx.showLoading({\n  title: '加载中',\n})\n\nsetTimeout(function () {\n  wx.hideLoading()\n}, 2000)\n```\n*\n* **注意**\n*\n* - [wx.showLoading](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showLoading.html) 和 [wx.showToast](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showToast.html) 同时只能显示一个\n* - [wx.showLoading](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showLoading.html) 应与 [wx.hideLoading](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.hideLoading.html) 配对使用 */",
    "detail": "function",
    "kind": 9
  },
  "wx.showModal": {
    "prefix": "wx.showModal",
    "body": [
      "wx.showModal({",
      "  title: '$1',",
      "  content: '$2',",
      "  complete: (res) => {",
      "    if (res.cancel) {",
      "      $3",
      "    }",
      "",
      "    if (res.confirm) {",
      "      $4",
      "    }",
      "  }",
      "})"
    ],
    "description": "/** [wx.showModal(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showModal.html)\n*\n* 显示模态对话框\n*\n* **示例代码**\n*\n* ```js\nwx.showModal({\n  title: '提示',\n  content: '这是一个模态弹窗',\n  success (res) {\n    if (res.confirm) {\n      console.log('用户点击确定')\n    } else if (res.cancel) {\n      console.log('用户点击取消')\n    }\n  }\n})\n```\n*\n* **注意**\n*\n* - Android 6.7.2 以下版本，点击取消或蒙层时，回调 fail, errMsg 为 \"fail cancel\"；\n* - Android 6.7.2 及以上版本 和 iOS 点击蒙层不会关闭模态弹窗，所以尽量避免使用「取消」分支中实现业务逻辑\n* - 自基础库 2.17.1 版本起，支持传入 editable 参数，显示带输入框的弹窗 */",
    "detail": "function",
    "kind": 9
  },
  "wx.showShareImageMenu": {
    "prefix": "wx.showShareImageMenu",
    "body": [
      "wx.showShareImageMenu({",
      "  path: '${1:path}',",
      "})"
    ],
    "description": "/** [wx.showShareImageMenu(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.showShareImageMenu.html)\n         *\n         * 需要基础库： `2.14.3`\n         *\n         * 打开分享图片弹窗，可以将图片发送给朋友、收藏或下载 */",
    "detail": "function",
    "kind": 9
  },
  "wx.showShareMenu": {
    "prefix": "wx.showShareMenu",
    "body": [
      "wx.showShareMenu()"
    ],
    "description": "/** [wx.showShareMenu(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.showShareMenu.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 显示当前页面的转发按钮\n*\n* ****\n*\n* ## 注意事项\n*  - \"shareAppMessage\"表示“发送给朋友”按钮，\"shareTimeline\"表示“分享到朋友圈”按钮\n*  - 显示“分享到朋友圈”按钮时必须同时显示“发送给朋友”按钮，显示“发送给朋友”按钮时则允许不显示“分享到朋友圈”按钮\n*\n* **示例代码**\n*\n* ```js\nwx.showShareMenu({\n  withShareTicket: true,\n  menus: ['shareAppMessage', 'shareTimeline']\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.showToast": {
    "prefix": "wx.showToast",
    "body": [
      "wx.showToast({",
      "  title: '${1:title}',",
      "})"
    ],
    "description": "/** [wx.showToast(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showToast.html)\n*\n* 显示消息提示框\n*\n* **示例代码**\n*\n* ```js\nwx.showToast({\n  title: '成功',\n  icon: 'success',\n  duration: 2000\n})\n```\n*\n* **注意**\n*\n* - [wx.showLoading](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showLoading.html) 和 [wx.showToast](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showToast.html) 同时只能显示一个\n* - [wx.showToast](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.showToast.html) 应与 [wx.hideToast](https://developers.weixin.qq.com/minigame/dev/api/ui/interaction/wx.hideToast.html) 配对使用 */",
    "detail": "function",
    "kind": 9
  },
  "wx.startAccelerometer": {
    "prefix": "wx.startAccelerometer",
    "body": [
      "wx.startAccelerometer()"
    ],
    "description": "/** [wx.startAccelerometer(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.startAccelerometer.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 开始监听加速度数据。\n*\n* **示例代码**\n*\n* ```js\nwx.startAccelerometer({\n  interval: 'game'\n})\n```\n*\n* **注意**\n*\n* - 根据机型性能、当前 CPU 与内存的占用情况，`interval` 的设置与实际 `wx.onAccelerometerChange()` 回调函数的执行频率会有一些出入。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.startBeaconDiscovery": {
    "prefix": "wx.startBeaconDiscovery",
    "body": [
      "wx.startBeaconDiscovery({",
      "  uuids: [$1],",
      "})"
    ],
    "description": "/** [wx.startBeaconDiscovery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.startBeaconDiscovery.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 开始搜索附近的 Beacon 设备\n*\n* **示例代码**\n*\n* ```js\nwx.startBeaconDiscovery({\n  success(res) { }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.startBluetoothDevicesDiscovery": {
    "prefix": "wx.startBluetoothDevicesDiscovery",
    "body": [
      "wx.startBluetoothDevicesDiscovery()"
    ],
    "description": "/** [wx.startBluetoothDevicesDiscovery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.startBluetoothDevicesDiscovery.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 开始搜寻附近的蓝牙外围设备。\n*\n* **此操作比较耗费系统资源，请在搜索到需要的设备后及时调用 [wx.stopBluetoothDevicesDiscovery](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.stopBluetoothDevicesDiscovery.html) 停止搜索。**\n*\n* **注意**\n*\n* - 考虑到蓝牙功能可以间接进行定位，安卓 6.0 及以上版本，无定位权限或定位开关未打开时，无法进行设备搜索。这种情况下，安卓 8.0.16 前，接口调用成功但无法扫描设备；8.0.16 及以上版本，会返回错误。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/m7klFDmZ72i1)\n*\n* ```js\n// 以微信硬件平台的蓝牙智能灯为例，主服务的 UUID 是 FEE7。传入这个参数，只搜索主服务 UUID 为 FEE7 的设备\nwx.startBluetoothDevicesDiscovery({\n  services: ['FEE7'],\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.startCompass": {
    "prefix": "wx.startCompass",
    "body": [
      "wx.startCompass()"
    ],
    "description": "/** [wx.startCompass(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/compass/wx.startCompass.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 开始监听罗盘数据\n*\n* **示例代码**\n*\n* ```js\nwx.startCompass()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.startDeviceMotionListening": {
    "prefix": "wx.startDeviceMotionListening",
    "body": [
      "wx.startDeviceMotionListening()"
    ],
    "description": "/** [wx.startDeviceMotionListening(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.startDeviceMotionListening.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 开始监听设备方向的变化。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.startGyroscope": {
    "prefix": "wx.startGyroscope",
    "body": [
      "wx.startGyroscope()"
    ],
    "description": "/** [wx.startGyroscope(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.startGyroscope.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 开始监听陀螺仪数据。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.startHandoff": {
    "prefix": "wx.startHandoff",
    "body": [
      "wx.startHandoff()"
    ],
    "description": "/** [wx.startHandoff(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.startHandoff.html)\n         *\n         * 需要基础库： `2.14.4`\n         *\n         * 开始进行接力，该接口需要在开放数据域调用 */",
    "detail": "function",
    "kind": 9
  },
  "wx.stopAccelerometer": {
    "prefix": "wx.stopAccelerometer",
    "body": [
      "wx.stopAccelerometer()"
    ],
    "description": "/** [wx.stopAccelerometer(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/accelerometer/wx.stopAccelerometer.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 停止监听加速度数据。\n*\n* **示例代码**\n*\n* ```js\nwx.stopAccelerometer()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.stopBeaconDiscovery": {
    "prefix": "wx.stopBeaconDiscovery",
    "body": [
      "wx.stopBeaconDiscovery()"
    ],
    "description": "/** [wx.stopBeaconDiscovery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/ibeacon/wx.stopBeaconDiscovery.html)\n         *\n         * 需要基础库： `2.9.2`\n         *\n         * 停止搜索附近的 Beacon 设备 */",
    "detail": "function",
    "kind": 9
  },
  "wx.stopBluetoothDevicesDiscovery": {
    "prefix": "wx.stopBluetoothDevicesDiscovery",
    "body": [
      "wx.stopBluetoothDevicesDiscovery()"
    ],
    "description": "/** [wx.stopBluetoothDevicesDiscovery(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth/wx.stopBluetoothDevicesDiscovery.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 停止搜寻附近的蓝牙外围设备。若已经找到需要的蓝牙设备并不需要继续搜索时，建议调用该接口停止蓝牙搜索。\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.stopBluetoothDevicesDiscovery({\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.stopCompass": {
    "prefix": "wx.stopCompass",
    "body": [
      "wx.stopCompass()"
    ],
    "description": "/** [wx.stopCompass(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/compass/wx.stopCompass.html)\n*\n* 需要基础库： `1.1.0`\n*\n* 停止监听罗盘数据\n*\n* **示例代码**\n*\n* ```js\nwx.stopCompass()\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.stopDeviceMotionListening": {
    "prefix": "wx.stopDeviceMotionListening",
    "body": [
      "wx.stopDeviceMotionListening()"
    ],
    "description": "/** [wx.stopDeviceMotionListening(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/motion/wx.stopDeviceMotionListening.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 停止监听设备方向的变化。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.stopFaceDetect": {
    "prefix": "wx.stopFaceDetect",
    "body": [
      "wx.stopFaceDetect()"
    ],
    "description": "/** [wx.stopFaceDetect(Object object)](https://developers.weixin.qq.com/minigame/dev/api/ai/face/wx.stopFaceDetect.html)\n         *\n         * 需要基础库： `2.18.0`\n         *\n         * @warning **该接口已停止维护，推荐使用 [wx.createVKSession](#) 代替**\n         *\n         * 停止人脸检测。本接口不再维护，请使用 [wx.createVKSession](#) 接口代替。详情参考[人脸检测指南文档](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/visionkit/face.html) */",
    "detail": "function",
    "kind": 9
  },
  "wx.stopGyroscope": {
    "prefix": "wx.stopGyroscope",
    "body": [
      "wx.stopGyroscope()"
    ],
    "description": "/** [wx.stopGyroscope(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/gyroscope/wx.stopGyroscope.html)\n         *\n         * 需要基础库： `2.3.0`\n         *\n         * 停止监听陀螺仪数据。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.triggerGC": {
    "prefix": "wx.triggerGC",
    "body": [
      "wx.triggerGC()"
    ],
    "description": "/** [wx.triggerGC()](https://developers.weixin.qq.com/minigame/dev/api/base/performance/wx.triggerGC.html)\n         *\n         * 加快触发 JavaScriptCore 垃圾回收（Garbage Collection）。GC 时机是由 JavaScriptCore 来控制的，并不能保证调用后马上触发 GC。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.updateKeyboard": {
    "prefix": "wx.updateKeyboard",
    "body": [
      "wx.updateKeyboard({",
      "  value: '${1:value}',",
      "})"
    ],
    "description": "/** [wx.updateKeyboard(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/keyboard/wx.updateKeyboard.html)\n         *\n         * 需要基础库： `2.1.0`\n         *\n         * 更新键盘输入框内容。只有当键盘处于拉起状态时才会产生效果 */",
    "detail": "function",
    "kind": 9
  },
  "wx.updateShareMenu": {
    "prefix": "wx.updateShareMenu",
    "body": [
      "wx.updateShareMenu()"
    ],
    "description": "/** [wx.updateShareMenu(Object object)](https://developers.weixin.qq.com/minigame/dev/api/share/wx.updateShareMenu.html)\n*\n* 需要基础库： `1.2.0`\n*\n* 更新转发属性\n*\n* **示例代码**\n*\n* ```js\nwx.updateShareMenu({\n  withShareTicket: true,\n  success () { }\n})\n```\n* ```js\n// 转发私密消息\nwx.updateShareMenu({\n  isPrivateMessage: true,\n  activityId: 'xxx',\n  templateInfo: {},\n  success () { },\n  fail () {}\n})\n``` */",
    "detail": "function",
    "kind": 9
  },
  "wx.updateVoIPChatMuteConfig": {
    "prefix": "wx.updateVoIPChatMuteConfig",
    "body": [
      "wx.updateVoIPChatMuteConfig({",
      "  muteConfig: {$1},",
      "})"
    ],
    "description": "/** [wx.updateVoIPChatMuteConfig(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/voip/wx.updateVoIPChatMuteConfig.html)\n         *\n         * 需要基础库： `2.7.0`\n         *\n         * 更新实时语音静音设置 */",
    "detail": "function",
    "kind": 9
  },
  "wx.updateWeChatApp": {
    "prefix": "wx.updateWeChatApp",
    "body": [
      "wx.updateWeChatApp()"
    ],
    "description": "/** [wx.updateWeChatApp(Object object)](https://developers.weixin.qq.com/minigame/dev/api/base/update/wx.updateWeChatApp.html)\n         *\n         * 需要基础库： `2.12.0`\n         *\n         * 更新客户端版本。当判断用户小程序所在客户端版本过低时，可使用该接口跳转到更新微信页面。 */",
    "detail": "function",
    "kind": 9
  },
  "wx.vibrateLong": {
    "prefix": "wx.vibrateLong",
    "body": [
      "wx.vibrateLong()"
    ],
    "description": "/** [wx.vibrateLong(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/vibrate/wx.vibrateLong.html)\n         *\n         * 需要基础库： `1.2.0`\n         *\n         * 使手机发生较长时间的振动（400 ms) */",
    "detail": "function",
    "kind": 9
  },
  "wx.vibrateShort": {
    "prefix": "wx.vibrateShort",
    "body": [
      "wx.vibrateShort({",
      "  type: '${1:type}',",
      "})"
    ],
    "description": "/** [wx.vibrateShort(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/vibrate/wx.vibrateShort.html)\n         *\n         * 需要基础库： `1.2.0`\n         *\n         * 使手机发生较短时间的振动（15 ms）。仅在 iPhone `7 / 7 Plus` 以上及 Android 机型生效 */",
    "detail": "function",
    "kind": 9
  },
  "wx.writeBLECharacteristicValue": {
    "prefix": "wx.writeBLECharacteristicValue",
    "body": [
      "wx.writeBLECharacteristicValue({",
      "  characteristicId: '${1:characteristicId}',",
      "  deviceId: '${2:deviceId}',",
      "  serviceId: '${3:serviceId}',",
      "  value: ${4:value},",
      "})"
    ],
    "description": "/** [wx.writeBLECharacteristicValue(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.writeBLECharacteristicValue.html)\n*\n* 需要基础库： `2.9.2`\n*\n* 向蓝牙低功耗设备特征值中写入二进制数据。注意：必须设备的特征支持 write 才可以成功调用。\n*\n* **注意**\n*\n* - 并行调用多次会存在写失败的可能性。\n* - 小程序不会对写入数据包大小做限制，但系统与蓝牙设备会限制蓝牙 4.0 单次传输的数据大小，超过最大字节数后会发生写入错误，建议每次写入不超过 20 字节。\n* - 若单次写入数据过长，iOS 上存在系统不会有任何回调的情况（包括错误回调）。\n* - 安卓平台上，在调用 [wx.notifyBLECharacteristicValueChange](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html) 成功后立即调用本接口，在部分机型上会发生 10008 系统错误\n*\n* **示例代码**\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\n// 向蓝牙设备发送一个0x00的16进制数据\nlet buffer = new ArrayBuffer(1)\nlet dataView = new DataView(buffer)\ndataView.setUint8(0, 0)\n\nwx.writeBLECharacteristicValue({\n  // 这里的 deviceId 需要在 getBluetoothDevices 或 onBluetoothDeviceFound 接口中获取\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  // 这里的value是ArrayBuffer类型\n  value: buffer,\n  success (res) {\n    console.log('writeBLECharacteristicValue success', res.errMsg)\n  }\n})\n``` */",
    "detail": "function",
    "kind": 9
  }
}