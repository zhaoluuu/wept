!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const ESCAPE={n:"\n",f:"\f",r:"\r",t:"\t",v:"\v"},CONSTANTS={null:t=>null,true:t=>!0,false:t=>!1,undefined:t=>{}},OPERATORS={"===":(t,e,i)=>e(t)===i(t),"!==":(t,e,i)=>e(t)!==i(t),"==":(t,e,i)=>e(t)==i(t),"!=":(t,e,i)=>e(t)!=i(t),"&&":(t,e,i)=>e(t)&&i(t),"||":(t,e,i)=>e(t)||i(t),"!":(t,e)=>!e(t)};function isNumber(t){return t>="0"&&t<="9"&&"string"==typeof t}function isExpOperator(t){return"-"===t||"+"===t||isNumber(t)}function isIdent(t){return t>="a"&&t<="z"||t>="A"&&t<="Z"||"_"===t||"$"===t}class Expression{constructor(t){if(!t)throw new Error("invalid expression");this.content=t}lex(){const{content:t}=this,{length:e}=t;let i=0;const s=[];for(;i<e;){const r=t.charAt(i);if('"'===r||"'"===r){const n=++i;let o,h=!1,c="";for(;i<e;){const e=t.charAt(i);if(h){if("u"===e){const e=t.substring(i+1,i+5);if(!e.match(/[\da-f]{4}/i))throw new Error(`invalid expression: ${t}, invalid unicode escape [\\u${e}]`);i+=4,c+=String.fromCharCode(parseInt(e,16))}else{c+=ESCAPE[e]||e}h=!1}else if("\\"===e)h=!0;else{if(e===r){i++,o={index:n,constant:!0,text:r+c+r,value:c};break}c+=e}i++}if(!o)throw new Error("invalid expression: "+t);s.push(o)}else if(isNumber(r)||"."===r&&isNumber(t.charAt(i+1))){const r=i;let n="";for(;i<e;){const e=t.charAt(i).toLowerCase();if("."===e||isNumber(e))n+=e;else{const s=t.charAt(i+1);if("e"===e&&isExpOperator(s))n+=e;else{if(!(isExpOperator(e)&&s&&isNumber(s)&&n.endsWith("e"))){if(!isExpOperator(e)||s&&isNumber(s)||!n.endsWith("e"))break;throw new Error("invalid expression: "+t)}n+=e}}i++}s.push({index:r,constant:!0,text:n,value:Number(n)})}else if(isIdent(r)){const r=i;for(;i<e;){const e=t.charAt(i);if(!isIdent(e)&&!isNumber(e))break;i++}s.push({index:r,text:t.slice(r,i),identifier:!0})}else if("(){}[].,;:?".indexOf(r)>=0)s.push({index:i,text:r}),i++;else if(" "===r||"\r"===r||"\t"===r||"\n"===r||"\v"===r||"Â "===r)i++;else{const e=r+t.charAt(i+1),n=e+t.charAt(i+2),o=OPERATORS[e],h=OPERATORS[n];if(!(OPERATORS[r]||o||h))throw new Error("invalid expression: "+t);{const t=h?n:o?e:r;s.push({index:i,text:t,operator:!0}),i+=t.length}}}return this.tokens=s,s}parse(){const t=this.lex();let e;const i=t[0],{text:s}=i;return t.length>0&&"}"!==s&&")"!==s&&"]"!==s&&(e=this.expression()),t=>null==e?void 0:e(t)}expect(t){const{tokens:e}=this,i=e[0];if(!t||t===(null==i?void 0:i.text))return e.shift()}consume(t){if(!this.tokens.length)throw new Error("parse expression error: "+this.content);const e=this.expect(t);if(!e)throw new Error("parse expression error: "+this.content);return e}expression(){return this.ternary()}ternary(){const t=this.logicalOR();let e;if(e=this.expect("?")){const e=this.expression();this.consume(":");const i=this.expression();return s=>t(s)?e(s):i(s)}return t}binary(t,e,i){const s=OPERATORS[e];return e=>s(e,t,i)}unary(){let t;if(this.expect("+"))return this.primary();if(t=this.expect("-"))return this.binary(t=>0,t.text,this.unary());if(t=this.expect("!")){const e=OPERATORS[t.text],i=this.unary();return t=>e(t,i)}return this.primary()}logicalOR(){let t,e=this.logicalAND();for(;t=this.expect("||");)e=this.binary(e,t.text,this.logicalAND());return e}logicalAND(){let t,e=this.equality();for(;t=this.expect("&&");)e=this.binary(e,t.text,this.equality());return e}equality(){let t,e=this.relational();for(;t=this.expect("==")||this.expect("!=")||this.expect("===")||this.expect("!==");)e=this.binary(e,t.text,this.relational());return e}relational(){let t,e=this.additive();for(;t=this.expect("<")||this.expect(">")||this.expect("<=")||this.expect(">=");)e=this.binary(e,t.text,this.additive());return e}additive(){let t,e=this.multiplicative();for(;t=this.expect("+")||this.expect("-");)e=this.binary(e,t.text,this.multiplicative());return e}multiplicative(){let t,e=this.unary();for(;t=this.expect("*")||this.expect("/")||this.expect("%");)e=this.binary(e,t.text,this.unary());return e}primary(){const t=this.tokens[0];let e,i,s;if(this.expect("("))e=this.expression(),this.consume(")");else if(this.expect("["))e=this.array();else if(this.expect("{"))e=this.object();else if(t.identifier&&t.text in CONSTANTS)e=CONSTANTS[this.consume().text];else if(t.identifier)e=this.identifier();else{if(!t.constant)throw new Error("parse expression error: "+this.content);e=this.constant()}for(;i=this.expect("(")||this.expect("[")||this.expect(".");)"("===i.text?(e=this.functionCall(e,s),s=null):"["===i.text?(s=e,e=this.objectIndex(e)):(s=e,e=this.fieldAccess(e));return e}fieldAccess(t){const e=this.identifier();return i=>{const s=t(i);return s&&e(s)}}objectIndex(t){const e=this.expression();return this.consume("]"),i=>{const s=t(i),r=""+e(i);return null==s?void 0:s[r]}}functionCall(t,e){const i=[];if(")"!==this.tokens[0].text)do{i.push(this.expression())}while(this.expect(","));return this.consume(")"),s=>{const r=null==e?void 0:e(s),n=t(s,r);return null==n?void 0:n.apply(r,i.length?i.map(t=>t(s)):null)}}array(){const t=[];if("]"!==this.tokens[0].text)do{if("]"===this.tokens[0].text)break;t.push(this.expression())}while(this.expect(","));return this.consume("]"),e=>t.map(t=>t(e))}object(){const t=[],e=[];let i=this.tokens[0];if("}"!==i.text)do{if(i=this.tokens[0],"}"===i.text)break;if(i=this.consume(),i.constant)t.push(i.value);else{if(!i.identifier)throw new Error("parse expression error: "+this.content);t.push(i.text)}this.consume(":"),e.push(this.expression())}while(this.expect(","));return this.consume("}"),i=>{const s={};for(let r=0,{length:n}=e;r<n;r++)s[t[r]]=e[r](i);return s}}identifier(){let t=this.consume().text,e=this.tokens[0],i=this.tokens[1],s=this.tokens[2];for(;e&&"."===e.text&&i&&i.identifier&&s&&"("!==s.text;)t+=this.consume().text+this.consume().text,e=this.tokens[0],i=this.tokens[1],s=this.tokens[2];return e=>{const i=t.split(".");let s;for(let t=0;i.length>1&&(s=i.shift(),e=e[s]);t++);return s=i.shift(),null==e?void 0:e[s]}}constant(){const{value:t}=this.consume();return e=>t}}exports.default=Expression;
}(require("licia/lazyImport")(require), require)