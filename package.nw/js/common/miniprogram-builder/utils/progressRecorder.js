!function(require, directRequire){
"use strict";function pad(e,t=2){return e>10**t?String(e):`${new Array(t).join("0")}${e}`.slice(-t)}function getPrintTime(){const e=new Date;return`${String(e.getFullYear())}-${pad(e.getMonth()+1)}-${pad(e.getDate())} ${pad(e.getHours())}:${pad(e.getMinutes())}:${pad(e.getSeconds())}.${pad(e.getMilliseconds(),3)}`}Object.defineProperty(exports,"__esModule",{value:!0}),exports.silentRecorder=exports.Recorder=exports.getPrintTime=void 0,exports.getPrintTime=getPrintTime;let taskId=5e7;function genTaskId(){return taskId++}class Recorder{constructor(e){this.sendProgress=e}start(e){const t=genTaskId(),s=e.startsWith("!");s||this.sendProgress(t,"doing",e);const r=(e,r)=>{e?s||this.sendProgress(t,"fail",e.message):s||this.sendProgress(t,"done",null==r?void 0:r.message)};return r.id=t,this.progress=e=>{this.sendProgress(t,"doing",e)},this.message=(e,s)=>{this.sendProgress(t,e,s)},r}async run(e,t){const s=this.start(e);let r=null,n=null;try{return n=await t(),n}catch(e){throw r=e,e}finally{s(r,n)}}}exports.Recorder=Recorder,exports.silentRecorder=new Recorder(()=>{});
}(require("licia/lazyImport")(require), require)