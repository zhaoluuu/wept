!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.multiCompileToWeb=exports.devWholeProjectToWeb=exports.buildWholeProjectToApp=exports.buildWholeProjectToWeb=void 0;const tslib_1=require("tslib"),path_1=tslib_1.__importDefault(require("path")),webProject_1=require("../project/webProject"),index_1=require("../modules/index"),tools_1=require("../utils/tools");async function buildWholeProjectToWeb(e){var t,o,r;const{input:i,baseUrl:l}=e,u=new webProject_1.WebProject({projectPath:i}),n=new index_1.Builder(u,{targetPlatform:"mini-weixin"});await n.ready();const a=await(null===(t=n.fullCompiler)||void 0===t?void 0:t.compileFull({outputDir:`../${path_1.default.basename(u.projectPath)}_web`})),p=require("@tencent/wxa-runtime-browser");return await p.build({input:path_1.default.join(a||"","/app"),output:a,baseUrl:l}),null===(o=(0,tools_1.getTerm)())||void 0===o||o.blue("web compile end\n"),null===(r=(0,tools_1.getTerm)())||void 0===r||r.blue("dist: "+a),a}async function buildWholeProjectToApp(e){const{input:t,targetPlatform:o}=e,r=new webProject_1.WebProject({projectPath:t}),i=new index_1.Builder(r,{targetPlatform:o});await i.ready();const l=await i.fullCompiler.compileMulti({outputDir:e.output,genWxapkg:!0,genAppInfo:!0});return console.log("compiled finished"),l}async function devWholeProjectToWeb(e){var t,o;const{input:r,baseUrl:i}=e;if(!r)throw Error("wrong dist");const l=new webProject_1.WebProject({projectPath:r}),u=new index_1.Builder(l,{targetPlatform:"mini-weixin"});await u.ready();const n=await(null===(t=u.fullCompiler)||void 0===t?void 0:t.compileFull());require("@tencent/wxa-runtime-browser").serve({input:path_1.default.join(n,"/app"),baseUrl:i}),null===(o=(0,tools_1.getTerm)())||void 0===o||o.blue("web compile end")}async function multiCompileToWeb(e){var t,o,r;const{input:i,baseUrl:l}=e;if(!i)throw Error("wrong dist");const u=new webProject_1.WebProject({projectPath:i}),n=new index_1.Builder(u,{targetPlatform:"mini-weixin"});await n.ready();const a=await(null===(t=n.fullCompiler)||void 0===t?void 0:t.compileMulti({outputDir:e.output})),p=require("@tencent/wxa-runtime-browser");return await p.build({input:path_1.default.join(a||"","/app"),output:a,baseUrl:l}),null===(o=(0,tools_1.getTerm)())||void 0===o||o.blue("web compile end\n"),null===(r=(0,tools_1.getTerm)())||void 0===r||r.blue("dist: "+a),a}exports.buildWholeProjectToWeb=buildWholeProjectToWeb,exports.buildWholeProjectToApp=buildWholeProjectToApp,exports.devWholeProjectToWeb=devWholeProjectToWeb,exports.multiCompileToWeb=multiCompileToWeb;
}(require("licia/lazyImport")(require), require)