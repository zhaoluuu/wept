var OverloadYield=require("./OverloadYield");function AsyncGenerator(e){var r,n;function t(r,n){try{var u=e[r](n),i=u.value,a=i instanceof OverloadYield;Promise.resolve(a?i.v:i).then((function(n){if(a){var c="return"===r?"return":"next";if(!i.k||n.done)return t(c,n);n=e[c](n).value}o(u.done?"return":"normal",n)}),(function(e){t("throw",e)}))}catch(e){o("throw",e)}}function o(e,o){switch(e){case"return":r.resolve({value:o,done:!0});break;case"throw":r.reject(o);break;default:r.resolve({value:o,done:!1})}(r=r.next)?t(r.key,r.arg):n=null}this._invoke=function(e,o){return new Promise((function(u,i){var a={key:e,arg:o,resolve:u,reject:i,next:null};n?n=n.next=a:(r=n=a,t(e,o))}))},"function"!=typeof e.return&&(this.return=void 0)}AsyncGenerator.prototype["function"==typeof Symbol&&Symbol.asyncIterator||"@@asyncIterator"]=function(){return this},AsyncGenerator.prototype.next=function(e){return this._invoke("next",e)},AsyncGenerator.prototype.throw=function(e){return this._invoke("throw",e)},AsyncGenerator.prototype.return=function(e){return this._invoke("return",e)},module.exports=AsyncGenerator;