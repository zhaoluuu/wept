!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getPluginByAliasOrProvider=exports.checkPluginByAliasOrProvider=exports.checkIsInSubPackage=void 0;const startWith=require("licia/startWith");function checkIsInSubPackage(r,i=""){let e;if(startWith(i,"plugin://")){const e=i.match(/^plugin:\/\/([^/]*)\/(.*)/),s=null==e?void 0:e[1];if(!s)return;const t=checkPluginByAliasOrProvider(r,s);return null==t?void 0:t.config}if(r.subPackages)for(let s=0,t=r.subPackages.length;s<t;s++){const t=r.subPackages[s];if(i.startsWith(t.root)){e=t;break}}return e}function checkPluginByAliasOrProvider(r,i){let e;if(r.subPackages)for(const s of r.subPackages)if(e=getPluginByAliasOrProvider(s.plugins,i),e)return Object.assign(Object.assign({},e),{config:s});if(e=getPluginByAliasOrProvider(r.plugins,i),e)return e}function getPluginByAliasOrProvider(r,i){if(r){const e=r[i];if(e)return{alias:i,provider:e.provider,version:e.version};for(const e in r){const s=r[e];if(s.provider===i)return{alias:e,provider:s.provider,version:s.version}}}}exports.checkIsInSubPackage=checkIsInSubPackage,exports.checkPluginByAliasOrProvider=checkPluginByAliasOrProvider,exports.getPluginByAliasOrProvider=getPluginByAliasOrProvider;
}(require("licia/lazyImport")(require), require)