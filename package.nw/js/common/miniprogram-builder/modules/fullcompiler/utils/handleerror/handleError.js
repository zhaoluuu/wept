!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.handleError=void 0;const apperrcode_config_1=require("../../config/apperrcode.config"),tools_1=require("../../../../utils/tools"),parseErr=require("./parseerr"),errorTpl="\n  <p>{{error}}</p>\n";function displayInConsole(e){var r;const o=`\n\n${e.title?`title: ${e.title}\n`:""}${e.file?`file: ${e.file}\n`:""}${e.msg?`msg: ${e.msg} \n`:""}${e.message?e.message:""}`;null===(r=(0,tools_1.getTerm)())||void 0===r||r.error.red(o)}async function handleError(e,r,o,s=!0){let n;if(o.code===apperrcode_config_1.appErrCode.TRANS_WXML_JS_ERR?n=await parseErr.parseWxmlErr(e,r,o.msgForConsole):o.code===apperrcode_config_1.appErrCode.TRANS_WXSS_JS_ERR&&(n=await parseErr.parseWxssErr(e,r,o)),n){const e=errorTpl.replace("{{error}}",(n.title?""+n.title:"")+(n.file?"in File: "+n.file:"")+(n.msg?`<pre style="white-space:pre-wrap; font-family: monospace;">${n.msg.replace(/</g,"&lt;").replace(/>/g,"&gt;")}</pre>`:"")+(o.message?`<p>${o.message}</p>`:""));if(s){const r=unescape(decodeURI(encodeURIComponent(e)));return displayInConsole(n),r}}else if(s){const e=unescape(decodeURI(o.message));return displayInConsole(o),e}return o.msg}exports.handleError=handleError;
}(require("licia/lazyImport")(require), require)