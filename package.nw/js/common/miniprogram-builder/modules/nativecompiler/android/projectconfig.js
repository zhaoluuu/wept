!function(require, directRequire){
"use strict";const tslib_1=require("tslib"),fs=tslib_1.__importStar(require("fs")),path=tslib_1.__importStar(require("path")),glob=tslib_1.__importStar(require("glob"));class ProjectConfigUtils{getProjectConfig(e,a={},t){const i=e,n=this.getAppName(i,a.appName),r=a.manifestPath?path.join(i,a.manifestPath):this.findManifest(path.join(i,n));if(!r)return null;const o=a.packageName||this.getPackageName(r,t);if(!o)throw new Error("Package name not found in "+r);return{sourceDir:i,appName:n,packageName:o}}findManifest(e){const a=glob.sync(path.join("**","AndroidManifest.xml"),{cwd:e,ignore:["node_modules/**","**/build/**","**/debug/**","Examples/**","examples/**"]})[0];return a?path.join(e,a):null}getPackageName(e,a){const t=fs.readFileSync(e,"utf8").match(/package="(.+?)"/);if(!t||0===t.length)throw new Error("Failed to build the app: No package name found. Found errors in "+e);const i=t[1];return this.validatePackageName(i)||a.progress(`Invalid application's package name "${i}" in 'AndroidManifest.xml'. Read guidelines for setting the package name here: https://developer.android.com/studio/build/application-id`),i}validatePackageName(e){return/^[a-z][a-z0-9_]*(\.[a-z][a-z0-9_]*)+$/.test(e)}getAppName(e,a){let t="";return"string"==typeof a&&fs.existsSync(path.join(e,a))?t=a:fs.existsSync(path.join(e,"app"))&&(t="app"),t}}module.exports=new ProjectConfigUtils;
}(require("licia/lazyImport")(require), require)