!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseGraph=exports.JSONType=exports.FileType=void 0;const tslib_1=require("tslib"),path_1=tslib_1.__importDefault(require("path")),lodash_1=require("lodash"),pluginDriver_1=require("../pluginDriver"),module_1=tslib_1.__importDefault(require("../module")),config_1=require("../../../../config/config"),resolver_1=require("../resolver"),white_ext_list_1=require("../../../../utils/white_ext_list"),common_1=require("../../original/compile/common"),tools_1=require("../../../../utils/tools"),babel_helper_1=require("../../../../utils/babel_helper"),progressRecorder_1=require("../../../../utils/progressRecorder"),locales_1=tslib_1.__importDefault(require("../../../../utils/locales/locales")),customError_1=require("../../../../utils/customError"),taskmanager_1=tslib_1.__importDefault(require("../../../../utils/taskmanager"));let MiniProgramWhiteList;var FileType,JSONType;function getFileType(e){let t=path_1.default.extname(e);if(t.startsWith(".")){if(t=t.slice(1),t===FileType.JS)return FileType.JS;if(t===FileType.WXML)return FileType.WXML;if(t===FileType.WXSS)return FileType.WXSS;if(t===FileType.WXS)return FileType.WXS;if(t===FileType.JSON)return FileType.JSON}throw Error("unknown the filetype of "+e)}!function(e){e.JSON="json",e.WXML="wxml",e.WXSS="wxss",e.WXS="wxs",e.JS="js"}(FileType=exports.FileType||(exports.FileType={})),function(e){e.APP="app",e.Page="page",e.EXT="ext",e.SITEMAP="sitemap",e.THEME="theme"}(JSONType=exports.JSONType||(exports.JSONType={}));class BaseGraph{constructor(e){this.invalidated=!0,this.running=!1,this.onFileChange=(e,t)=>{t.startsWith(this.root)&&(t=t.replace(new RegExp("^"+this.root),""),this.resolver.onFileChange(e,t),"change"!==e&&"unlink"!==e||this.invalidateModules(t),this.onFileChangeForGraph(e,t))},this.onFileAndDirChange=()=>{this.resolver.updateFileAndDirs()},this.getCodeFileTask=async(e,t,o=!0,i={})=>{var r;if(o&&!this.modulesByPath.get(e.path)&&e.path.endsWith(".js")){const t=await this.persistCache.get(this.project.projectPath,this.root,e);if(t)return(null===(r=process.env)||void 0===r?void 0:r.isDevtools)&&console.log("use cache",e.path),i[e.path]=t,void this.loadModuleFromFile(e,progressRecorder_1.silentRecorder)}const s=await this.loadModuleFromFile(e,t);s.error||s.target||(s.target=await this.generate(s.source,s));const a=s.toCodeFile();i[s.path]=a,!("error"in a)&&e.path.endsWith(".js")&&this.persistCache.set(this.project.projectPath,this.root,e,a)},this.type=e.type,this.root=e.root,this.rootPath=path_1.default.posix.join(e.compiler.project.projectPath,this.root),this.persistCache=e.persistCache,this.compiler=e.compiler,this.project=this.compiler.project,this.cachedModules=new Map,this.pluginDriver=new pluginDriver_1.PluginDriver(this,e),this.modulesByPath=new Map,this.resolver=new resolver_1.Resolver(this,this.root,this.pluginDriver.resolveExtConf),this.project.event.on("fileChange",this.onFileChange)}destroy(){}clearCache(){this.modulesByPath.clear()}invalidateModules(e){for(const t of this.modulesByPath.values())(t.sourcePath===e||t.depFiles.includes(e))&&this.modulesByPath.delete(t.path)}async loadModuleFromFile(e,t){var o;let i=this.modulesByPath.get(e.path);if(null==i?void 0:i.loadingPromise)return await i.loadingPromise,this.loadModuleFromFile(e,t);let r=!i||i.sourcePath!==e.source||i.independentRoot!==e.independentRoot;if(!r&&(null==i?void 0:i.error)){if(i.loadEnd+1e3>Date.now())return i;r=!0}if(r){const r=getFileType(e.path);i=new module_1.default(this,e.path,e.source,r),i.independentRoot=e.independentRoot,e.isBabelIgnore&&(null===(o=i.jsTag)||void 0===o||o.setBabelIgnore()),this.modulesByPath.set(e.path,i),i.loadingPromise=t.run(locales_1.default.config.SUMMER_COMPILING_MODULE.format(e.source),()=>this.loadSourceForModule(i)),await i.loadingPromise,i.loadingPromise=void 0}return i}async loadSourceForModule(e){var t,o;try{const i=path_1.default.posix.join(this.rootPath,e.sourcePath),r=t=>Object.assign(Object.assign({},t),{rootPath:this.rootPath,addWatchFile:t=>{const o=(0,tools_1.normalizePath)(t);if(!o.startsWith(this.rootPath))throw(0,customError_1.makeCustomError)(`The file (${t}) required by ${e.sourcePath} is outside the project`,customError_1.CustomErrors.SUMMER_PLUGIN_CODE_ERR,e.path);e.addWatchFile(path_1.default.posix.relative(this.rootPath,o))}}),s=null!==(o=await this.pluginDriver.hookFirst("load",[e.path,i,{independentRoot:e.independentRoot,isBabelIgnore:(null===(t=e.jsTag)||void 0===t?void 0:t.isBabelIgnore)||!1}],r))&&void 0!==o?o:await this.readFile(i),a="string"==typeof s?{sourceCode:s}:s,l=await this.tranform(a,e,r);return e.setSource(l),!0}catch(t){return t.path=path_1.default.posix.join(this.root,e.sourcePath),e.setError(t),!1}}async doCompileSingleCode(e,t){const o=getFileType(e.path),i=new module_1.default(this,e.path,e.source,o);if(await this.loadSourceForModule(i),i.error)throw i.error;return i.target||(i.target=await this.generate(i.source,i)),i.toCodeFile()}async getCodeFiles(e,t,o=!0){Date.now();const i={},r=new taskmanager_1.default({poolLimit:10,breakWhenError:!0});for(const s of e)r.addTask(this.getCodeFileTask,s,t,o,i);return await r.runAllAsync(),i}async old_getCodeFiles(e,t,o=!0){const i={};return await Promise.all(e.map(async e=>{var r;if(o&&!this.modulesByPath.get(e.path)&&e.path.endsWith(".js")){const t=await this.persistCache.get(this.project.projectPath,this.root,e);if(t)return(null===(r=process.env)||void 0===r?void 0:r.isDevtools)&&console.log("use cache",e.path),i[e.path]=t,void this.loadModuleFromFile(e,progressRecorder_1.silentRecorder)}const s=await this.loadModuleFromFile(e,t);s.error||s.target||(s.target=await this.generate(s.source,s));const a=s.toCodeFile();i[s.path]=a,!("error"in a)&&e.path.endsWith(".js")&&this.persistCache.set(this.project.projectPath,this.root,e,a)})),i}async readFile(e){const t=path_1.default.relative(this.project.projectPath,e);return this.project.getFile("",t).toString()}async tranform(e,t,o){var i;return await this.pluginDriver.hookReduceArg0("transform",[e,t.path,t.sourcePath,{independentRoot:t.independentRoot,isBabelIgnore:(null===(i=t.jsTag)||void 0===i?void 0:i.isBabelIgnore)||!1}],(function(e,t){return"string"==typeof t?{sourceCode:t}:t}),o)}async generate(e,t){var o;let i=await this.pluginDriver.hookFirst("generate",[e,t.path,t.sourcePath,{independentRoot:t.independentRoot,isBabelIgnore:(null===(o=t.jsTag)||void 0===o?void 0:o.isBabelIgnore)||!1}]);return void 0===i||(0,lodash_1.isNull)(i)?{code:e.sourceCode,map:e.inputMap}:("string"==typeof i&&(i={code:i}),i)}async compile(e){const{conf:t,jsons:o}=await e.run(locales_1.default.config.SUMMER_COMPILE_JSON.format(),()=>this.compileJSON(e)),i=await this.compileCodeWithoutJSON(e);function r(e,t){return t}const s=await e.run(locales_1.default.config.SUMMER_OPTIMIZE_CODE.format(),()=>this.pluginDriver.hookReduceArg0("optimize",[i,t],r,e=>e)),a=await e.run(locales_1.default.config.SUMMER_PACK_FILES.format(),()=>this.compileOther(Object.keys(o))),l=Object.assign(Object.assign(Object.assign({},a),s),o),n=await e.run(locales_1.default.config.SUMMER_COMPRESS_PACK.format(),()=>this.pluginDriver.hookReduceArg0("compress",[l],(e,t)=>t,e=>e));return await e.run(locales_1.default.config.SUMMER_SEAL_PACK.format(),()=>this.pluginDriver.hookParallel("sealed",[n])),n}async getLocalFileList(){const e=this.getLocalCodeFileList(),t=new Set(this.resolver.allExts.map(e=>"."+e));if(!MiniProgramWhiteList){const e=await(0,white_ext_list_1.getWhiteExtList)();MiniProgramWhiteList=e.MiniProgramWhiteList}const o=this.project.getFileList(this.root,"").filter(e=>{const o=path_1.default.posix.extname(e);return MiniProgramWhiteList.has(o)&&!t.has(o)}).map(e=>e.replace(new RegExp("^"+this.root),"")),i={};for(const t of e.concat(o)){const e=this.project.stat(this.root,t);i[t]=e}return i}async compileOther(e){const t=new Set(this.resolver.allExts.map(e=>"."+e));if(t.delete(".json"),!MiniProgramWhiteList){const e=await(0,white_ext_list_1.getWhiteExtList)();MiniProgramWhiteList=e.MiniProgramWhiteList}const o=this.project.getFileList(this.root,"").filter(e=>{const o=path_1.default.posix.extname(e);return MiniProgramWhiteList.has(o)&&!t.has(o)}),i=await(0,common_1.compileOther)(this.project,o,{onProgressUpdate:()=>{}}),r={};for(const t in i){const o=path_1.default.posix.relative(this.root,t);e.includes(o)||(r[o]=i[t])}return r}async compileCodeWithoutJSON(e){var t;const o={},i=await this.getProdCode(e,{package:config_1.FullPkg}),r=new Set;for(const e in i){const s=i[e];if("error"in s)throw s.error;if(s.path.endsWith(".js")){((null===(t=s.jsTag)||void 0===t?void 0:t.helpers)||[]).forEach(e=>{r.add(e)}),o[e]=s.code;const i=s.map&&(0,tools_1.formatSourceMap)(s.map);i&&(o[e+".map"]=i)}else o[e]=s.code}return await e.run(locales_1.default.config.SUMMER_APPEND_BABEL_HELPERS.format(),()=>(0,babel_helper_1.appendBabelHelpers)(r,"","@babel/runtime",o)),o}isBabelSettingIgnore(e){var t;let o=!1;if(e.path.endsWith(".js")){const i=null===(t=this.compiler.getBabelSetting())||void 0===t?void 0:t.ignore;i&&(o=(0,babel_helper_1.isIgnore)(i,e.source))}return o}}exports.BaseGraph=BaseGraph;
}(require("licia/lazyImport")(require), require)