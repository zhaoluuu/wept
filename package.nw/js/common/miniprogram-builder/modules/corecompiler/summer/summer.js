!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SummerCompiler=void 0;const tslib_1=require("tslib"),path_1=tslib_1.__importDefault(require("path")),lodash_1=require("lodash"),reactiveCache_1=require("../original/json/reactiveCache"),locales_1=tslib_1.__importDefault(require("../../../utils/locales/locales")),tools_1=require("../../../utils/tools"),plugingraph_1=require("./graph/plugingraph"),appgraph_1=require("./graph/appgraph"),initPlugin_1=require("./initPlugin"),pluginDriver_1=require("./pluginDriver"),persistCache_1=tslib_1.__importDefault(require("./persistCache")),babel_helper_1=require("../../../utils/babel_helper");let proxyProject;function initProxyProjectForJSON(e){if(proxyProject&&proxyProject.projectPath!==e.projectPath&&(proxyProject.clearResolver(),proxyProject=void 0),!proxyProject){let t={};function i(i,r){const o=e.stat(i,r);if(o)return o;const p=e.getTargetPath(i,r);for(const e in t)if(p.startsWith(e))return t[e].stat(path_1.default.posix.relative(e,p))}proxyProject=new Proxy(e,{get:(e,t,r)=>"stat"===t?i:Reflect.get(e,t,r)}),proxyProject.addResolver=e=>{(0,reactiveCache_1.cleanReactiveCache)(),t[e.root]=e},proxyProject.removeResolver=e=>{(0,reactiveCache_1.cleanReactiveCache)(),delete t[e.root]},proxyProject.clearResolver=()=>{t={},(0,reactiveCache_1.cleanReactiveCache)()}}return proxyProject}function getCacheBaseKey(e){const i=`${e.miniprogramRoot}|${e.pluginRoot}|${e.summerPlugins.join(",")}|${(0,babel_helper_1.getBabelHelperVersion)()}`;return(0,tools_1.generateMD5)(i)}class SummerCompiler{constructor(e,i,t){this.project=e,this.cachePath=i,this.options=t,this.proxyProject=initProxyProjectForJSON(e),this.projectPath=e.projectPath,this.persistCache=new persistCache_1.default(this.proxyProject,i,getCacheBaseKey(t)),this.initPlugins(),this.initAppGraph(),"miniProgramPlugin"===this.options.compileType&&this.initPluginGraph()}getBabelSetting(){return this.options.babelSetting}initPlugins(){this.plugins=this.options.summerPlugins.map(e=>{let i,t={};return"string"==typeof e?i=e:(i=e[0],t=e[1]),(0,initPlugin_1.initPlugin)(i,this.project,t)})}initAppGraph(){this.appGraph=new appgraph_1.AppGraph({type:"miniprogram",root:this.project.miniprogramRoot,persistCache:this.persistCache,plugins:this.plugins,compiler:this})}initPluginGraph(){this.pluginGraph=new plugingraph_1.PluginGraph({type:"plugin",root:this.project.pluginRoot,persistCache:this.persistCache,plugins:this.plugins,compiler:this})}updateOptions(e){var i,t;const r=this.options;if(this.options=e,this.persistCache.updateBaseCacheKey(getCacheBaseKey(e)),!(0,lodash_1.isEqual)(e.babelSetting,r.babelSetting)||!(0,lodash_1.isEqual)(this.options.summerPlugins,r.summerPlugins))return this.initPlugins(),this.appGraph.destroy(),null===(i=this.pluginGraph)||void 0===i||i.destroy(),this.initAppGraph(),void("miniProgramPlugin"===this.options.compileType&&this.initPluginGraph());this.options.compileType!==r.compileType&&("miniProgramPlugin"===this.options.compileType?this.initPluginGraph():(null===(t=this.pluginGraph)||void 0===t||t.destroy(),this.pluginGraph=void 0)),this.appGraph.root!==this.project.miniprogramRoot&&(this.appGraph.destroy(),this.initAppGraph()),this.pluginGraph&&this.pluginGraph.root!==this.project.pluginRoot&&(this.pluginGraph.destroy(),this.initPluginGraph())}destroy(){var e;this.appGraph.destroy(),null===(e=this.pluginGraph)||void 0===e||e.destroy(),this.proxyProject.clearResolver()}getStatus(){const e=(0,pluginDriver_1.genResovleExtConf)(this.plugins),i={},t=new Set;for(const r of["json","js","wxml","wxss","wxs"])i[r]={exts:e[r].reverse()},e[r].forEach(e=>{t.add(e)});return{codeExts:Array.from(t.keys()),codeConf:i}}clearCache(){var e,i,t;null===(i=(e=this.project).clearCache)||void 0===i||i.call(e),this.appGraph.clearCache(),null===(t=this.pluginGraph)||void 0===t||t.clearCache(),this.persistCache.clean(),(0,reactiveCache_1.cleanReactiveCache)()}async getConf({graphId:e},i){if("miniprogram"===e){return await this.appGraph.getConf(i)}if("plugin"===e){return await this.pluginGraph.getConf(i)}throw new Error("no support getConf for "+e)}async getCode(e,i){if("miniprogram"===e.graphId){return await this.appGraph.getDevCode(i,{package:e.package})}if("plugin"===e.graphId){return await this.pluginGraph.getDevCode(i)}throw new Error("no support getCode for "+e.graphId)}async getLocalFileList(e){if("miniprogram"===e)return await this.appGraph.getLocalFileList();if("plugin"===e)return await this.pluginGraph.getLocalFileList();throw new Error("no support getCode for "+e)}async compileSingleCode(e,i){if("miniprogram"===e.graphId){return await this.appGraph.compileSingleCode(e.filePath,e.sourceCode)}if("plugin"===e.graphId){return await this.pluginGraph.compileSingleCode(e.filePath,e.sourceCode)}throw new Error("no support getCode for "+e.graphId)}async compile(e,i){const t=await i.run(locales_1.default.config.SUMMER_COMPILE_MINIPROGRAM.format(),()=>this.appGraph.compile(i));if("miniProgram"===this.project.type)return t["project.config.json"]=JSON.stringify({miniprogramRoot:"",__compileDebugInfo__:{useSummer:!0}}),t;if("miniProgramPlugin"===this.project.type){const e={},r=await(await i.run(locales_1.default.config.SUMMER_COMPILE_PLUGIN.format(),()=>this.pluginGraph.compile(i)));return Object.keys(t).forEach(i=>{e[path_1.default.posix.join(this.project.miniprogramRoot,i)]=t[i]}),Object.keys(r).forEach(i=>{e[path_1.default.posix.join(this.project.pluginRoot,i)]=r[i]}),e["project.config.json"]=JSON.stringify({miniprogramRoot:this.project.miniprogramRoot,pluginRoot:this.project.pluginRoot,__compileDebugInfo__:{useSummer:!0}}),e}throw new Error("no support compile for  "+this.project.type)}}exports.SummerCompiler=SummerCompiler;
}(require("licia/lazyImport")(require), require)