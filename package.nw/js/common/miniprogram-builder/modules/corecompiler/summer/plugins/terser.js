"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tslib_1=require("tslib"),config_1=require("../../../../config/config"),customError_1=require("../../../../utils/customError"),taskmanager_1=tslib_1.__importDefault(require("../../../../utils/taskmanager")),terser=()=>require("terser"),babelCodeFrame=()=>require("babel-code-frame");function default_1(e){return{name:"summer-terser",workerMethods:{doCompress:async(e,r)=>require("terser").minify(e,{toplevel:!0,compress:{drop_console:!1,drop_debugger:!1},sourceMap:r})},async compress(e){const r=Object.keys(e).filter(e=>e.endsWith(".js")),o={},s=Date.now(),t=async r=>{const s=e[r+".map"]?{includeSources:!0,content:JSON.parse(e[r+".map"]),filename:r}:{includeSources:!0,content:void 0,filename:r},t=await this.runWorkerMethod("doCompress",e[r],s);if(t.error){const o=t.error,s=`file: ${r}\n ${t.error.message}\n ${require("babel-code-frame")(e[r],o.line,o.col>0?o.col:1)}`;throw(0,customError_1.makeCustomError)(s,config_1.UGLIFY_JS_ERR,r)}o[r]=t.code,t.map&&(o[r+".map"]=t.map)},a=new taskmanager_1.default({poolLimit:10,breakWhenError:!0});for(const e of r)a.addTask(t,e);return await a.runAllAsync(),console.log(`terser, count: ${r.length}, cost: ${Date.now()-s}ms`),Object.assign(Object.assign({},e),o)}}}exports.default=default_1;