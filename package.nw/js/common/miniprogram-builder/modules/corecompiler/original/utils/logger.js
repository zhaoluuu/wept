!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.logger=void 0;const workerThread_1=require("../workerThread"),env_1=require("./env");function pad(e,r=2){return e>10**r?String(e):`${new Array(r).join("0")}${e}`.slice(-r)}const LevelMap={trace:1,info:2,log:3,warn:4,error:5};class Logger{constructor(e){this.output=e,this.enableLevel=LevelMap.log,this.ready=!1,this.logs=[]}setOutput(e){this.output=e}setEnableLevel(e){this.enableLevel=e}setReady(){if(this.ready=!0,this.logs.length>0)for(const e of this.logs)this.output(e.level,e.args)}send(e,r){this.ready?this.output(e,r):this.logs.push({level:e,args:r})}getPrintTime(){const e=new Date;return`${String(e.getFullYear())}-${pad(e.getMonth()+1)}-${pad(e.getDate())} ${pad(e.getHours())}:${pad(e.getMinutes())}:${pad(e.getSeconds())}.${pad(e.getMilliseconds(),3)}`}_receive(e,r,t){const s=LevelMap[e];this.enableLevel>s||(t=[r=`[compiler][${env_1.processEnv}][${this.getPrintTime()}] ${r}`,...t],this.send(e,t))}info(e,...r){this._receive("info",e,r)}log(e,...r){this._receive("log",e,r)}error(e,...r){this._receive("error",e,r)}}if(exports.logger=new Logger((e,r)=>{console[e](...r)}),exports.logger.setReady(),"ci"===env_1.hostEnv&&("compiler"===process.env.debug?exports.logger.setEnableLevel(LevelMap.info):exports.logger.setEnableLevel(LevelMap.warn)),"childprocess"===env_1.processEnv&&exports.logger.setOutput((e,r)=>{process.send({command:workerThread_1.COMMAND.SEND_LOG,data:{level:e,args:r}})}),"workerthread"===env_1.processEnv){const e=require("worker_threads").parentPort;e&&exports.logger.setOutput((r,t)=>{e.postMessage({command:workerThread_1.COMMAND.SEND_LOG,data:{level:r,args:t}})})}
}(require("licia/lazyImport")(require), require)