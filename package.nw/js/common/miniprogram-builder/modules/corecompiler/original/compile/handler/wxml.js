!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.compileWXML=void 0;const tslib_1=require("tslib"),path_1=tslib_1.__importDefault(require("path")),tools_1=require("../../../../../utils/tools"),locales_1=tslib_1.__importDefault(require("../../../../../utils/locales/locales")),config_1=require("../../../../../config/config"),taskstatus_1=require("../../../../../utils/taskstatus"),workerThread_1=require("../../workerThread"),common_1=require("../../../../../utils/common");async function compileWXML(e,r,o){const{root:t="",setting:s={},onProgressUpdate:i=(()=>{})}=o,{minify:a,minifyWXML:l}=s,c=new taskstatus_1.TaskStatus(r),n=path_1.default.posix.join(t,r),_=await e.getFile(t,r);if(!a&&!l){i(c);const e=(0,tools_1.bufferToUtf8String)(_);return void 0===e&&(0,common_1.throwError)({msg:locales_1.default.config.FILE_NOT_UTF8.format(n),code:config_1.FILE_NOT_UTF8,filePath:n}),c.done(),i(c),{filePath:r,code:e.replace(/\r\n/g,"\n")}}const u=await(0,workerThread_1.runTask)(workerThread_1.TASK_NAME.MINIFY_WXML,{projectPath:e.projectPath,root:t,filePath:r,setting:s,code:_},e=>{e===workerThread_1.ETaskStatus.progress?i(c):e===workerThread_1.ETaskStatus.done&&(c.done(),i(c))});return u.error&&(0,common_1.throwError)({msg:u.error.message,code:u.error.code,filePath:n}),{filePath:r,code:u.code.replace(/\r\n/g,"\n")}}exports.compileWXML=compileWXML;
}(require("licia/lazyImport")(require), require)