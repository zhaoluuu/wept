!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getProjectConfigJSON=void 0;const tslib_1=require("tslib"),lodash_1=require("lodash"),common_1=require("../../../../utils/common"),schemaValidate_1=require("../validate/schemaValidate"),cache_1=require("../../../../utils/cache"),tools_1=require("../../../../utils/tools"),config_1=require("../../../../config/config"),locales_1=tslib_1.__importDefault(require("../../../../utils/locales/locales")),reactiveCache_1=require("./reactiveCache"),common_2=require("./common"),PROJECT_CONFIG_JSON="project.config.json",rootConfig=["svr","client","qcloudRoot","miniprogramRoot","pluginRoot","cloudfunctionRoot","jsserverRoot","testRoot"];function formatPath(o=""){return o&&"/"!==o?(o=(0,tools_1.normalizePath)(o+"/")).replace(/^(\/)*/,"").replace(/\.\.\//g,"").replace(/^\.\//,""):""}const _getProjectConfigJSON=(0,reactiveCache_1.wrapCompileJSONFunc)(cache_1.CACHE_KEY.PROJECT_CONFIG,o=>{if(!o.stat("",PROJECT_CONFIG_JSON))return o.type!==config_1.COMPILE_TYPE.miniGamePlugin&&o.type!==config_1.COMPILE_TYPE.miniProgramPlugin||(0,common_1.throwError)({msg:locales_1.default.config.NOT_FOUND.format("project.config.json"),code:config_1.FILE_NOT_FOUND,filePath:PROJECT_CONFIG_JSON}),{};const e=o.getFile("",PROJECT_CONFIG_JSON),t=(0,common_1.checkUTF8)(e,PROJECT_CONFIG_JSON),i=(0,common_2.checkJSONFormat)(t,PROJECT_CONFIG_JSON),r=(0,schemaValidate_1.schemaValidate)("projectconfig",i);return(0,schemaValidate_1.transValidateResult)(PROJECT_CONFIG_JSON,r),o.miniprogramRoot=i.miniprogramRoot||"",o.pluginRoot=i.pluginRoot||"",rootConfig.forEach(o=>{"string"==typeof i[o]?i[o]=formatPath(i[o]):i[o]=""}),o.type!==config_1.COMPILE_TYPE.miniGamePlugin&&o.type!==config_1.COMPILE_TYPE.miniProgramPlugin||i.pluginRoot||(0,common_1.throwError)({msg:locales_1.default.config.SHOULD_NOT_BE_EMPTY.format('["pluginRoot"]'),filePath:PROJECT_CONFIG_JSON}),o.type!==config_1.COMPILE_TYPE.miniGamePlugin&&o.type!==config_1.COMPILE_TYPE.miniProgramPlugin||i.pluginRoot!==i.miniprogramRoot||(0,common_1.throwError)({msg:locales_1.default.config.PLUGIN_PATH_SAME_WITH_MINIPROGRAM.format([i.pluginRoot,i.miniprogramRoot]),filePath:PROJECT_CONFIG_JSON}),i}),getProjectConfigJSON=function(o){const e=_getProjectConfigJSON(o);return(0,lodash_1.cloneDeep)(e)};exports.getProjectConfigJSON=getProjectConfigJSON;
}(require("licia/lazyImport")(require), require)