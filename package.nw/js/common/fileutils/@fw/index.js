"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const eventemitter3_1=require("eventemitter3"),watcher_1=require("./watcher"),aaplwatcher_1=require("./watchers/aaplwatcher"),builtinaaplwatcher_1=require("./watchers/builtinaaplwatcher"),mswatcher_1=require("./watchers/mswatcher");var mshelper_1=require("./mshelper");function isAAPL(e){const t=e.toLowerCase();return"win"!==t&&"win32"!==t}exports.getMsDetector=mshelper_1.getMsDetector;const AllowedEventTypes=["ready","all","close"];class FileWatcher extends eventemitter3_1.EventEmitter{constructor(e,t,s){super(),this.root=e,this.config=t,this.extConfig=s,this._watching=!1,this._disposed=!1,this.close=()=>this.dispose()}get watching(){return this._watching}get options(){return this.extConfig}on(e,t){if(AllowedEventTypes.includes(e))return super.on(e,t);throw new Error(`(on) Unsupport Event Type: ${e}`)}once(e,t){if(AllowedEventTypes.includes(e))return super.once(e,t);throw new Error(`(once) Unsupport Event Type: ${e}`)}startWatch(){const{logger:e,platform:t}=this.config;if(this._disposed)return void e.e("Watcher has been disposed",this.root);if(this._watching)return void e.w("already watching",this.root);let s;this._watching=!0;const r=isAAPL(t),i=[r?this.root:watcher_1.formatWindowsSlashes(this.root),this.config,this.extConfig];s=r?this.config.externalWatcherProcess?new aaplwatcher_1.AAPLWatcherService(...i):new builtinaaplwatcher_1.BuiltInAAPLWatcherService(...i):new mswatcher_1.MSWatcherService(...i),s.onChange=this.onWatcherChangeEvent.bind(this),s.onError=this.onWatcherError.bind(this),s.onInitSuccess=()=>{this.emit("ready")},s.onClose=()=>{this.dispose()},s.startWatch(),this._watcher=s,(this.config.isDev||this.config.verbose)&&(global.$fw=global.$fw||s)}onWatcherChangeEvent(e){this.emit("all",e.type,e.path,e.stat)}get verbose(){return this.config.verbose?this.config.logger.i:()=>{}}onWatcherError(e){this.config.logger.e(e),this.emit("error",e)}stopWatch(){const{logger:e}=this.config;this._disposed?e.e("Watcher has been disposed, cannot stop watch",this.root):this._watching?(this._watching=!1,this._watcher&&(this._watcher.dispose(),this._watcher=null)):e.w("already stopped watch",this.root)}dispose(){this._disposed||(this.stopWatch(),this._disposed=!0,this.emit("close"))}}exports.FileWatcher=FileWatcher;