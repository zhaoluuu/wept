"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const glob=require("glob"),sd=require("string_decoder"),charcodes_1=require("./charcodes");exports.SIGTERM="SIGTERM";class WatcherService{constructor(e,r,t){this.root=e,this.config=r,this.extConfig=t,this.onChange=e=>{this.config.logger.w("This is the default handler for FileWatcherService onChange(). You shall override this method.",e)},this.onError=e=>{this.config.logger.e("This is the default handler for FileWatcherService onError(). You shall override this method.",e)},this.onInitSuccess=()=>{this.config.logger.w("This is the default handler for FileWatcherService onInitSuccess(). You shall override this method.")},this.onClose=()=>{this.config.logger.w("This is the default handler for FileWatcherService onClose(). You shall override this method.")}}get verbose(){return this.config.verbose?this.config.logger.i:()=>{}}close(){return this.dispose()}}function timeoutForRetry(e){switch(e){case 0:return 1e3;case 1:return 1500;case 2:return 2e3;case 3:return 2500;default:return 3e3}}exports.WatcherService=WatcherService,exports.timeoutForRetry=timeoutForRetry,exports.MAX_RESTARTS=10;class LineDecoder{constructor(e="utf8"){this.stringDecoder=new sd.StringDecoder(e),this.remaining=null}write(e){const r=[],t=this.remaining?this.remaining+this.stringDecoder.write(e):this.stringDecoder.write(e);if(t.length<1)return r;let o,i=0,s=i;for(;s<t.length;)if(o=t.charCodeAt(s),o===charcodes_1.CharCode.CarriageReturn||o===charcodes_1.CharCode.LineFeed){if(r.push(t.substring(i,s)),s+=1,s<t.length){const e=o;o=t.charCodeAt(s),(e===charcodes_1.CharCode.CarriageReturn&&o===charcodes_1.CharCode.LineFeed||e===charcodes_1.CharCode.LineFeed&&o===charcodes_1.CharCode.CarriageReturn)&&(s+=1)}i=s}else s+=1;return this.remaining=i<t.length?t.substr(i):null,r}end(){return this.remaining}}function $glob(e,r){return new Promise((t=>{glob(e,r,((e,r)=>t(e?[]:r)))}))}exports.LineDecoder=LineDecoder,exports.$glob=$glob,exports.formatWindowsSlashes=e=>e.replace(/\//g,"\\");