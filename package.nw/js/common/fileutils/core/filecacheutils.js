"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FileCacheUtils=void 0;const path=require("path"),fs=require("fs"),fse=require("fs-extra"),anymatch=require("anymatch"),micromatch=require("micromatch"),utils_1=require("../utils"),types_1=require("../types"),iconv=require("iconv-lite"),MAX_ARGS_LIMIT=65535,CACHE_FILE_NAME="fileCache.cfg",CUR_CACHE_VERSION=2;class FileCacheUtils{constructor(t,e,i){if(this.cacheVersion=2,this.eventList=[],this.folderInfo={},this.fileList=[],this.folderList=[],this.ignoreds=[],this.matchers=null,this.shouldDelFolderMap={},this.projectPath=t,this.cacheDirPath=e||"",this.logger=i,!t)throw new Error("init FileCacheutils error for not projectPath");this._cacheStorePath=e?path.posix.join(e,"fileCache.cfg"):"",this.initState(),this.logger.debug("init FileCacheutils",this._cacheStorePath)}get cacheStorePath(){return this._cacheStorePath}initState(){this.folderInfo={},this.fileList=[],this.folderList=[],this.ignoreds=[],this.matchers=null}writeCache(t){try{if(!this.cacheStorePath)return;if(!t||!t.folderInfo)return void this.logger.warn("dircache.writeCache fail for not cache");t.cacheVersion=t.cacheVersion||this.cacheVersion;const e=Buffer.from(JSON.stringify(t)).toString(),i=iconv.encode(e,"utf8").toString();if(fse.pathExistsSync(this.cacheDirPath)){const t=fse.lstatSync(this.cacheDirPath);t.isDirectory()||fse.removeSync(this.cacheDirPath)}fse.outputFileSync(this.cacheStorePath,i,"utf8"),this.logger.warn("dircache.writeCache succ",this.cacheStorePath)}catch(t){this.logger.error(`dircache writeCache: ${this.cacheStorePath} Error: `,t)}}deleteCache(){this.isCacheExists()&&fse.removeSync(this.cacheStorePath)}isCacheExists(){return!!this._cacheStorePath&&fse.pathExistsSync(this.cacheStorePath)}getAbsPath(t){return utils_1.ensureWindowsStylePath(path.posix.join(this.projectPath,t),this.projectPath,!0)}_fastConcat(t,e){return e.length>65535?t.concat(e):(t.push(...e),t)}getOldFileCache(t){var e,i;const s={},h={};if(this.folderInfo[t]){const e=this.folderInfo[t].children;for(let t=0,i=e.length;t<i;t++){s[e[t]]=!0}const i=this.folderInfo[t].folderChildren||[];for(let t=0,e=i.length;t<e;t++){h[i[t]]=!0}}return{oldFileMap:s,oldFolderMap:h,oldFileList:(null===(e=this.folderInfo[t])||void 0===e?void 0:e.children)||[],oldFolderList:(null===(i=this.folderInfo[t])||void 0===i?void 0:i.folderChildren)||[]}}updateCache(t,e,i=!1){let s=path.posix.relative(this.projectPath,t);s?s.endsWith("/")||(s+="/"):s="./";const h=[],o=[],r=[],{oldFileMap:n,oldFolderMap:l,oldFileList:c,oldFolderList:a}=this.getOldFileCache(s),f=fse.readdirSync(t);for(let e=0,i=f.length;e<i;e++){const i=f[e],c=path.posix.join(t,i),a=path.posix.join(s,i),d=`${a}/`;if(n[a])o.push(a);else{if(this.folderInfo[d]){r.push(d),delete l[d];continue}if(!micromatch.any(a,this.ignoreds)){const t=fse.lstatSync(c);t.isFile()?o.push(a):this.folderInfo[a]||this.folderInfo[d]||(h.push({searchItem:a,stat:t}),r.push(d))}}}i&&(this.diffList(c,o),this.diffList(a,r,!0)),this.folderInfo[s]={mtimeMs:e.mtimeMs,children:o,folderChildren:r},Object.assign(this.shouldDelFolderMap,l);for(let t=0,e=h.length;t<e;t++){let e=h[t].searchItem;const s=h[t].stat,o=utils_1.ensureWindowsStylePath(path.posix.join(this.projectPath,e),this.projectPath,!0);e.endsWith(path.posix.sep)||(e+=path.posix.sep),this.folderInfo[e]||this.updateCache(o,s,i)}this.fileList=this._fastConcat(this.fileList,o)}_getEmptyFolderInfo(){return{"./":{mtimeMs:-1,children:[]}}}_getFilterFolderPath(t){var e,i;if(!(t=t||[])||0===t.length)return[];const s=[...t];for(let h=0;h<t.length;h++){const o=t[h];if(null===(i=null===(e=this.folderInfo[o])||void 0===e?void 0:e.folderChildren)||void 0===i?void 0:i.length){const t=this.folderInfo[o].folderChildren;s.push(...this._getFilterFolderPath(t))}}return s}diffList(t=[],e=[],i=!1){const s=new Set(t),h=new Set(e),o=[...new Set([...s].filter((t=>h.has(t))))];o.length===t.length&&o.length===e.length||(i||t.forEach((t=>{if(!o.includes(t)){const e=this.getAbsPath(t);this.eventList.push({eventType:types_1.IEmmitEvents.unlink,fileName:e})}})),e.forEach((t=>{if(!o.includes(t))try{const e=this.getAbsPath(t),s=fse.lstatSync(e);this.eventList.push({eventType:i?types_1.IEmmitEvents.addDir:types_1.IEmmitEvents.add,fileName:e,details:s})}catch(t){console.error(t)}})))}getCompleteList(t,e,i=!1){var s;if(this.logger.warn("fileCacheUtils.getCompleteList"),!t)return this.logger.error("fileCacheUtils.getCompleteList: failed for noCache"),null;let h=Date.now();this.fileList=[],this.eventList=[],this.ignoreds=e||[],this.matchers=anymatch(this.ignoreds),this.folderInfo=t.folderInfo||{},this.folderList=Object.keys(this.folderInfo),this.shouldDelFolderMap={},0!==this.folderList.length&&this.folderInfo["./"]||(this.folderInfo=this._getEmptyFolderInfo(),this.folderList=Object.keys(this.folderInfo));for(let t=0,e=this.folderList.length;t<e;t++){const e=this.folderList[t],h=utils_1.ensureWindowsStylePath(path.posix.join(this.projectPath,e),this.projectPath,!0);if(fse.pathExistsSync(h)){const t=fse.lstatSync(h),o=this.folderInfo[e];if(t.mtimeMs===o.mtimeMs)this.fileList=this._fastConcat(this.fileList,this.folderInfo[e].children);else{if(null===(s=this.shouldDelFolderMap)||void 0===s?void 0:s[e])continue;this.updateCache(h,t,i)}}else{if(h===`${this.projectPath}/`||h===this.projectPath)continue;delete this.folderInfo[e],i&&this.eventList.push({eventType:types_1.IEmmitEvents.unlinkDir,fileName:h})}}const o=Object.keys(this.shouldDelFolderMap),r=this._getFilterFolderPath(o);for(let t=0;t<r.length;t++){const e=r[t];delete this.folderInfo[e],i&&this.eventList.push({eventType:types_1.IEmmitEvents.unlinkDir,fileName:this.getAbsPath(e)})}this.logger.warn("dircache.getCompleteList: updateCache cost ",Date.now()-h),h=Date.now(),this.folderList=Object.keys(this.folderInfo);let n=this._fastConcat([],this.fileList);return n=this._fastConcat(n,this.folderList),this.logger.warn("dircache.getCompleteList: concatTime cost ",Date.now()-h),this.writeCache({ignoreds:this.ignoreds,folderInfo:this.folderInfo,cacheVersion:this.cacheVersion}),{fileList:this.fileList,completeFileList:n,eventList:this.eventList}}_isSameCacheVersion(t){return!!t&&t.cacheVersion===this.cacheVersion}_isSameIgnores(t=[],e=[]){const i=new Set(t),s=new Set(e);if(i.size!==s.size)return!1;for(const t of i)if(!s.has(t))return!1;return!0}getCache(t){try{const e=fs.readFileSync(this.cacheStorePath),i=iconv.decode(e,"utf8").toString(),s=JSON.parse(i);return s&&s.folderInfo&&(this._isSameCacheVersion(s)&&this._isSameIgnores(s.ignoreds,t))?(s.ignoreds=t||[],s):null}catch(t){return this.logger.error("dircache.getCache error:",t),null}}}exports.FileCacheUtils=FileCacheUtils;